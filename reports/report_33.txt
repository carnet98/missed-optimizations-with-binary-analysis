--- Interesting Case Report --- 

Interesting Variables: 
['g_112']

Interesting Assembly Lines: 
{'g_112': {'setting1:': [], 'setting2': [['movl', '$1,', 'g_112(%rip)']]}}

Source Code: 
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles --no-volatile-pointers --no-arrays --no-bitfields --checksum --comma-operators --no-compound-assignment --consts --divs --no-embedded-assigns --no-jumps --no-longlong --force-non-uniform-arrays --math64 --muls --no-packed-struct --no-paranoid --pointers --structs --inline-function --no-return-structs --arg-structs --dangling-global-pointers
 * Seed:      18093813401482628479
 */


#define NO_LONGLONG

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
/* --- GLOBAL VARIABLES --- */
static int32_t *g_2 = (void*)0;
static uint32_t g_4 = 0U;
static const int32_t g_54 = (-1);
static int8_t g_85 = 0;
static int32_t **g_106 = &g_2;
static int32_t ***g_105 = &g_106;
static int32_t g_112 = 0x34FF3317;
static const int32_t *g_118 = (void*)0;
static const int32_t **g_117 = &g_118;
static const int32_t *** const g_116 = &g_117;
static int16_t g_126 = 1;
static int8_t g_194 = 0x0C;
static int32_t g_261 = 0;
static int32_t ****g_283 = &g_105;
static int32_t *****g_282 = &g_283;
static uint32_t g_470 = 4294967295U;
static uint8_t g_670 = 0x4C;
static int16_t g_697 = (-5);


/* --- FORWARD DECLARATIONS --- */
static int16_t  func_1(void);
inline static uint16_t  func_5(uint8_t  p_6, int32_t ** p_7, const int32_t ** p_8, uint8_t  p_9);
static int8_t  func_21(int32_t ** p_22, int8_t  p_23);
inline static int32_t * func_24(uint32_t  p_25, int16_t  p_26, int32_t ** p_27, const int32_t  p_28, int32_t ** p_29);
inline static uint32_t  func_36(int16_t  p_37, int32_t * p_38);
static int32_t * func_39(uint16_t  p_40, uint32_t  p_41, const int32_t ** const  p_42, int8_t  p_43, int32_t  p_44);
static const int32_t ** func_46(int32_t * p_47, const int32_t ** p_48, int32_t ** p_49, int32_t * p_50, int32_t  p_51);
static int32_t ** func_55(int32_t ** p_56, int32_t ** p_57, int32_t * p_58);
static int32_t ** func_59(int8_t  p_60, int32_t  p_61, uint32_t  p_62, int32_t * p_63, int32_t  p_64);
inline static const int32_t *** const  func_69(uint32_t  p_70, int16_t  p_71, const int8_t  p_72, int32_t  p_73, uint32_t  p_74);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_2 g_4 g_54 g_85 g_105 g_116 g_117 g_106 g_112 g_126 g_118 g_194 g_261 g_282 g_283 g_470 g_670 g_697
 * writes: g_2 g_118 g_126 g_112 g_85 g_194 g_261
 */
static int16_t  func_1(void)
{ /* block id: 0 */
    int32_t **l_3 = &g_2;
    uint32_t l_20 = 4294967292U;
    const int32_t *l_748 = &g_54;
    const int32_t **l_747 = &l_748;
    int32_t *l_750 = (void*)0;
    int32_t *l_751 = &g_112;
    (*l_3) = g_2;
    (*l_751) = ((g_4 && func_5((safe_add_func_int16_t_s_s(0xA4BE, ((safe_mod_func_int8_t_s_s(g_4, (safe_mul_func_uint8_t_u_u((((((*l_3) == (*l_3)) >= 0xDF) < (safe_mul_func_uint8_t_u_u((safe_mul_func_int8_t_s_s(l_20, func_21(&g_2, g_4))), 1))) , g_697), g_697)))) >= 0xEE))), l_3, l_747, g_670)) <= 1U);
    (*l_747) = (*l_3);
    return g_85;
}


/* ------------------------------------------ */
/* 
 * reads : g_116 g_117 g_85
 * writes: g_118
 */
inline static uint16_t  func_5(uint8_t  p_6, int32_t ** p_7, const int32_t ** p_8, uint8_t  p_9)
{ /* block id: 244 */
    int32_t *l_749 = (void*)0;
    (**g_116) = l_749;
    return g_85;
}


/* ------------------------------------------ */
/* 
 * reads : g_4 g_2 g_54 g_85 g_105 g_116 g_117 g_106 g_112 g_126 g_118 g_194 g_261 g_282 g_283 g_470 g_670 g_697
 * writes: g_118 g_126 g_112 g_85 g_194 g_261
 */
static int8_t  func_21(int32_t ** p_22, int8_t  p_23)
{ /* block id: 2 */
    int8_t l_45 = 1;
    const int32_t *l_53 = &g_54;
    const int32_t **l_52 = &l_53;
    int32_t *l_128 = &g_112;
    uint8_t l_326 = 0xC7;
    uint32_t l_699 = 0xF06963DE;
    (**g_116) = func_24(((safe_add_func_int16_t_s_s(((safe_sub_func_int8_t_s_s((p_23 == ((safe_mul_func_uint8_t_u_u((((func_36(p_23, func_39(g_4, l_45, func_46((*p_22), l_52, func_55((g_54 , func_59(((((((((safe_add_func_uint8_t_u_u(((+(((g_54 , p_23) >= g_54) < p_23)) & g_54), p_23)) || (*l_53)) & (*l_53)) , g_54) && g_54) , g_4) ^ p_23) && g_54), (*l_53), (*l_53), (*p_22), g_54)), p_22, l_128), l_128, l_326), g_4, p_23)) , p_23) && (-4)) < l_699), p_23)) , 0xDD21E6CC)), 0xF9)) < p_23), p_23)) & 0x1C2B), g_670, p_22, g_54, (**g_283));
    return p_23;
}


/* ------------------------------------------ */
/* 
 * reads : g_126 g_112 g_2 g_106 g_282 g_283 g_105 g_117 g_85 g_194 g_4 g_54
 * writes: g_126 g_118
 */
inline static int32_t * func_24(uint32_t  p_25, int16_t  p_26, int32_t ** p_27, const int32_t  p_28, int32_t ** p_29)
{ /* block id: 221 */
    int32_t l_708 = 7;
    int32_t * const * const l_722 = &g_2;
    int32_t * const * const * const l_721 = &l_722;
    int32_t * const * const * const * const l_720 = &l_721;
    int32_t * const * const * const * const *l_719 = &l_720;
    int32_t l_730 = 0x7556A0A9;
    int32_t *l_746 = &l_730;
    for (g_126 = 0; (g_126 <= (-21)); --g_126)
    { /* block id: 224 */
        int16_t l_711 = 3;
        int32_t l_716 = 0xF71D5ADB;
        int8_t l_728 = 1;
        int32_t *l_740 = &l_708;
        (*g_117) = ((safe_sub_func_int8_t_s_s((safe_add_func_uint32_t_u_u(g_112, ((((((safe_mul_func_int8_t_s_s(((*p_27) != (*g_106)), (l_708 && (safe_mul_func_uint8_t_u_u(l_711, g_126))))) <= (g_126 , p_25)) <= (safe_add_func_int32_t_s_s(l_711, 0xA77C3AF9))) == l_708) && p_25) > 0xF41C57DC))), l_708)) , (****g_282));
        if ((safe_div_func_uint32_t_u_u(l_716, (safe_rshift_func_uint8_t_u_u(g_85, ((void*)0 != l_719))))))
        { /* block id: 226 */
            int16_t l_729 = 0x63E8;
            int32_t *l_739 = &l_716;
            (*l_739) = (p_28 >= (l_716 , (((!g_194) , ((safe_add_func_uint32_t_u_u((safe_rshift_func_uint16_t_u_s((l_728 ^ ((l_729 ^ l_730) , (g_112 <= (((safe_lshift_func_uint8_t_u_u((((1U != (safe_add_func_uint16_t_u_u(((safe_mod_func_uint8_t_u_u(((l_728 , g_112) || l_729), p_26)) || g_4), g_54))) > l_729) == l_729), 3)) , p_28) <= 0xD5F3)))), 4)), l_729)) , 0x15FF5E06)) , g_126)));
            l_740 = (***g_283);
        }
        else
        { /* block id: 229 */
            uint32_t l_741 = 4294967292U;
            if (l_741)
                break;
            (*g_117) = (***g_283);
        }
        for (p_25 = (-20); (p_25 >= 23); p_25 = safe_add_func_uint32_t_u_u(p_25, 1))
        { /* block id: 235 */
            int32_t **l_745 = &l_740;
            l_716 = (~0xE380D737);
            (*l_745) = (***l_720);
        }
        l_746 = (**g_105);
    }
    return (*p_27);
}


/* ------------------------------------------ */
/* 
 * reads : g_283 g_105 g_106 g_261 g_4 g_112 g_85 g_126 g_194 g_54 g_470 g_2 g_117 g_282 g_670 g_116 g_697
 * writes: g_194 g_112 g_118 g_85
 */
inline static uint32_t  func_36(int16_t  p_37, int32_t * p_38)
{ /* block id: 195 */
    int32_t **l_575 = &g_2;
    int32_t ** const l_576 = &g_2;
    const int32_t ***l_585 = &g_117;
    const int32_t ****l_584 = &l_585;
    const int32_t *****l_583 = &l_584;
    uint8_t l_586 = 0x8B;
    uint32_t l_587 = 0x2DED0C49;
    int32_t l_629 = 0xE3620E71;
    int16_t l_685 = 1;
    int32_t *l_698 = &l_629;
    if (((((&g_283 != (void*)0) && ((((safe_div_func_uint16_t_u_u((((((safe_div_func_int32_t_s_s(((safe_mul_func_int8_t_s_s(((l_575 != l_576) & ((void*)0 == (**g_283))), (((((safe_lshift_func_uint8_t_u_s(((((((void*)0 == l_575) == ((safe_mul_func_int16_t_s_s(((l_583 != &g_283) , (-2)), p_37)) == g_261)) >= 8U) <= l_586) , g_4), 4)) == g_112) | 0x7D9B) ^ p_37) | 6))) <= 1), l_587)) | g_85) ^ 6) , &l_584) != (void*)0), p_37)) || g_4) & p_37) != 0xFD10)) < g_126) <= (-1)))
    { /* block id: 196 */
        uint32_t l_603 = 0xA14C600E;
        int32_t l_613 = 0xC0A71669;
        int32_t *l_628 = &g_112;
        for (g_194 = 5; (g_194 >= (-8)); g_194 = safe_sub_func_uint32_t_u_u(g_194, 2))
        { /* block id: 199 */
            uint8_t l_612 = 0U;
            l_613 = (safe_div_func_int8_t_s_s((g_126 & ((((((safe_sub_func_uint8_t_u_u((safe_lshift_func_uint8_t_u_u((safe_sub_func_uint16_t_u_u((safe_div_func_int32_t_s_s(((safe_unary_minus_func_uint8_t_u(0x10)) == ((safe_lshift_func_uint8_t_u_s(((((((0xACA36A91 > p_37) != l_603) > (safe_lshift_func_int8_t_s_s((safe_add_func_uint8_t_u_u(l_603, p_37)), 4))) < ((safe_mul_func_uint16_t_u_u((l_603 == (((safe_div_func_int8_t_s_s(((-9) >= l_612), g_54)) != 65526U) , p_37)), 0xF334)) == g_4)) <= 0x9E9D3494) <= l_603), l_603)) ^ p_37)), (-9))), p_37)), 7)), (-1))) && 255U) , 1) && 0xA1A9) <= g_194) , 0xC0A64439)), 0x73));
        }
        (*l_628) = (((-1) <= (((((safe_div_func_uint8_t_u_u((((p_37 == g_261) || ((((safe_sub_func_int32_t_s_s(((safe_add_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_s((safe_mod_func_uint16_t_u_u(2U, g_261)), ((p_37 > (safe_mul_func_int8_t_s_s(p_37, (safe_sub_func_uint16_t_u_u(p_37, ((((((*g_105) == (void*)0) == g_470) | (-1)) & 1U) , p_37)))))) , 1))), p_37)) | 0x57E6), 0xAE517FE0)) > 65535U) | p_37) && l_603)) || 0x86), 250U)) ^ 4) , p_37) != p_37) ^ 1U)) != g_85);
        l_629 = (p_37 >= (*l_628));
    }
    else
    { /* block id: 204 */
        (***l_584) = (*g_106);
    }
    for (g_85 = (-3); (g_85 >= (-25)); g_85--)
    { /* block id: 209 */
        uint32_t l_632 = 4U;
        int32_t l_635 = 1;
        l_635 = (((0x2721 | g_194) && l_632) ^ (safe_rshift_func_uint8_t_u_u(g_85, 0)));
    }
    if (p_37)
    { /* block id: 212 */
        uint32_t l_638 = 0xBD152E3F;
        int16_t l_655 = 1;
        const int32_t *****l_658 = &l_584;
        int32_t l_659 = 0xBC6AC75C;
        l_629 = (((safe_add_func_int32_t_s_s(l_638, (safe_mod_func_uint16_t_u_u(((0xE7DBFF4B != (((((safe_lshift_func_int8_t_s_s((safe_mul_func_uint16_t_u_u((safe_add_func_uint16_t_u_u(p_37, ((safe_mul_func_int16_t_s_s((((safe_sub_func_uint32_t_u_u(0x3F3AF640, 8)) , l_638) ^ p_37), ((safe_mod_func_int32_t_s_s((0x14 & (0x88 || g_4)), 0x109385AA)) >= p_37))) & p_37))), 0x7F37)), g_4)) | g_261) , (**g_282)) != (*g_283)) < l_655)) != l_655), g_85)))) , 0xC7) ^ g_126);
        l_659 = (safe_mod_func_uint16_t_u_u(((l_658 != (void*)0) || p_37), p_37));
    }
    else
    { /* block id: 215 */
        int32_t l_669 = (-1);
        int32_t **l_673 = &g_2;
        int32_t *l_674 = &g_112;
        int32_t l_696 = 0x8BDB7FA4;
        (*l_674) = (safe_sub_func_uint32_t_u_u((p_37 <= g_112), (safe_add_func_int32_t_s_s((((~(((void*)0 != &l_584) && (((((safe_add_func_int8_t_s_s((safe_lshift_func_uint8_t_u_u((l_669 & (g_470 , g_670)), 2)), 0x91)) >= ((safe_mul_func_uint8_t_u_u(((p_37 , (void*)0) != (void*)0), 0xF3)) != 0xCF74)) || l_669) && g_470) & g_126))) , (void*)0) != l_673), p_37))));
        (*l_674) = ((safe_div_func_uint32_t_u_u((((safe_div_func_uint32_t_u_u(p_37, 0x794BC7D7)) != (safe_sub_func_uint32_t_u_u((+(g_4 <= (g_194 <= p_37))), ((~((((((((safe_add_func_int8_t_s_s(l_685, ((*l_674) | (safe_add_func_uint16_t_u_u(65535U, (safe_sub_func_int16_t_s_s(((safe_div_func_uint32_t_u_u((safe_div_func_uint32_t_u_u((safe_rshift_func_uint16_t_u_s((p_37 <= g_54), p_37)), l_696)), g_670)) & g_4), p_37))))))) != 0xB0981039) <= g_670) ^ g_470) , (*g_116)) != (**g_283)) > g_697) >= p_37)) > 0xC9)))) & 0), g_697)) , (*l_674));
    }
    (*l_698) = p_37;
    return p_37;
}


/* ------------------------------------------ */
/* 
 * reads : g_105 g_106 g_2 g_112 g_126 g_54 g_117 g_194 g_118 g_85 g_283 g_282 g_261 g_116 g_4 g_470
 * writes: g_261 g_118 g_112 g_126
 */
static int32_t * func_39(uint16_t  p_40, uint32_t  p_41, const int32_t ** const  p_42, int8_t  p_43, int32_t  p_44)
{ /* block id: 91 */
    int32_t *l_334 = &g_112;
    int32_t *l_377 = &g_112;
    int32_t ** const **l_388 = (void*)0;
    const int32_t l_433 = 0xDA5AE765;
    const int32_t *l_464 = &g_54;
    int32_t l_467 = 0xB1DD455E;
    uint16_t l_544 = 0U;
    uint32_t l_567 = 4294967287U;
    int8_t l_568 = 0xFE;
    if ((((l_334 != (void*)0) <= ((safe_mod_func_uint8_t_u_u((safe_lshift_func_uint16_t_u_u(((**g_105) != (*g_106)), (safe_add_func_int8_t_s_s((safe_rshift_func_int16_t_s_s(p_44, (((p_41 , (((-1) <= ((*l_334) < (~(safe_lshift_func_uint16_t_u_u(((safe_lshift_func_uint16_t_u_u(((safe_lshift_func_uint8_t_u_s(((safe_div_func_uint32_t_u_u((safe_mul_func_uint8_t_u_u(((*g_105) == (void*)0), (*l_334))), (*l_334))) > g_126), 6)) & p_41), 14)) >= p_44), (*l_334)))))) <= 0x61E94E49)) && 0) , p_41))), (*l_334))))), g_54)) | (*l_334))) == (*l_334)))
    { /* block id: 92 */
        uint32_t l_363 = 0xB58073E3;
        int32_t l_364 = 1;
        int32_t ** const l_382 = &g_2;
        int32_t ** const *l_435 = &g_106;
        int32_t ** const ** const l_434 = &l_435;
        uint32_t l_457 = 4294967295U;
        uint32_t l_463 = 0x2459EB4B;
        for (p_40 = 0; (p_40 >= 37); p_40 = safe_add_func_uint32_t_u_u(p_40, 8))
        { /* block id: 95 */
            int32_t *l_362 = &g_112;
            int32_t *****l_374 = &g_283;
            if (((~(+(safe_lshift_func_int8_t_s_u(p_41, 0)))) > p_40))
            { /* block id: 96 */
                const uint16_t l_387 = 0x897F;
                uint32_t l_406 = 0xEE7ADF5A;
                int16_t l_440 = 1;
                for (g_261 = 20; (g_261 != (-9)); --g_261)
                { /* block id: 99 */
                    int8_t l_373 = 4;
                    (*p_42) = l_362;
                    (*g_117) = (*p_42);
                    l_364 = (((((((0x9034FCD3 ^ (-8)) != (l_363 > l_364)) || g_194) <= 0xAF56) || (safe_sub_func_uint32_t_u_u(((safe_add_func_int32_t_s_s(((((((safe_rshift_func_int16_t_s_s((p_44 != (1U == ((((((((safe_sub_func_int8_t_s_s((-1), (*l_334))) < 0x09B6B8FF) , 0x122B) ^ l_373) , (**g_117)) , 4294967291U) >= 0x1D00878C) == l_373))), 0)) <= g_126) >= p_40) | g_194) != g_85) , (*l_362)), l_373)) >= (-1)), (**p_42)))) && 0xEC71239F) , 0xD4F275BB);
                }
                l_374 = (void*)0;
                for (g_112 = 0; (g_112 > (-7)); --g_112)
                { /* block id: 107 */
                    (*g_117) = l_377;
                    if ((**g_117))
                        continue;
                    if ((**p_42))
                        continue;
                    p_44 = (-6);
                }
                if ((safe_add_func_uint8_t_u_u(l_364, (((((safe_lshift_func_uint8_t_u_s(((void*)0 != p_42), ((*g_105) == l_382))) ^ (p_41 <= (-1))) < ((safe_mod_func_int32_t_s_s((safe_add_func_uint8_t_u_u(((***g_283) == (***g_283)), 0x6B)), l_387)) | (*l_334))) & (**p_42)) , g_54))))
                { /* block id: 113 */
                    if (l_387)
                        break;
                }
                else
                { /* block id: 115 */
                    int32_t *****l_407 = (void*)0;
                    int32_t *l_408 = &l_364;
                    int32_t ** const ***l_439 = &l_388;
                    if ((**p_42))
                    { /* block id: 116 */
                        const int32_t l_405 = 0x1BC11497;
                        (*l_362) = ((((l_387 & ((l_388 == (*g_282)) <= (0x5484 ^ 65535U))) , (safe_div_func_int16_t_s_s((safe_mul_func_uint16_t_u_u((safe_rshift_func_int16_t_s_s(p_40, 1)), (safe_add_func_int8_t_s_s((safe_mod_func_int8_t_s_s((((safe_rshift_func_uint8_t_u_s((((((((((safe_sub_func_int32_t_s_s((((safe_sub_func_int8_t_s_s((g_54 == ((void*)0 == (**g_283))), g_194)) && 255U) && g_261), l_405)) && l_405) || l_387) , g_194) < (-1)) <= 0U) , g_85) , p_44) > g_85), p_41)) && l_406) == g_112), 0x9D)), 254U)))), 0xEAA6))) , (void*)0) == l_407);
                        (*g_117) = l_408;
                        (*l_408) = (safe_rshift_func_uint16_t_u_s((safe_sub_func_uint8_t_u_u(((void*)0 == &p_42), (((((safe_sub_func_uint32_t_u_u((p_40 >= (p_40 >= l_405)), ((**p_42) != (safe_mul_func_int16_t_s_s(0x1E7B, p_41))))) && (safe_div_func_uint16_t_u_u(((((safe_sub_func_uint32_t_u_u((g_194 & g_194), (-8))) >= p_44) >= p_43) | g_112), 65530U))) < 0x6962A348) , 1) , 0U))), 7));
                        (*g_117) = ((((*l_334) , ((safe_mul_func_uint8_t_u_u((((safe_add_func_int8_t_s_s(((g_261 > (((((((safe_mul_func_int16_t_s_s((((safe_rshift_func_int8_t_s_u(l_405, (&l_382 == ((safe_sub_func_int16_t_s_s(((**g_116) == (void*)0), ((g_194 && (&l_405 != ((p_44 , g_126) , (void*)0))) , g_261))) , (**g_282))))) || p_40) >= l_433), g_85)) , 7) | g_4) ^ p_41) ^ 0xCA02) , l_434) == (void*)0)) <= (*l_408)), p_43)) , l_387) , g_126), g_126)) < 0xCDAF9B95)) && g_85) , (void*)0);
                    }
                    else
                    { /* block id: 121 */
                        int32_t *l_438 = &l_364;
                        (*l_362) = ((*l_408) || ((p_43 == (*l_377)) > (safe_lshift_func_int16_t_s_u(1, 1))));
                        (*p_42) = l_438;
                    }
                    (*l_439) = &l_435;
                    (*p_42) = (*p_42);
                    l_440 = ((**l_388) == p_42);
                }
            }
            else
            { /* block id: 129 */
                int32_t *l_461 = &l_364;
                for (l_363 = 0; (l_363 < 1); l_363 = safe_add_func_uint16_t_u_u(l_363, 3))
                { /* block id: 132 */
                    int32_t l_458 = (-1);
                }
                for (g_126 = 7; (g_126 == 15); g_126 = safe_add_func_int32_t_s_s(g_126, 2))
                { /* block id: 143 */
                    uint32_t l_462 = 0U;
                    (*g_117) = l_461;
                    (*l_461) = l_462;
                    return (**l_435);
                }
            }
            if ((*l_377))
                continue;
            if ((**p_42))
                continue;
        }
        l_463 = 0xEB505FBE;
    }
    else
    { /* block id: 153 */
        return l_334;
    }
    (**g_116) = l_464;
    if ((((*g_282) == ((((safe_sub_func_int16_t_s_s((l_467 != (((**g_117) & ((safe_add_func_int32_t_s_s((*l_377), (((((0 >= g_470) <= ((p_40 != ((*l_464) , ((g_85 && 0x43C7) && p_40))) || (*l_334))) != (-1)) | 2U) >= g_85))) || 0x9F39)) & (*l_377))), (*l_377))) == 65529U) , p_43) , (*g_282))) & g_54))
    { /* block id: 157 */
        int16_t l_471 = (-1);
        uint16_t l_494 = 0x71BE;
        int32_t * const l_502 = (void*)0;
        int16_t l_516 = 0xBB7C;
        int8_t l_519 = 0x55;
        int32_t *** const *l_521 = &g_105;
        int32_t *** const **l_520 = &l_521;
        (*l_377) = l_471;
        for (p_43 = 0; (p_43 == (-15)); p_43 = safe_sub_func_int16_t_s_s(p_43, 6))
        { /* block id: 161 */
            int16_t l_491 = 0x7664;
            int32_t ****l_495 = &g_105;
            uint32_t l_501 = 0xEDAD891A;
        }
        (**g_116) = ((((((safe_add_func_uint32_t_u_u((((safe_mod_func_uint32_t_u_u((((void*)0 != l_502) || (((safe_add_func_uint8_t_u_u((safe_mod_func_int32_t_s_s((*l_334), (safe_rshift_func_uint16_t_u_s(((+(((p_41 != p_41) , (g_85 ^ (l_516 , (((**g_117) == ((safe_rshift_func_uint16_t_u_u(((((*l_377) > p_44) < g_4) == l_519), (*l_334))) ^ g_126)) < 254U)))) == g_261)) , p_43), p_41)))), 5U)) && 0xA0C3) , g_54)), (*g_118))) < g_470) <= 0), (*l_377))) >= g_470) , 1U) != l_471) >= p_44) , (void*)0);
        (*l_377) = ((p_44 || (l_520 != &l_521)) != (((safe_lshift_func_int8_t_s_s((((safe_sub_func_int8_t_s_s((safe_lshift_func_uint8_t_u_u((safe_mul_func_int8_t_s_s(((void*)0 == (*l_520)), (((safe_div_func_uint16_t_u_u(((((safe_add_func_uint32_t_u_u(0x54991BE6, 0x8EC1A41E)) , (((((safe_add_func_uint16_t_u_u(((((p_43 ^ (safe_div_func_int16_t_s_s(p_40, p_41))) || 0x8C) < 0x5FB69061) && p_44), 0xDFA4)) | 0x744610ED) , (void*)0) != (**g_282)) & p_41)) > g_112) | 0x22), p_40)) >= (*l_377)) == p_43))), 4)), 0xE5)) != (*l_464)) >= g_126), p_43)) || p_43) > p_43));
    }
    else
    { /* block id: 189 */
        int32_t l_551 = (-1);
        const int32_t *l_552 = &g_112;
        int32_t * const ***l_561 = (void*)0;
        int32_t * const ****l_566 = &l_561;
        (**g_116) = (**g_105);
        (*l_377) = ((safe_sub_func_int16_t_s_s((safe_sub_func_uint16_t_u_u(((((l_544 >= ((safe_mod_func_uint16_t_u_u(((safe_mod_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_u(l_551, (((void*)0 == l_552) , 0x4E0A))), 0x1D5C)) != (safe_mul_func_uint16_t_u_u((safe_mul_func_int8_t_s_s(((safe_sub_func_int8_t_s_s((((*l_464) >= (safe_mul_func_uint16_t_u_u((g_261 , (l_561 == (*g_282))), (*l_552)))) ^ p_40), p_41)) != p_44), (-3))), 0x85DF))), 65535U)) >= (*l_552))) | 0x2D) != p_41) != p_44), (*l_552))), p_43)) == p_43);
        l_568 = (((((p_43 || 0x3B4B) == (safe_add_func_int8_t_s_s((safe_rshift_func_int8_t_s_u((p_44 >= g_4), 5)), ((*l_552) && ((l_566 != &g_283) , (g_85 >= p_41)))))) <= l_567) , p_43) | p_41);
    }
    return (**g_105);
}


/* ------------------------------------------ */
/* 
 * reads : g_282 g_283 g_105 g_106 g_2 g_117 g_116 g_118 g_194 g_112 g_54
 * writes: g_118 g_112
 */
static const int32_t ** func_46(int32_t * p_47, const int32_t ** p_48, int32_t ** p_49, int32_t * p_50, int32_t  p_51)
{ /* block id: 87 */
    int16_t l_329 = (-10);
    int32_t ***l_332 = (void*)0;
    int32_t * const *l_333 = (void*)0;
    (*g_117) = (****g_282);
    (*p_50) = (((p_51 || p_51) , ((p_51 != (safe_lshift_func_uint16_t_u_u((((((((*g_106) != (**g_116)) == 0x454C05BE) , (((l_329 == (safe_mul_func_uint16_t_u_u(((**g_282) == l_332), g_194))) , (***g_282)) == l_333)) < 0x6FE1) < (*p_50)) || l_329), 13))) || (-1))) ^ (**p_48));
    return p_48;
}


/* ------------------------------------------ */
/* 
 * reads : g_85 g_106 g_2 g_116 g_117 g_112 g_4 g_54 g_126 g_118 g_105 g_194 g_261 g_282 g_283
 * writes: g_112 g_85 g_118 g_194 g_126 g_261
 */
static int32_t ** func_55(int32_t ** p_56, int32_t ** p_57, int32_t * p_58)
{ /* block id: 19 */
    uint8_t l_132 = 255U;
    int32_t *** const *l_157 = &g_105;
    const int32_t *l_167 = &g_112;
    int8_t l_193 = 0x06;
    int32_t *** const **l_218 = &l_157;
    const int16_t l_278 = (-1);
    (*p_58) = 4;
    for (g_85 = (-21); (g_85 > (-11)); g_85 = safe_add_func_int16_t_s_s(g_85, 2))
    { /* block id: 23 */
        int32_t l_131 = 1;
        int32_t ****l_156 = &g_105;
        if (l_131)
        { /* block id: 24 */
            (**g_116) = (*g_106);
            l_132 = l_131;
            (*p_58) = (-1);
        }
        else
        { /* block id: 28 */
            uint32_t l_150 = 0U;
            int8_t l_153 = 0x6A;
            (*p_58) = (g_112 < (((safe_rshift_func_uint8_t_u_s(((safe_mul_func_int8_t_s_s((safe_mul_func_int16_t_s_s(((l_131 , (g_4 <= (((safe_add_func_int8_t_s_s((4 >= ((g_112 && ((+((((safe_add_func_int32_t_s_s((((safe_sub_func_int32_t_s_s((safe_mul_func_int8_t_s_s(l_150, (safe_mod_func_int8_t_s_s((((&g_106 != (void*)0) || g_112) , 1), g_4)))), (-5))) , 6U) >= g_54), l_131)) , g_112) > 1) && 0xD1337A3F)) , 5U)) & l_131)), g_126)) && l_131) <= l_131))) && 0U), 0x192D)), l_131)) || l_153), 4)) || 3U) || 0U));
            if (l_131)
                continue;
            (*p_58) = ((safe_add_func_uint32_t_u_u((l_156 == l_157), ((safe_mod_func_uint16_t_u_u(g_112, 0xE0C2)) > g_4))) <= (1 != ((0x7719BA66 | (safe_rshift_func_int8_t_s_s((((&g_116 != &g_116) | l_131) < 0x8B), g_4))) , g_85)));
        }
        (**g_116) = (*g_106);
        if ((g_4 && (((g_112 > ((safe_sub_func_int32_t_s_s((safe_lshift_func_int16_t_s_u((0x1C || l_132), 4)), (((+l_131) , (*g_116)) == (void*)0))) || (-10))) , ((void*)0 != &p_57)) > g_85)))
        { /* block id: 34 */
            (*p_58) = ((void*)0 != (**g_116));
            (**g_116) = (*g_106);
        }
        else
        { /* block id: 37 */
            uint16_t l_168 = 0x75C6;
            int32_t l_170 = 0x60C5C9CE;
            (*g_117) = (*p_56);
            l_167 = (*g_117);
            (**g_116) = (***l_156);
            l_170 = (l_168 ^ (~l_168));
        }
    }
    if ((safe_sub_func_uint8_t_u_u(g_126, (!(((safe_lshift_func_int16_t_s_u((safe_div_func_uint16_t_u_u(g_112, (safe_sub_func_uint32_t_u_u((safe_sub_func_int8_t_s_s(6, (safe_add_func_int16_t_s_s(g_126, (safe_unary_minus_func_int16_t_s((safe_lshift_func_uint16_t_u_u(((safe_mod_func_int16_t_s_s(l_132, ((safe_add_func_uint16_t_u_u(0xF9BC, g_54)) && (((*p_58) , (safe_rshift_func_int8_t_s_s(g_54, g_54))) || 0x106A97DF)))) && 5U), g_4)))))))), l_132)))), l_193)) == 0xCAB0C5F8) > g_194)))))
    { /* block id: 44 */
        const uint8_t l_201 = 255U;
        uint32_t l_216 = 6U;
        int32_t *l_232 = &g_112;
        uint8_t l_295 = 0U;
        (*g_117) = (**g_105);
        if ((g_126 == (safe_mod_func_int16_t_s_s((((((l_193 == ((safe_add_func_uint8_t_u_u((l_201 != g_54), g_194)) > 0x853B)) != ((((safe_mod_func_int32_t_s_s((*p_58), (safe_lshift_func_uint8_t_u_s((safe_div_func_uint32_t_u_u(((safe_unary_minus_func_int8_t_s(((safe_mod_func_int8_t_s_s(1, g_112)) >= g_4))) >= l_201), 0xB0568AF3)), 3)))) >= 1) , (**l_157)) != &p_58)) > 8) || 0x17) , l_201), l_201))))
        { /* block id: 46 */
            int8_t l_213 = 0x93;
            int32_t l_217 = 1;
            (*p_58) = (((g_112 ^ ((l_201 < ((g_194 || g_112) != (safe_div_func_uint8_t_u_u(g_126, ((l_213 | ((((safe_add_func_int32_t_s_s(l_216, g_126)) , ((0x73F7 != g_126) | l_201)) ^ l_201) > 1)) , l_213))))) , l_213)) , g_85) & l_217);
        }
        else
        { /* block id: 48 */
            int32_t *l_231 = &g_112;
            int32_t ***l_272 = &g_106;
            int32_t ****l_274 = &l_272;
            int32_t *****l_273 = &l_274;
            l_218 = &l_157;
            for (g_194 = (-19); (g_194 >= (-12)); g_194 = safe_add_func_int32_t_s_s(g_194, 8))
            { /* block id: 52 */
                uint8_t l_233 = 247U;
                int32_t *l_258 = &g_112;
                const int32_t ***l_259 = &g_117;
                if ((g_85 | (~(safe_mod_func_int32_t_s_s(l_216, (safe_sub_func_uint8_t_u_u((safe_add_func_uint32_t_u_u((safe_mul_func_int8_t_s_s((safe_unary_minus_func_int8_t_s((((g_85 , l_231) != l_232) < (l_233 <= (0 >= ((safe_sub_func_int16_t_s_s((((safe_rshift_func_uint8_t_u_s((safe_add_func_uint8_t_u_u(((((((**l_157) == &l_232) , 0xBA01AEDE) , (*l_232)) | g_54) == 0xC320), g_85)), 5)) , 7U) , (*l_232)), g_112)) & (*l_231))))))), g_194)), 1)), (*l_232))))))))
                { /* block id: 53 */
                    uint16_t l_262 = 0x2E41;
                    int32_t **l_266 = (void*)0;
                    for (g_126 = 8; (g_126 >= (-12)); --g_126)
                    { /* block id: 56 */
                        int16_t l_260 = 0xDEF9;
                        (*p_58) = ((safe_lshift_func_uint16_t_u_s(((((safe_lshift_func_uint16_t_u_u(l_233, 7)) , (*g_116)) == (void*)0) <= (safe_add_func_uint16_t_u_u((((safe_mul_func_uint8_t_u_u(((safe_lshift_func_uint8_t_u_u(((g_4 | (safe_mul_func_int16_t_s_s((-7), ((safe_rshift_func_uint8_t_u_u((safe_div_func_uint32_t_u_u(((l_258 != (((((l_259 == (((g_4 , l_260) <= 0xEADAE251) , (void*)0)) && (*l_258)) && (*p_58)) != g_261) , (**g_105))) <= g_126), 0xF9B73072)), 6)) <= 0xD13DC49B)))) <= g_54), 3)) == 0x7456), l_260)) , (*l_232)) && (*l_231)), l_260))), l_262)) == (*l_231));
                        (*g_117) = (**g_105);
                        if ((*p_58))
                            break;
                    }
                    for (g_261 = 0; (g_261 == 23); g_261++)
                    { /* block id: 63 */
                        int32_t *l_265 = (void*)0;
                        (**g_116) = (***l_157);
                        (**g_116) = (void*)0;
                        (*g_117) = l_265;
                        (*l_232) = 0x09CE47DD;
                    }
                    return l_266;
                }
                else
                { /* block id: 70 */
                    return (**l_157);
                }
            }
            (*p_58) = (safe_mul_func_uint16_t_u_u((*l_232), ((~((safe_rshift_func_uint8_t_u_u((*l_232), (*l_231))) , ((((((0x669E >= (-1)) || 247U) > ((void*)0 == l_272)) , &l_157) == l_273) != g_126))) <= g_261)));
        }
        (*p_58) = (safe_div_func_int32_t_s_s((*p_58), (((!(l_278 ^ ((~((safe_rshift_func_uint8_t_u_u(((void*)0 != g_282), 4)) , ((safe_mul_func_uint16_t_u_u((&p_58 != (***l_218)), (*l_232))) && (safe_mod_func_int32_t_s_s((((g_261 | (*l_232)) | (*l_232)) >= 1U), (*l_232)))))) != (*l_232)))) | (*p_58)) , g_85)));
        if ((*p_58))
        { /* block id: 77 */
            return (*g_105);
        }
        else
        { /* block id: 79 */
            int32_t l_294 = (-1);
            int32_t l_296 = 1;
            (*g_117) = ((g_85 ^ ((((safe_add_func_uint8_t_u_u(g_85, 246U)) , (((safe_add_func_int32_t_s_s(((safe_lshift_func_int16_t_s_u(l_294, 3)) ^ (l_295 ^ ((void*)0 == (*g_105)))), l_296)) , ((safe_rshift_func_int8_t_s_s((((0xBD > l_296) , 4294967287U) <= 0), 3)) >= l_296)) | g_126)) < 0x27) , (*l_232))) , (*g_106));
        }
    }
    else
    { /* block id: 82 */
        int32_t * const l_299 = &g_112;
        int32_t *l_301 = &g_112;
        int32_t **l_300 = &l_301;
        int32_t ** const *l_315 = &l_300;
        int32_t ** const **l_314 = &l_315;
        (*l_300) = l_299;
        (*l_299) = (safe_add_func_uint32_t_u_u((safe_mul_func_uint16_t_u_u((safe_mul_func_uint8_t_u_u(((safe_lshift_func_uint16_t_u_u(((safe_div_func_uint32_t_u_u((((((safe_rshift_func_uint8_t_u_s(((((*l_157) == (void*)0) , l_314) != (*g_282)), 2)) ^ ((safe_sub_func_int16_t_s_s((**l_300), (((safe_div_func_uint32_t_u_u((((safe_mul_func_int8_t_s_s((safe_div_func_int16_t_s_s(((g_261 || 0x51B4) < ((**l_315) == (void*)0)), (***l_315))), g_126)) || (***l_315)) , g_4), g_194)) < g_85) == (****l_314)))) , 0x9B56)) , 252U) == (*l_299)) ^ (**l_300)), (*l_299))) ^ 65528U), (*l_299))) , (**l_300)), (-1))), (*l_299))), (*p_58)));
    }
    return (***g_282);
}


/* ------------------------------------------ */
/* 
 * reads : g_4 g_85 g_105 g_54 g_116 g_117
 * writes: g_118 g_126
 */
static int32_t ** func_59(int8_t  p_60, int32_t  p_61, uint32_t  p_62, int32_t * p_63, int32_t  p_64)
{ /* block id: 3 */
    int32_t **l_68 = &g_2;
    int8_t l_100 = 0;
    uint32_t l_107 = 0x1499B6F3;
    int32_t ****l_123 = (void*)0;
    int32_t **l_127 = &g_2;
    if ((&g_2 != l_68))
    { /* block id: 4 */
        int8_t l_104 = 0x80;
        int32_t l_108 = 0xA8461A3E;
        uint8_t l_109 = 1U;
        const int32_t ***l_120 = &g_117;
        const int32_t ****l_119 = &l_120;
        (*l_119) = func_69((safe_rshift_func_int16_t_s_s((safe_add_func_int8_t_s_s(g_4, (safe_rshift_func_int16_t_s_s((&g_2 != &p_63), (((((((((safe_sub_func_uint8_t_u_u((safe_mod_func_int32_t_s_s((((4 <= g_85) >= (safe_mul_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_u(((((safe_lshift_func_int8_t_s_u((safe_add_func_int32_t_s_s(((safe_sub_func_int8_t_s_s((safe_mod_func_uint8_t_u_u((safe_mod_func_uint32_t_u_u(l_100, (safe_mul_func_int16_t_s_s((+((l_104 , g_105) != &g_106)), 0x6A60)))), l_104)), l_107)) , 0x40A493BB), p_61)), l_108)) || p_64) | p_60) || 0x9D), 8)), g_4))) || l_104), l_104)), g_54)) <= 0x9B) , g_4) >= 0xD49F) > l_109) != 0xC7) ^ 0xB4) & l_109) == 0x3B01))))), 6)), p_62, l_104, l_108, p_64);
        (**g_116) = &p_61;
        for (p_60 = 0; (p_60 != 22); ++p_60)
        { /* block id: 12 */
            int32_t ****l_124 = &g_105;
            l_124 = l_123;
        }
    }
    else
    { /* block id: 15 */
        uint32_t l_125 = 0U;
        g_126 = l_125;
    }
    return l_127;
}


/* ------------------------------------------ */
/* 
 * reads : g_116
 * writes:
 */
inline static const int32_t *** const  func_69(uint32_t  p_70, int16_t  p_71, const int8_t  p_72, int32_t  p_73, uint32_t  p_74)
{ /* block id: 5 */
    int32_t *l_111 = &g_112;
    int32_t **l_110 = &l_111;
    const int32_t *l_115 = &g_54;
    const int32_t **l_114 = &l_115;
    const int32_t *** const l_113 = &l_114;
    (*l_110) = &p_73;
    return g_116;
}




/* ---------------------------------------- */
int main (void)
{
    int print_hash_value = 0;
    platform_main_begin();
    crc32_gentab();
    func_1();
    transparent_crc(g_4, "g_4", print_hash_value);
    transparent_crc(g_54, "g_54", print_hash_value);
    transparent_crc(g_85, "g_85", print_hash_value);
    transparent_crc(g_112, "g_112", print_hash_value);
    transparent_crc(g_126, "g_126", print_hash_value);
    transparent_crc(g_194, "g_194", print_hash_value);
    transparent_crc(g_261, "g_261", print_hash_value);
    transparent_crc(g_470, "g_470", print_hash_value);
    transparent_crc(g_670, "g_670", print_hash_value);
    transparent_crc(g_697, "g_697", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 137
XXX total union variables: 0

XXX max expression depth: 49
breakdown:
   depth: 1, occurrence: 155
   depth: 2, occurrence: 20
   depth: 3, occurrence: 1
   depth: 4, occurrence: 2
   depth: 5, occurrence: 2
   depth: 12, occurrence: 2
   depth: 13, occurrence: 2
   depth: 14, occurrence: 1
   depth: 15, occurrence: 1
   depth: 16, occurrence: 1
   depth: 17, occurrence: 2
   depth: 18, occurrence: 1
   depth: 19, occurrence: 3
   depth: 20, occurrence: 2
   depth: 22, occurrence: 2
   depth: 23, occurrence: 2
   depth: 24, occurrence: 1
   depth: 25, occurrence: 1
   depth: 26, occurrence: 1
   depth: 28, occurrence: 3
   depth: 29, occurrence: 1
   depth: 30, occurrence: 6
   depth: 33, occurrence: 1
   depth: 37, occurrence: 1
   depth: 49, occurrence: 1

XXX total number of pointers: 111

XXX times a variable address is taken: 102
XXX times a pointer is dereferenced on RHS: 173
breakdown:
   depth: 1, occurrence: 114
   depth: 2, occurrence: 44
   depth: 3, occurrence: 12
   depth: 4, occurrence: 3
XXX times a pointer is dereferenced on LHS: 71
breakdown:
   depth: 1, occurrence: 58
   depth: 2, occurrence: 12
   depth: 3, occurrence: 1
XXX times a pointer is compared with null: 28
XXX times a pointer is compared with address of another variable: 13
XXX times a pointer is compared with another pointer: 7
XXX times a pointer is qualified to be dereferenced: 743

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 249
   level: 2, occurrence: 203
   level: 3, occurrence: 81
   level: 4, occurrence: 76
   level: 5, occurrence: 48
XXX number of pointers point to pointers: 72
XXX number of pointers point to scalars: 39
XXX number of pointers point to structs: 0
XXX percent of pointers has null in alias set: 27
XXX average alias set size: 1.19

XXX times a non-volatile is read: 953
XXX times a non-volatile is write: 196
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 0

XXX stmts: 134
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 30
   depth: 1, occurrence: 36
   depth: 2, occurrence: 29
   depth: 3, occurrence: 7
   depth: 4, occurrence: 19
   depth: 5, occurrence: 13

XXX percentage a fresh-made variable is used: 13.4
XXX percentage an existing variable is used: 86.6
********************* end of statistics **********************/



Assembly Code with Setting 1: 
	.text
	.file	"tmpjfjnhz6i.c"
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5, 0x0                          # -- Begin function main
.LCPI0_0:
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	2                               # 0x2
	.long	3                               # 0x3
	.long	4                               # 0x4
	.long	5                               # 0x5
	.long	6                               # 0x6
	.long	7                               # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0
.LCPI0_1:
	.long	3988292384                      # 0xedb88320
.LCPI0_2:
	.long	8                               # 0x8
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	vmovdqa	.LCPI0_0(%rip), %ymm0           # ymm0 = [0,1,2,3,4,5,6,7]
	xorl	%ecx, %ecx
	vpbroadcastd	.LCPI0_1(%rip), %ymm1   # ymm1 = [3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384]
	leaq	crc32_tab(%rip), %rax
	vpbroadcastd	.LCPI0_2(%rip), %ymm2   # ymm2 = [8,8,8,8,8,8,8,8]
	.p2align	4, 0x90
.LBB0_1:                                # =>This Inner Loop Header: Depth=1
	vpsrld	$1, %ymm0, %ymm3
	vpxor	%ymm1, %ymm3, %ymm4
	vpslld	$31, %ymm0, %ymm5
	vblendvps	%ymm5, %ymm4, %ymm3, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vmovups	%ymm3, (%rcx,%rax)
	vpaddd	%ymm2, %ymm0, %ymm0
	addq	$32, %rcx
	cmpq	$1024, %rcx                     # imm = 0x400
	jne	.LBB0_1
# %bb.2:
	movl	crc32_context(%rip), %ecx
	movzbl	%cl, %edx
                                        # kill: def $ecx killed $ecx killed $rcx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$1, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$1, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$12, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$76, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	movl	%ecx, %esi
	shrl	$8, %esi
	xorl	$251, %edx
	xorl	(%rax,%rdx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, crc32_context(%rip)
	notl	%esi
	leaq	.L.str.11(%rip), %rdi
	xorl	%eax, %eax
	vzeroupper
	callq	printf@PLT
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc
                                        # -- End function
	.type	crc32_context,@object           # @crc32_context
	.data
	.p2align	2, 0x0
crc32_context:
	.long	4294967295                      # 0xffffffff
	.size	crc32_context, 4

	.type	crc32_tab,@object               # @crc32_tab
	.local	crc32_tab
	.comm	crc32_tab,1024,16
	.type	.L.str.11,@object               # @.str.11
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.11:
	.asciz	"checksum = %X\n"
	.size	.L.str.11, 15

	.ident	"clang version 16.0.6"
	.section	".note.GNU-stack","",@progbits
	.addrsig


Assembly Code with Setting 2: 
	.file	"tmp464kuv1r.c"
	.text
	.p2align 4
	.type	crc32_8bytes, @function
crc32_8bytes:
.LFB84:
	.cfi_startproc
	movl	crc32_context(%rip), %eax
	leaq	crc32_tab(%rip), %rsi
	movl	%edi, %edx
	movl	%eax, %ecx
	shrl	$8, %eax
	xorl	%edi, %ecx
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movzbl	%dh, %ecx
	shrl	$24, %edx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movl	%edi, %ecx
	shrl	$16, %ecx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	xorl	%eax, %edx
	shrl	$8, %eax
	movzbl	%dl, %edx
	xorl	(%rsi,%rdx,4), %eax
	movl	%eax, crc32_context(%rip)
	ret
	.cfi_endproc
.LFE84:
	.size	crc32_8bytes, .-crc32_8bytes
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC4:
	.string	"checksum = %X\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LFB97:
	.cfi_startproc
	movl	$8, %ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	leaq	crc32_tab(%rip), %rax
	vmovdqa	.LC0(%rip), %ymm5
	vmovd	%ecx, %xmm6
	leaq	1024(%rax), %rdx
	vpxor	%xmm4, %xmm4, %xmm4
	movl	$1, %ecx
	vmovd	%ecx, %xmm3
	movl	$-306674912, %ecx
	vpbroadcastd	%xmm6, %ymm6
	vmovd	%ecx, %xmm2
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	vpbroadcastd	%xmm3, %ymm3
	andq	$-32, %rsp
	vpbroadcastd	%xmm2, %ymm2
	.p2align 4,,10
	.p2align 3
.L4:
	vmovdqa	%ymm5, %ymm1
	addq	$32, %rax
	vpaddd	%ymm6, %ymm5, %ymm5
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm0
	vmovdqa	%ymm0, -32(%rax)
	cmpq	%rax, %rdx
	jne	.L4
	movzbl	g_85(%rip), %r8d
	xorl	%edi, %edi
	movl	$1, g_112(%rip)
	call	crc32_8bytes
	movl	$-1, %edi
	call	crc32_8bytes
	movsbl	%r8b, %edi
	call	crc32_8bytes
	movl	g_112(%rip), %edi
	call	crc32_8bytes
	movswl	g_126(%rip), %edi
	call	crc32_8bytes
	movsbl	g_194(%rip), %edi
	call	crc32_8bytes
	xorl	%edi, %edi
	call	crc32_8bytes
	movl	$-1, %edi
	call	crc32_8bytes
	movl	$76, %edi
	call	crc32_8bytes
	movl	$-5, %edi
	call	crc32_8bytes
	movl	crc32_context(%rip), %esi
	leaq	.LC4(%rip), %rdi
	xorl	%eax, %eax
	notl	%esi
	call	printf@PLT
	xorl	%eax, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE97:
	.size	main, .-main
	.data
	.type	g_194, @object
	.size	g_194, 1
g_194:
	.byte	12
	.align 2
	.type	g_126, @object
	.size	g_126, 2
g_126:
	.value	1
	.align 4
	.type	g_112, @object
	.size	g_112, 4
g_112:
	.long	889139991
	.local	g_85
	.comm	g_85,1,1
	.align 4
	.type	crc32_context, @object
	.size	crc32_context, 4
crc32_context:
	.long	-1
	.local	crc32_tab
	.comm	crc32_tab,1024,32
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC0:
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	6
	.long	7
	.ident	"GCC: (GNU) 13.2.1 20230801"
	.section	.note.GNU-stack,"",@progbits


