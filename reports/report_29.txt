--- Interesting Case Report --- 

Interesting Variables: 
['g_3', 'g_578', 'g_558']

Interesting Assembly Lines: 
{'g_3': {'setting1:': [['movl', '$-250,', 'g_3(%rip)']], 'setting2': [['movl', '$8,', 'g_3(%rip)']]}, 'g_578': {'setting1:': [], 'setting2': [['movl', '$-1,', 'g_578(%rip)']]}, 'g_558': {'setting1:': [], 'setting2': [['movl', '$4,', 'g_558(%rip)']]}}

Source Code: 
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles --no-volatile-pointers --arrays --no-bitfields --checksum --no-comma-operators --no-compound-assignment --no-consts --divs --no-embedded-assigns --jumps --no-longlong --force-non-uniform-arrays --math64 --no-muls --packed-struct --paranoid --pointers --no-structs --no-inline-function --return-structs --no-arg-structs --no-dangling-global-pointers
 * Seed:      64744099379786148
 */


#define NO_LONGLONG

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
/* --- GLOBAL VARIABLES --- */
static int32_t g_3 = 0x052061F6;
static int32_t *g_69[2] = {&g_3,&g_3};
static int32_t **g_68 = &g_69[0];
static int32_t ***g_87 = &g_68;
static int32_t g_151 = (-3);
static uint32_t g_244 = 4294967295U;
static int32_t ****g_313 = &g_87;
static int32_t *****g_312[10] = {&g_313,&g_313,&g_313,&g_313,&g_313,&g_313,&g_313,&g_313,&g_313,&g_313};
static int32_t *g_325[1][7] = {{&g_3,&g_3,&g_3,&g_3,&g_3,&g_3,&g_3}};
static int32_t **g_413 = (void*)0;
static int32_t g_558 = 0x7D7F7957;
static int32_t g_578 = 0xFE1EE968;
static uint8_t g_665 = 0x52;
static uint8_t g_726 = 255U;
static int32_t *g_906 = (void*)0;
static int32_t ***g_925 = &g_68;
static uint16_t g_947 = 65535U;
static uint32_t g_1064[10][1] = {{2U},{4294967289U},{2U},{4294967289U},{2U},{4294967289U},{2U},{4294967289U},{2U},{4294967289U}};


/* --- FORWARD DECLARATIONS --- */
static int16_t  func_1(void);
static int32_t * func_4(int32_t  p_5, int32_t  p_6, int32_t * p_7);
static uint32_t  func_13(int32_t  p_14, int32_t * p_15);
static int32_t  func_18(uint16_t  p_19, int32_t * p_20, int16_t  p_21, uint32_t  p_22, int32_t  p_23);
static int32_t * func_26(int32_t * p_27);
static int8_t  func_33(int32_t * p_34, int32_t  p_35, uint16_t  p_36);
static uint16_t  func_42(uint8_t  p_43, uint16_t  p_44);
static uint16_t  func_48(int32_t * p_49, int32_t  p_50, int32_t * p_51);
static int32_t * func_53(int32_t * p_54, int8_t  p_55, int32_t * p_56, int32_t * p_57, uint8_t  p_58);
static int32_t * func_59(uint32_t  p_60);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_3 g_244 g_68 g_69 g_578 g_665 g_313 g_87 g_726 g_151 g_325 g_906 g_558 g_1064
 * writes: g_3 g_578 g_665 g_69 g_244 g_325 g_558
 */
static int16_t  func_1(void)
{ /* block id: 0 */
    uint16_t l_2[8][8] = {{0xD5E4,0U,0U,0xD5E4,0U,0U,0xD5E4,0U},{0xD5E4,0xD5E4,0U,0xD5E4,0xD5E4,0U,0xD5E4,0xD5E4},{0U,0U,0U,0U,0U,0U,0U,0U},{0U,0U,0U,0U,0U,0U,0U,0U},{0U,0U,0xD5E4,0U,0U,0xD5E4,0U,0U},{0U,0U,0U,0U,0U,0U,0U,0U},{0U,0U,0U,0U,0U,0U,0U,0U},{0U,0U,0xD5E4,0U,0U,0xD5E4,0U,0U}};
    int32_t *l_24 = (void*)0;
    int32_t *l_28 = &g_3;
    uint32_t l_546[7][4] = {{0xD6803977,4294967295U,0xD6803977,4294967295U},{0xD6803977,4294967295U,0xD6803977,4294967295U},{0xD6803977,4294967295U,0xD6803977,4294967295U},{0xD6803977,4294967295U,0xD6803977,4294967295U},{0xD6803977,4294967295U,0xD6803977,4294967295U},{0xD6803977,4294967295U,0xD6803977,4294967295U},{0xD6803977,4294967295U,0xD6803977,4294967295U}};
    int32_t ****l_555 = (void*)0;
    uint8_t l_611 = 0x81;
    uint8_t l_643 = 249U;
    int32_t *l_763 = &g_3;
    int32_t ***l_797 = &g_413;
    int32_t **l_854 = &g_69[0];
    int32_t l_896 = (-1);
    uint16_t l_949 = 65535U;
    int32_t *l_958 = &g_3;
    uint32_t l_1011 = 4294967287U;
    int32_t **l_1019 = &g_69[0];
    int8_t l_1054[6][7] = {{1,5,0x14,5,1,0xF7,1},{0xC9,0x84,0x84,0xC9,0x84,0x84,0xC9},{0x7A,5,0x7A,(-1),1,(-1),0x7A},{0xC9,0xC9,0x5C,0xC9,0xC9,0x5C,0xC9},{1,(-1),0x7A,5,0x7A,(-1),1},{0x84,0xC9,0x84,0x84,0xC9,0x84,0x84}};
    int i, j;
    for (g_3 = 0; (g_3 <= 7); g_3 += 1)
    { /* block id: 3 */
        uint32_t l_8 = 0x71867B8F;
        int32_t *l_25 = (void*)0;
        int32_t *l_556 = (void*)0;
        int32_t *l_557 = &g_151;
        int32_t *****l_580 = &l_555;
    }
    (**g_68) = ((~l_643) & g_244);
    if (((void*)0 != &l_555))
    { /* block id: 323 */
        int32_t *l_652 = (void*)0;
        int32_t ****l_659[6][6][7] = {{{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87}},{{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87}},{{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87}},{{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87}},{{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87}},{{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87},{&g_87,&g_87,&g_87,&g_87,&g_87,&g_87,&g_87}}};
        int32_t *l_728 = (void*)0;
        int32_t *l_745[10] = {&g_578,(void*)0,&g_558,&g_558,(void*)0,&g_578,(void*)0,&g_558,&g_558,(void*)0};
        uint16_t l_776 = 0xB729;
        uint32_t l_807 = 0x0F852393;
        uint32_t l_828[9] = {4294967295U,0xEE0BE196,0U,0xEE0BE196,0U,0U,0xEE0BE196,0U,0U};
        int32_t *l_846[10] = {(void*)0,&g_558,&g_558,(void*)0,&g_558,&g_558,(void*)0,&g_558,&g_558,(void*)0};
        int i, j, k;
        for (g_578 = 3; (g_578 >= 0); g_578 -= 1)
        { /* block id: 326 */
            uint32_t l_655[9];
            int32_t *l_656 = &g_578;
            int32_t ***l_701 = &g_68;
            int32_t *****l_702 = &l_659[0][2][3];
            int32_t ****l_727 = &g_87;
            uint32_t l_744 = 4294967295U;
            int32_t *l_764[4];
            int32_t l_779 = 0x80D6F6A0;
            uint16_t l_780 = 65526U;
            int i;
            for (i = 0; i < 9; i++)
                l_655[i] = 0xC4DFE14C;
            for (i = 0; i < 4; i++)
                l_764[i] = &g_558;
        }
    }
    else
    { /* block id: 457 */
        uint16_t l_890 = 0U;
        int32_t ***l_903 = &l_854;
        for (g_665 = 5; (g_665 <= 18); g_665 = safe_add_func_int32_t_s_s(g_665, 6))
        { /* block id: 460 */
            int8_t l_881 = (-1);
            int32_t *l_891 = &g_151;
            (***g_313) = (void*)0;
            (*l_28) = (safe_rshift_func_int8_t_s_u((safe_add_func_uint8_t_u_u(((safe_div_func_uint16_t_u_u(((l_881 == g_726) && g_3), g_151)) | (safe_rshift_func_uint16_t_u_u((safe_div_func_uint16_t_u_u((0x0A9C >= 0x562A), 0xBE1C)), ((safe_lshift_func_int16_t_s_s((((-6) > (((safe_rshift_func_uint8_t_u_u(g_3, g_244)) == 4U) > l_890)) & g_151), 9)) > l_890)))), g_151)), l_881));
            for (g_244 = 0; (g_244 <= 0); g_244 += 1)
            { /* block id: 465 */
                int i, j;
                (*l_28) = ((void*)0 != g_325[g_244][(g_244 + 5)]);
                g_325[g_244][(g_244 + 2)] = (**g_87);
            }
        }
        /* facts after for loop */
        //assert (g_69[0] == 0 || g_69[0] == &g_3);
        //assert (g_325[0][0] == 0 || g_325[0][0] == &g_3);
        for (g_578 = 17; (g_578 >= 12); --g_578)
        { /* block id: 472 */
            int32_t ***l_900 = (void*)0;
            int32_t l_905 = 0x0EB9A46B;
            int32_t l_907 = 0;
            uint32_t l_908[8] = {0x6DF66B3C,0x0D3A2B5D,0x6DF66B3C,0x6DF66B3C,0x0D3A2B5D,0x6DF66B3C,0x6DF66B3C,0x0D3A2B5D};
            int i;
            if (((((!((l_900 == (void*)0) >= ((-10) < ((safe_mod_func_int16_t_s_s(l_890, g_151)) | 9U)))) > (((*g_87) != (**g_313)) && g_244)) ^ (*l_763)) || 9))
            { /* block id: 473 */
                int32_t ***l_904 = (void*)0;
                (*l_763) = (l_903 != l_904);
            }
            else
            { /* block id: 475 */
                if (l_905)
                    break;
                (**g_87) = g_906;
                (*l_28) = l_907;
                (***g_313) = (void*)0;
            }
            (*l_763) = l_908[3];
        }
    }
    /* facts after branching */
    //assert (g_69[0] == 0 || g_69[0] == &g_3);
    //assert (g_325[0][0] == 0 || g_325[0][0] == &g_3);
    for (g_558 = 5; (g_558 > 4); --g_558)
    { /* block id: 486 */
        int16_t l_926[7][4] = {{(-8),0xB7E8,0xB7E8,(-8)},{0xB201,0xB7E8,0xBDA9,0xB7E8},{0xB7E8,7,0xBDA9,0xBDA9},{0xB201,0xB201,0xB7E8,0xBDA9},{(-8),7,(-8),0xB7E8},{(-8),0xB7E8,0xB7E8,(-8)},{0xB201,0xB7E8,0xBDA9,0xB7E8}};
        int32_t *l_946 = &g_3;
        uint32_t l_948 = 1U;
        int32_t l_950 = 0x92690FBA;
        int32_t ***l_956 = &l_854;
        uint32_t l_978[6][1] = {{4294967289U},{0xA6BAC0F9},{0xA6BAC0F9},{4294967289U},{0xA6BAC0F9},{0xA6BAC0F9}};
        uint32_t l_1013 = 0x675E328B;
        int32_t *****l_1056 = &l_555;
        int32_t *l_1065 = &g_558;
        uint8_t l_1082 = 247U;
        int i, j;
    }
    return g_1064[4][0];
}


/* ------------------------------------------ */
/* 
 * reads : g_87 g_68 g_151
 * writes: g_69
 */
static int32_t * func_4(int32_t  p_5, int32_t  p_6, int32_t * p_7)
{ /* block id: 272 */
    int32_t *****l_548 = (void*)0;
    int32_t *l_549[1];
    int8_t l_550[7][6] = {{6,0x77,0,0x77,6,0x23},{6,0,0x77,0x57,8,8},{0,(-1),(-1),0,0,8},{6,8,0x77,0x23,0x57,0x23},{0,(-1),0,0x65,0x57,6},{0x77,8,6,0,0,6},{(-1),(-1),0,0,8,0x65}};
    int i, j;
    for (i = 0; i < 1; i++)
        l_549[i] = &g_3;
    (**g_87) = l_549[0];
    l_550[4][0] = (g_151 < (((void*)0 != l_549[0]) == p_5));
    (**g_87) = &p_5;
    /* statement id: 275 */
    //assert (g_69[0] == &p_5 || g_69[0] == &g_151 || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0 || (g_69[0] >= &l_579[0][0][0] && g_69[0] <= &l_579[9][8][1]) || g_69[0] == &g_578);
    return l_549[0];
    /* statement id: 276 */
    //assert (g_69[0] == &g_151 || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0 || (g_69[0] >= &l_579[0][0][0] && g_69[0] <= &l_579[9][8][1]) || g_69[0] == &g_578);
    //assert (func_4_rv == &g_3);
}


/* ------------------------------------------ */
/* 
 * reads : g_68 g_87
 * writes: g_69
 */
static uint32_t  func_13(int32_t  p_14, int32_t * p_15)
{ /* block id: 268 */
    int32_t *l_545 = (void*)0;
    (*g_68) = (void*)0;
    (**g_87) = l_545;
    return p_14;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int32_t  func_18(uint16_t  p_19, int32_t * p_20, int16_t  p_21, uint32_t  p_22, int32_t  p_23)
{ /* block id: 266 */
    uint8_t l_544 = 255U;
    return l_544;
}


/* ------------------------------------------ */
/* 
 * reads : g_3 g_68 g_69 g_87 g_151 g_244 g_312 g_325 g_313 g_413
 * writes: g_69 g_87 g_151 g_244 g_313
 */
static int32_t * func_26(int32_t * p_27)
{ /* block id: 4 */
    int32_t *l_37[4] = {&g_3,&g_3,&g_3,&g_3};
    int32_t **l_308 = &g_69[0];
    int32_t *****l_399 = (void*)0;
    int32_t l_457 = 0x7A445A75;
    int32_t *l_460 = &g_151;
    uint16_t l_497 = 0x8B42;
    int32_t ****l_527 = &g_87;
    int16_t l_530 = 7;
    int16_t l_531 = 0x1636;
    int32_t *l_539 = &g_3;
    uint16_t l_542 = 0xF8F9;
    uint32_t l_543 = 0U;
    int i;
    if ((safe_div_func_int8_t_s_s((safe_lshift_func_uint8_t_u_s(0U, 5)), func_33(l_37[2], (safe_sub_func_int16_t_s_s((safe_add_func_uint16_t_u_u(((void*)0 == l_37[2]), (func_42(g_3, (((void*)0 == p_27) & (5U ^ (-8)))) < g_244))), 0x1B99)), g_244))))
    { /* block id: 143 */
        int32_t l_277 = 0x52188D95;
        int32_t *l_300[10] = {&g_3,&g_3,&g_3,&g_3,&g_3,&g_3,&g_3,&g_3,&g_3,&g_3};
        int32_t *****l_314 = &g_313;
        int32_t *l_322 = &g_151;
        int8_t l_336 = 0;
        int8_t l_386 = 5;
        int32_t l_389 = 8;
        int32_t l_510 = 9;
        int32_t **l_520 = (void*)0;
        int i;
lbl_353:
        (*g_68) = func_53(p_27, g_151, p_27, p_27, l_277);
        if ((safe_rshift_func_int8_t_s_u(0x39, 4)))
        { /* block id: 145 */
            uint32_t l_284 = 0xA5E963C0;
            int32_t ****l_286 = (void*)0;
            int32_t *****l_285 = &l_286;
            int32_t l_326 = 1;
            int32_t ***l_334 = (void*)0;
            uint8_t l_335 = 0xB6;
            int32_t l_379 = 0x1E6BD7F7;
            uint8_t l_395 = 255U;
            if (((safe_div_func_uint32_t_u_u((safe_add_func_uint8_t_u_u((((((*p_27) && (*p_27)) != l_284) >= ((((void*)0 != l_285) | (safe_lshift_func_uint8_t_u_s(255U, 6))) == (safe_add_func_int16_t_s_s(1, (+(safe_mod_func_int32_t_s_s(((void*)0 == p_27), g_244))))))) >= 0xDB), 1)), (*p_27))) >= l_277))
            { /* block id: 146 */
                uint8_t l_297 = 1U;
                int32_t *l_299[5][10] = {{&g_151,&g_3,&g_151,(void*)0,(void*)0,&g_3,&g_151,&g_3,&g_3,(void*)0},{&g_3,&g_151,&g_151,(void*)0,&g_151,&g_3,&g_3,&g_3,&g_3,&g_151},{(void*)0,&g_3,&g_3,(void*)0,&g_3,&g_151,&g_151,&g_151,&g_3,&g_3},{&g_3,&g_151,&g_3,(void*)0,&g_3,&g_3,&g_3,&g_151,&g_3,&g_3},{&g_3,&g_151,&g_151,(void*)0,(void*)0,(void*)0,&g_151,&g_151,&g_3,(void*)0}};
                int32_t ***l_301 = (void*)0;
                uint16_t l_329 = 0x1B6A;
                int i, j;
                for (g_244 = (-14); (g_244 != 39); ++g_244)
                { /* block id: 149 */
                    int32_t l_296 = 1;
                    if (((void*)0 == &p_27))
                    { /* block id: 150 */
                        int8_t l_298 = 1;
                        l_297 = l_296;
                        l_298 = (-8);
                    }
                    else
                    { /* block id: 153 */
                        l_296 = (((l_299[0][9] != l_300[2]) > ((l_301 != (void*)0) <= (l_296 || g_151))) && 0x7920057B);
                    }
                }
                if ((safe_mod_func_uint32_t_u_u(((((g_151 ^ ((safe_lshift_func_uint16_t_u_u((safe_rshift_func_uint8_t_u_s(g_151, ((((l_308 == (void*)0) & 0x75) | g_3) & (safe_mod_func_int8_t_s_s((((0x2EC38D99 != (~(g_312[9] != l_314))) >= 0xD6) > (*p_27)), 0x1D))))), g_244)) ^ g_244)) != 0x2D930D75) <= g_244) | g_3), g_3)))
                { /* block id: 157 */
                    uint32_t l_318 = 4294967295U;
                    int32_t l_319 = 0xB7C0F15A;
                    int32_t ****l_320 = (void*)0;
                    l_319 = (~(safe_add_func_int16_t_s_s(l_318, 65528U)));
                    (*l_314) = l_320;
                    /* statement id: 159 */
                    assert (g_313 == 0);
                    l_319 = (safe_unary_minus_func_uint8_t_u(g_3));
                    return l_322;
                    /* statement id: 161 */
                    //assert (func_26_rv == &g_151);
                }
                else
                { /* block id: 162 */
                    for (g_151 = 10; (g_151 > 22); ++g_151)
                    { /* block id: 165 */
                        p_27 = g_325[0][2];
                        if ((*p_27))
                            break;
                    }
                    l_326 = (*p_27);
                }
                if (((safe_mod_func_uint32_t_u_u((l_329 == (9U | ((-6) <= ((void*)0 != (**l_314))))), (*p_27))) < ((*l_322) > (safe_div_func_uint16_t_u_u((g_151 || (l_301 != l_334)), 0x8D31)))))
                { /* block id: 171 */
                    (*l_308) = (void*)0;
                    for (l_329 = 0; (l_329 <= 9); l_329 += 1)
                    { /* block id: 175 */
                        int i;
                        (*l_322) = l_335;
                    }
                    l_336 = (*l_322);
                }
                else
                { /* block id: 179 */
                    uint32_t l_339 = 0U;
                    (***g_313) = p_27;
                    for (l_329 = 0; (l_329 > 15); l_329++)
                    { /* block id: 183 */
                        int8_t l_351 = 0x1A;
                        int32_t **l_352 = &l_300[4];
                        (*l_322) = 0x78F745BC;
                        (*l_322) = (((((((*p_27) > l_339) >= (g_151 >= (0U == ((&p_27 == (*g_87)) && ((safe_mod_func_uint16_t_u_u((0xF065 || ((((safe_rshift_func_int8_t_s_s(((((~((g_244 == (((safe_mod_func_int8_t_s_s((safe_lshift_func_uint8_t_u_s((((((safe_add_func_uint16_t_u_u(((*p_27) <= 0x0C091DDE), 0x162B)) | l_339) == 0x6B5A) | 1U) < 249U), l_351)), 0xF4)) == g_244) == g_3)) < (*p_27))) != g_3) || g_244) | l_351), g_244)) & (-1)) & 0x2C08) >= 0)), l_339)) == l_339))))) == l_339) < g_151) & g_151) >= g_3);
                        l_352 = &l_37[2];
                        /* statement id: 186 */
                        assert ((l_352 >= &l_37[0] && l_352 <= &l_37[3]));
                        return p_27;
                        /* statement id: 187 */
                        //assert (func_26_rv == &g_3);
                    }
                }
            }
            else
            { /* block id: 190 */
                if (l_277)
                    goto lbl_353;
            }
            (*l_308) = p_27;
            (*l_322) = (safe_sub_func_uint8_t_u_u((safe_rshift_func_int8_t_s_s((&l_308 != (void*)0), g_151)), ((*p_27) >= ((void*)0 != (*g_313)))));
            if ((safe_rshift_func_uint8_t_u_u(((*l_314) == (*l_314)), 6)))
            { /* block id: 195 */
                int32_t *l_374 = (void*)0;
                int32_t l_390 = 0;
                (*l_322) = (safe_sub_func_int16_t_s_s((0x7F358BD5 & (safe_div_func_uint8_t_u_u((((safe_add_func_uint8_t_u_u((safe_mod_func_uint16_t_u_u((g_3 > (safe_rshift_func_int8_t_s_u((safe_rshift_func_uint8_t_u_u(((safe_mod_func_uint16_t_u_u((((void*)0 != l_374) == (safe_sub_func_uint16_t_u_u(((safe_unary_minus_func_int8_t_s(((+(l_379 <= (safe_mod_func_int32_t_s_s((1 < (safe_mod_func_int16_t_s_s(((safe_sub_func_uint16_t_u_u(0x2B15, ((l_386 <= (safe_sub_func_uint32_t_u_u((*l_322), (*p_27)))) | (*p_27)))) > g_244), 0xA187))), (*p_27))))) || g_3))) & l_389), g_244))), g_151)) >= g_3), g_244)), g_3))), 0xA58A)), g_151)) != l_390) > g_151), g_244))), g_3));
                p_27 = p_27;
                l_390 = ((safe_add_func_uint32_t_u_u(l_390, (safe_mod_func_int32_t_s_s(l_395, ((((safe_unary_minus_func_int8_t_s((g_244 == (&p_27 == (void*)0)))) > (*l_322)) ^ (250U | g_3)) | ((l_314 != l_399) >= g_244)))))) >= 255U);
                for (l_277 = 0; (l_277 < (-18)); l_277 = safe_sub_func_int16_t_s_s(l_277, 9))
                { /* block id: 201 */
                    int16_t l_416 = (-8);
                    l_416 = (~(((void*)0 != &g_313) && (safe_add_func_int32_t_s_s(((safe_rshift_func_int8_t_s_u(g_151, 7)) || (safe_mod_func_int16_t_s_s(6, l_390))), ((safe_mod_func_uint8_t_u_u((((0xC9 < (g_413 == (void*)0)) < (safe_lshift_func_int16_t_s_u((g_151 >= g_244), 8))) ^ 0xDB), 0x94)) >= 65535U)))));
                    if ((*l_322))
                        break;
                    return p_27;
                    /* statement id: 204 */
                    //assert (func_26_rv == &g_3);
                }
            }
            else
            { /* block id: 206 */
                (*g_68) = p_27;
            }
        }
        else
        { /* block id: 209 */
            uint32_t l_417[10][8] = {{4294967295U,0x58BAB304,4294967288U,0x15D2907B,0xE413887B,0U,4294967287U,4294967287U},{0x58BAB304,4294967295U,0x14BB4250,0x14BB4250,4294967295U,0x58BAB304,0x3E63233A,0xE5298A65},{0x15D2907B,0x105EE874,0xDBE33949,0x58BAB304,0x7CBAE958,0x757BAD7B,0x930E477E,0x15D2907B},{4294967286U,4294967287U,4294967295U,4294967295U,0x9EA8BB69,0x42831745,0x9F442633,0xA96D1D10},{0x7CBAE958,0x9EA8BB69,0x15D2907B,0x3E63233A,4294967295U,4294967288U,0x82A686B5,0x15D2907B},{4294967295U,0x9F442633,4294967295U,0x14BB4250,4294967286U,0x14BB4250,4294967295U,0x9F442633},{0x9F442633,1U,0x3E63233A,0xE413887B,6U,0xDBE33949,1U,7U},{4294967295U,0U,4294967295U,0x757BAD7B,0x9F442633,0x8908CF12,1U,4294967295U},{4294967287U,0x757BAD7B,0x3E63233A,0xDBE33949,0x42831745,4294967287U,4294967295U,0xA96D1D10},{0x42831745,4294967287U,4294967295U,0xA96D1D10,0x757BAD7B,0x82A686B5,0x82A686B5,0x757BAD7B}};
            int32_t ***l_426[3];
            uint32_t l_446[5];
            uint8_t l_508 = 6U;
            int i, j;
            for (i = 0; i < 3; i++)
                l_426[i] = &g_68;
            for (i = 0; i < 5; i++)
                l_446[i] = 4294967295U;
            (*l_322) = ((l_417[4][0] <= ((safe_rshift_func_int16_t_s_s((safe_add_func_uint16_t_u_u((0U < ((safe_sub_func_int16_t_s_s(g_244, g_151)) ^ (safe_rshift_func_int8_t_s_u((((*g_313) == l_426[2]) == ((safe_sub_func_uint8_t_u_u((*l_322), (((!(g_244 ^ (((void*)0 == l_399) > (*p_27)))) | g_151) | g_151))) > 0x5B)), g_3)))), g_3)), 10)) != g_244)) & 0xC132);
            for (g_244 = 7; (g_244 == 58); g_244 = safe_add_func_int8_t_s_s(g_244, 2))
            { /* block id: 213 */
                uint16_t l_436 = 0U;
                int32_t *****l_440 = &g_313;
                for (g_151 = 0; (g_151 == (-3)); --g_151)
                { /* block id: 216 */
                    for (l_389 = 0; (l_389 <= 10); l_389 = safe_add_func_uint16_t_u_u(l_389, 6))
                    { /* block id: 219 */
                        int32_t *l_437 = &l_389;
                        l_436 = 0x303015F5;
                        return p_27;
                        /* statement id: 221 */
                        //assert (func_26_rv == &g_3);
                    }
                    if ((*p_27))
                        continue;
                }
                for (l_436 = 0; (l_436 > 51); ++l_436)
                { /* block id: 227 */
                    int32_t ****l_445[1];
                    int i;
                    for (i = 0; i < 1; i++)
                        l_445[i] = &g_87;
                    l_446[1] = ((((l_436 & (((void*)0 == l_440) == 0xE07173F4)) < (safe_sub_func_int8_t_s_s((0xB8 || 0x24), (4294967295U & ((*p_27) && (safe_lshift_func_int16_t_s_u((l_445[0] == l_445[0]), 7))))))) && g_151) & 0x56E4);
                    for (l_336 = 0; (l_336 <= 3); l_336 += 1)
                    { /* block id: 231 */
                        int32_t l_458 = 0x3898DAF1;
                        int32_t l_459 = 9;
                        int i;
                        l_459 = (g_3 < (0 & (safe_mod_func_uint32_t_u_u(((((safe_unary_minus_func_int8_t_s((((safe_rshift_func_int16_t_s_s((((safe_add_func_int16_t_s_s((safe_div_func_uint16_t_u_u((0x493C & ((((~(((void*)0 != (*g_313)) & ((**l_314) == (*g_313)))) || (*p_27)) || (*p_27)) ^ (*p_27))), g_151)), g_244)) == l_457) == (*p_27)), g_244)) <= g_151) ^ g_3))) < l_458) & g_151) | l_436), (-7)))));
                        l_37[l_336] = l_460;
                        l_37[l_336] = p_27;
                        (****l_314) = p_27;
                    }
                }
                if (((g_151 | (safe_rshift_func_int8_t_s_s((0U < (safe_lshift_func_int8_t_s_u(((safe_mod_func_uint32_t_u_u((safe_rshift_func_uint8_t_u_u((safe_rshift_func_uint8_t_u_u(((!((g_151 < (((safe_div_func_int8_t_s_s((l_426[1] != (**l_440)), (safe_add_func_int32_t_s_s(((0U > (((((g_151 || (*l_322)) == (*l_460)) != 0x55) > g_151) <= 0xEA517711)) == g_244), (*p_27))))) < 0xDBB7D8D5) >= l_436)) ^ 3U)) == g_3), g_3)), 6)), 1U)) ^ 1U), 7))), 6))) >= 0xB486))
                { /* block id: 238 */
                    uint16_t l_476[1][4];
                    int i, j;
                    for (i = 0; i < 1; i++)
                    {
                        for (j = 0; j < 4; j++)
                            l_476[i][j] = 1U;
                    }
                    l_476[0][1] = (*p_27);
                    (*l_460) = ((((((safe_add_func_uint8_t_u_u(0U, 0xB2)) != ((*g_313) != (**l_440))) & g_151) != (safe_rshift_func_int16_t_s_s(g_244, ((safe_rshift_func_int8_t_s_s((!(!((*p_27) ^ ((((!(!0x0374)) == (safe_rshift_func_uint8_t_u_u(((l_314 != l_314) || l_476[0][1]), g_244))) != 0x2946) == g_244)))), g_244)) ^ l_476[0][1])))) && 0x80) >= (-1));
                }
                else
                { /* block id: 241 */
                    int32_t *l_489 = (void*)0;
                    int32_t *****l_511 = (void*)0;
                    if ((*p_27))
                    { /* block id: 242 */
                        uint32_t l_494 = 0xC43FD2B7;
                        int32_t *l_509[6] = {&g_3,&l_389,&g_3,&g_3,&l_389,&g_3};
                        int i;
                        (****l_314) = l_489;
                        (*l_322) = l_510;
                        (*l_460) = 0x1AB24ACB;
                        l_511 = (void*)0;
                    }
                    else
                    { /* block id: 247 */
                        if (l_510)
                            goto lbl_353;
                        (*l_322) = (*p_27);
                        (*l_460) = (*p_27);
                        (*l_460) = (-1);
                    }
                    (*l_322) = (l_399 == &g_313);
                    p_27 = p_27;
                    if ((*p_27))
                        continue;
                }
            }
        }
        if (l_389)
            goto lbl_353;
        (*l_460) = ((((+(safe_mod_func_uint32_t_u_u((safe_add_func_uint16_t_u_u(g_151, ((+((safe_add_func_int16_t_s_s(((void*)0 == l_520), (safe_sub_func_int8_t_s_s(((void*)0 == &g_313), (safe_mod_func_int8_t_s_s((safe_rshift_func_int8_t_s_u(((void*)0 != l_527), 5)), (safe_div_func_int32_t_s_s((l_530 > (*p_27)), (*p_27))))))))) >= g_3)) > g_244))), (*l_460)))) || l_531) & (*p_27)) || 4U);
    }
    else
    { /* block id: 261 */
        (*l_460) = 0x60CD143E;
    }
    /* facts after branching */
    //assert (l_37[0] == &g_151 || l_37[0] == 0 || l_37[0] == &g_3);
    //assert (g_69[0] == &g_151 || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
    l_543 = (safe_sub_func_int32_t_s_s(((g_151 ^ (safe_add_func_int32_t_s_s(0xA8DA9063, ((safe_rshift_func_uint8_t_u_s(((void*)0 != p_27), ((!(p_27 == l_539)) & (safe_sub_func_int16_t_s_s((1U != 0xB5), g_151))))) > 0x07)))) && l_542), (*p_27)));
    return p_27;
    /* statement id: 265 */
    //assert (func_26_rv == &g_3);
}


/* ------------------------------------------ */
/* 
 * reads : g_151 g_3
 * writes: g_151
 */
static int8_t  func_33(int32_t * p_34, int32_t  p_35, uint16_t  p_36)
{ /* block id: 140 */
    int32_t *l_258[2][5][1] = {{{&g_3},{&g_3},{&g_3},{&g_3},{&g_3}},{{&g_3},{&g_3},{&g_3},{&g_3},{&g_3}}};
    int32_t *l_259 = &g_3;
    uint32_t l_270[6][1][3] = {{{3U,3U,3U}},{{4294967295U,4294967295U,4294967295U}},{{3U,3U,3U}},{{4294967295U,4294967295U,4294967295U}},{{3U,3U,3U}},{{4294967295U,4294967295U,4294967295U}}};
    int i, j, k;
    p_34 = func_53(l_258[1][2][0], g_151, l_258[1][2][0], l_259, (safe_add_func_int16_t_s_s((safe_mod_func_uint16_t_u_u(((safe_sub_func_int16_t_s_s((safe_rshift_func_uint16_t_u_s(0x96FE, (safe_mod_func_int8_t_s_s(l_270[3][0][2], p_35)))), (safe_mod_func_int32_t_s_s((((((safe_div_func_uint8_t_u_u(((safe_add_func_int16_t_s_s(g_3, 0x5A5B)) > (*l_259)), g_151)) && 0x86AEEF4B) != (-1)) == p_35) != g_3), p_36)))) == 0x25), p_36)), (*l_259))));
    /* statement id: 141 */
    assert (p_34 == &g_3);
    return p_35;
}


/* ------------------------------------------ */
/* 
 * reads : g_3 g_68 g_69 g_87 g_151 g_244
 * writes: g_69 g_87 g_151
 */
static uint16_t  func_42(uint8_t  p_43, uint16_t  p_44)
{ /* block id: 5 */
    int8_t l_47 = 0;
    int32_t *l_52 = &g_3;
    int32_t l_179[10][3] = {{0xEADDFB17,0xEADDFB17,0xEADDFB17},{0,0,0},{0xEADDFB17,0xEADDFB17,0xEADDFB17},{0,0,0},{0xEADDFB17,0xEADDFB17,0xEADDFB17},{0,0,0},{0xEADDFB17,0xEADDFB17,0xEADDFB17},{0,0,0},{0xEADDFB17,0xEADDFB17,0xEADDFB17},{0,0,0}};
    uint16_t l_216 = 0x308A;
    uint8_t l_241 = 0x08;
    int32_t ****l_251 = &g_87;
    int32_t *****l_250 = &l_251;
    int i, j;
    if ((g_3 | (safe_rshift_func_uint8_t_u_s(((l_47 <= (p_44 ^ (func_48(l_52, g_3, func_53(func_59((*l_52)), p_43, &g_3, l_52, p_44)) > 0x33B7))) ^ p_44), p_43))))
    { /* block id: 67 */
        int32_t *l_156 = &g_3;
        (*g_68) = l_156;
    }
    else
    { /* block id: 69 */
        uint32_t l_157[3];
        int32_t l_158 = 1;
        int32_t **l_190 = &g_69[0];
        int i;
        for (i = 0; i < 3; i++)
            l_157[i] = 0x11F25427;
        for (p_43 = 0; (p_43 <= 1); p_43 += 1)
        { /* block id: 72 */
            return p_43;
        }
        for (l_47 = 1; (l_47 >= 0); l_47 -= 1)
        { /* block id: 77 */
            int32_t ****l_178 = &g_87;
            int i;
            l_158 = l_157[2];
            if (((safe_lshift_func_int8_t_s_u(((safe_mod_func_int32_t_s_s(((safe_add_func_int32_t_s_s((!(l_52 == (void*)0)), ((safe_sub_func_uint32_t_u_u((l_157[2] | (safe_rshift_func_uint8_t_u_s((safe_mod_func_int8_t_s_s(0x41, (safe_rshift_func_uint8_t_u_u(((&l_158 != l_52) >= (safe_mod_func_int32_t_s_s((((p_44 == (safe_div_func_int16_t_s_s((((*l_52) && 4U) >= p_43), g_151))) || p_43) <= 0x66CD), p_44))), g_151)))), 4))), g_151)) >= p_43))) && 1U), p_43)) < g_3), (*l_52))) || (-1)))
            { /* block id: 79 */
                l_179[0][2] = ((void*)0 == l_178);
            }
            else
            { /* block id: 81 */
                uint32_t l_191 = 4294967294U;
                int32_t l_196[10][8] = {{0xAC108E42,0x355BA672,(-10),0x355BA672,0xAC108E42,1,0x355BA672,0x51D0698F},{0x02C5E52B,0xAC108E42,0x61316C4F,0xE7A79C0B,0x355BA672,0x02C5E52B,0x02C5E52B,0x355BA672},{0x08F7B834,0x61316C4F,0x61316C4F,0x08F7B834,0x23DAE7EE,1,0x355BA672,0x61316C4F},{0x355BA672,0x0075B0AE,(-10),0x51D0698F,0x0075B0AE,0x34357C3C,0x0075B0AE,0x51D0698F},{1,0x0075B0AE,1,0x61316C4F,0x355BA672,1,0x23DAE7EE,0x08F7B834},{0xAC108E42,0x61316C4F,0xE7A79C0B,0x355BA672,0x02C5E52B,0x02C5E52B,0x355BA672,0xE7A79C0B},{0xAC108E42,0xAC108E42,0x34357C3C,0x51D0698F,0x355BA672,1,0xAC108E42,0x355BA672},{1,0x355BA672,0x61316C4F,1,0x0075B0AE,1,0x61316C4F,0x355BA672},{0x355BA672,0x23DAE7EE,0xE7A79C0B,0x51D0698F,0x23DAE7EE,0x61316C4F,0x0075B0AE,0xE7A79C0B},{0x08F7B834,0x02C5E52B,0x51D0698F,1,1,0x51D0698F,0x02C5E52B,0xE7A79C0B}};
                uint32_t l_201 = 0U;
                int32_t l_215 = 0xC62A2EA1;
                int i, j;
                for (p_43 = 0; (p_43 <= 1); p_43 += 1)
                { /* block id: 84 */
                    int i;
                    g_69[l_47] = &l_179[0][2];
                    if (p_43)
                    { /* block id: 86 */
                        int i;
                        g_69[l_47] = &l_158;
                        g_69[l_47] = (void*)0;
                        l_196[8][2] = (((safe_sub_func_int16_t_s_s((safe_mod_func_int16_t_s_s((safe_unary_minus_func_int32_t_s(2)), p_44)), (((safe_sub_func_int32_t_s_s(p_43, (-1))) == (!(((void*)0 != l_190) < l_191))) > (((3U > ((safe_div_func_uint16_t_u_u(((void*)0 == (**l_178)), 0x02CD)) > p_43)) | g_151) == g_151)))) & 0x0CFF) != (-7));
                    }
                    else
                    { /* block id: 90 */
                        (**g_87) = &l_196[5][0];
                        if (p_44)
                            continue;
                        (***l_178) = &l_196[1][2];
                    }
                }
                /* facts after for loop */
                //assert ((g_69[0] >= &l_196[0][0] && g_69[0] <= &l_196[9][7]) || (g_69[0] >= &l_179[0][0] && g_69[0] <= &l_179[9][2]) || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0 || g_69[0] == &l_158);
                for (l_158 = 0; (l_158 != 8); ++l_158)
                { /* block id: 98 */
                    return l_201;
                    /* statement id: 99 */
                    //assert (g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
                }
                if ((((((safe_sub_func_uint8_t_u_u((g_151 < (((((p_44 ^ ((((safe_lshift_func_uint16_t_u_s((safe_sub_func_uint8_t_u_u(((safe_div_func_int32_t_s_s(0xE5584E04, p_44)) ^ g_151), (p_43 == (safe_div_func_int16_t_s_s((g_151 >= (~((safe_rshift_func_uint16_t_u_s(g_3, 15)) <= ((void*)0 != &l_52)))), p_43))))), 9)) < p_44) | p_44) != l_215)) ^ 0xA26D2651) | p_44) || g_151) == 0xE5196A25)), l_215)) > g_3) <= 0xA1) ^ g_151) != p_43))
                { /* block id: 101 */
                    l_216 = ((void*)0 == (*g_87));
                }
                else
                { /* block id: 103 */
                    l_196[5][0] = (safe_mod_func_int8_t_s_s(((safe_unary_minus_func_int16_t_s(g_151)) && p_44), p_44));
                }
            }
        }
        /* facts after for loop */
        //assert ((g_69[0] >= &l_179[0][0] && g_69[0] <= &l_179[9][2]) || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0 || g_69[0] == &l_158);
        l_158 = (~(safe_lshift_func_int16_t_s_u(0x0ED9, (safe_mod_func_uint32_t_u_u(((safe_mod_func_uint8_t_u_u((g_151 && (0U == (g_151 <= p_44))), g_3)) == (safe_lshift_func_uint16_t_u_u(65526U, 4))), ((safe_mod_func_uint32_t_u_u((p_43 && (0x73E3192B <= p_44)), 0x9DC8A146)) && g_151))))));
    }
    /* facts after branching */
    //assert ((g_69[0] >= &l_179[0][0] && g_69[0] <= &l_179[9][2]) || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
    for (p_43 = 0; (p_43 > 34); p_43++)
    { /* block id: 112 */
        int32_t l_243[4][6] = {{0x99A7C4AD,4,0x99A7C4AD,0x99A7C4AD,4,0x99A7C4AD},{0x99A7C4AD,4,0x99A7C4AD,0x99A7C4AD,4,0x99A7C4AD},{0x99A7C4AD,4,0x99A7C4AD,0x99A7C4AD,4,0x99A7C4AD},{0x99A7C4AD,4,0x99A7C4AD,0x99A7C4AD,4,0x99A7C4AD}};
        int32_t *l_245 = &l_179[9][0];
        int i, j;
        if ((((safe_rshift_func_uint16_t_u_u((p_43 ^ (((((((g_3 & g_151) | ((safe_mod_func_uint32_t_u_u(((safe_div_func_int8_t_s_s((l_241 != (~p_43)), (*l_52))) && (((*l_52) <= ((g_3 && (g_151 != 65527U)) ^ g_151)) >= p_44)), 0x3F422AAC)) || (*l_52))) >= 0U) == g_3) >= (-6)) == 0xCAAB) | 4294967292U)), 2)) || l_243[0][2]) ^ p_43))
        { /* block id: 113 */
            int32_t *****l_252 = &l_251;
            (*g_68) = l_245;
            for (l_241 = 0; (l_241 <= 1); l_241 += 1)
            { /* block id: 117 */
                uint8_t l_253[10][5][2] = {{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}},{{0x77,0U},{0U,0x77},{0x7B,0x7B},{0x7B,0x77},{0U,0U}}};
                int i, j, k;
                for (l_216 = 0; (l_216 <= 1); l_216 += 1)
                { /* block id: 120 */
                    int i, j;
                    l_179[(l_216 + 8)][(l_216 + 1)] = (safe_add_func_int16_t_s_s(((0x0C || (safe_mod_func_uint8_t_u_u((((&l_179[(l_216 + 6)][(l_216 + 1)] == l_245) <= ((l_250 != l_252) == g_3)) && (1U != p_44)), g_3))) < 4), g_244));
                    if (l_253[7][0][1])
                        break;
                    g_69[l_241] = (void*)0;
                }
                return g_3;
                /* statement id: 125 */
                //assert (g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
            }
        }
        else
        { /* block id: 127 */
            int32_t *l_256 = &g_151;
            for (l_216 = (-17); (l_216 <= 36); ++l_216)
            { /* block id: 130 */
                int32_t *l_257[7][1] = {{&l_179[0][2]},{&l_179[2][0]},{&l_179[0][2]},{&l_179[2][0]},{&l_179[0][2]},{&l_179[2][0]},{&l_179[0][2]}};
                int i, j;
                (***l_251) = l_256;
                if ((*l_245))
                    break;
                l_257[6][0] = l_245;
            }
            /* facts after for loop */
            //assert (g_69[0] == &g_151 || (g_69[0] >= &l_179[0][0] && g_69[0] <= &l_179[9][2]) || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
            (*l_256) = p_43;
            return g_244;
            /* statement id: 136 */
            //assert (g_69[0] == &g_151 || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
        }
    }
    return g_244;
    /* statement id: 139 */
    //assert (g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
}


/* ------------------------------------------ */
/* 
 * reads : g_68 g_87
 * writes: g_69 g_151
 */
static uint16_t  func_48(int32_t * p_49, int32_t  p_50, int32_t * p_51)
{ /* block id: 61 */
    int32_t ****l_154 = (void*)0;
    int32_t *l_155 = &g_151;
    (*g_68) = &p_50;
    /* statement id: 62 */
    //assert (g_69[0] == &p_50 || g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
    (*l_155) = (safe_lshift_func_uint16_t_u_s((((void*)0 == &g_87) > p_50), (65531U || ((&g_87 == l_154) <= ((void*)0 != &g_68)))));
    (*g_68) = &p_50;
    (**g_87) = &p_50;
    return p_50;
    /* statement id: 66 */
    //assert (g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == 0);
}


/* ------------------------------------------ */
/* 
 * reads : g_3 g_578
 * writes: g_151
 */
static int32_t * func_53(int32_t * p_54, int8_t  p_55, int32_t * p_56, int32_t * p_57, uint8_t  p_58)
{ /* block id: 58 */
    int32_t *l_149 = (void*)0;
    int32_t *l_150 = &g_151;
    (*l_150) = (*p_54);
    return p_56;
    /* statement id: 60 */
    //assert (func_53_rv == &g_3 || func_53_rv == &g_578);
}


/* ------------------------------------------ */
/* 
 * reads : g_68 g_3 g_69 g_87 g_578
 * writes: g_69 g_87
 */
static int32_t * func_59(uint32_t  p_60)
{ /* block id: 6 */
    uint32_t l_65 = 4294967290U;
    uint32_t l_76 = 4294967292U;
    int32_t *l_82 = &g_3;
    int32_t ***l_85 = &g_68;
    int32_t l_124 = 0;
    for (p_60 = 0; (p_60 <= 31); p_60++)
    { /* block id: 9 */
        int8_t l_81 = 0;
        int32_t *l_94[3][1][6] = {{{&g_3,&g_3,&g_3,&g_3,&g_3,&g_3}},{{&g_3,&g_3,&g_3,&g_3,&g_3,&g_3}},{{&g_3,&g_3,&g_3,&g_3,&g_3,&g_3}}};
        int32_t *****l_103 = (void*)0;
        int i, j, k;
        if (((safe_add_func_uint32_t_u_u(p_60, l_65)) & l_65))
        { /* block id: 10 */
            int32_t **l_71 = &g_69[1];
            int32_t ****l_92 = (void*)0;
            int32_t *****l_91[6] = {&l_92,&l_92,&l_92,&l_92,&l_92,&l_92};
            int i;
            for (l_65 = (-19); (l_65 < 41); l_65 = safe_add_func_int8_t_s_s(l_65, 3))
            { /* block id: 13 */
                int32_t ***l_70[3];
                int32_t *****l_93 = (void*)0;
                int i;
                for (i = 0; i < 3; i++)
                    l_70[i] = (void*)0;
                l_71 = g_68;
                if (((((void*)0 != l_70[0]) || (safe_add_func_int16_t_s_s(p_60, (safe_lshift_func_uint8_t_u_u(l_76, 7))))) & ((0U < ((((((safe_div_func_int32_t_s_s((safe_add_func_uint8_t_u_u(g_3, ((4294967295U <= ((l_81 != (&g_69[1] == (void*)0)) || (**g_68))) | g_3))), 1)) ^ p_60) < l_81) >= 0xD709C591) ^ g_3) <= 0x6C)) <= p_60)))
                { /* block id: 15 */
                    (*g_68) = l_82;
                    for (l_76 = (-22); (l_76 > 5); l_76 = safe_add_func_int16_t_s_s(l_76, 5))
                    { /* block id: 19 */
                        int32_t ****l_86[10] = {&l_70[2],&l_85,&l_70[2],&l_85,&l_70[2],&l_85,&l_70[2],&l_85,&l_70[2],&l_85};
                        int i;
                        g_87 = l_85;
                        if ((**g_68))
                            break;
                    }
                }
                else
                { /* block id: 23 */
                    int32_t l_88 = 1;
                    l_88 = (**g_68);
                    if ((safe_rshift_func_int16_t_s_u(l_88, 3)))
                    { /* block id: 25 */
                        (*g_68) = (void*)0;
                        /* statement id: 26 */
                        //assert (g_69[0] == 0 || g_69[0] == &g_3 || g_69[0] == &g_578);
                        (*l_71) = (void*)0;
                        l_93 = l_91[0];
                        /* statement id: 28 */
                        assert (l_93 == &l_92);
                        return l_94[0][0][2];
                        /* statement id: 29 */
                        //assert (func_59_rv == &g_3);
                    }
                    else
                    { /* block id: 30 */
                        uint16_t l_104 = 0xDA5A;
                        int32_t l_107[6][6];
                        int i, j;
                        for (i = 0; i < 6; i++)
                        {
                            for (j = 0; j < 6; j++)
                                l_107[i][j] = 0xCB43529A;
                        }
                        l_107[1][1] = ((safe_lshift_func_int16_t_s_u((((safe_div_func_int8_t_s_s(((safe_rshift_func_uint16_t_u_u(((void*)0 != l_103), 15)) && 0xFD), l_104)) && (0x50D6 >= ((((((safe_add_func_int32_t_s_s(p_60, ((g_3 && (g_3 || l_88)) || 0))) != p_60) >= 0xFC8DFB1A) & 0) < p_60) || l_104))) == p_60), 8)) < p_60);
                        (*g_68) = &l_88;
                        /* statement id: 32 */
                        //assert (g_69[0] == &l_88 || g_69[0] == &g_3 || g_69[0] == &g_578);
                    }
                    /* facts after branching */
                    //assert (g_69[0] == &l_88 || g_69[0] == &g_3 || g_69[0] == &g_578);
                }
                /* facts after branching */
                //assert (g_69[0] == dangling || g_69[0] == &g_3 || g_69[0] == &g_578);
                return &g_3;
                /* statement id: 35 */
                //assert (func_59_rv == &g_3);
            }
        }
        else
        { /* block id: 37 */
            int32_t l_123 = 0xCCD07D1F;
            l_124 = (safe_div_func_int16_t_s_s((safe_add_func_uint8_t_u_u(0U, (safe_div_func_uint8_t_u_u((((0xF325EC3E ^ g_3) & (safe_div_func_int32_t_s_s((safe_lshift_func_int16_t_s_u((safe_sub_func_int8_t_s_s((p_60 <= (safe_unary_minus_func_uint16_t_u((safe_add_func_uint8_t_u_u((((p_60 >= ((void*)0 != (*l_85))) <= (l_123 && 0)) && (-1)), 0x30))))), p_60)), g_3)), p_60))) == g_3), 251U)))), g_3));
        }
        if ((***g_87))
            break;
    }
    (**l_85) = (**l_85);
    (*g_68) = (**g_87);
    for (p_60 = 16; (p_60 <= 7); p_60--)
    { /* block id: 46 */
        uint8_t l_142 = 0x34;
        int32_t ****l_143 = &g_87;
        int32_t *l_148 = &l_124;
        if ((safe_mod_func_int16_t_s_s((*l_82), (((((safe_lshift_func_int16_t_s_u(9, 0)) <= 0xA1) && ((safe_lshift_func_int16_t_s_s(((safe_unary_minus_func_int32_t_s((*l_82))) | (safe_lshift_func_uint16_t_u_s(p_60, (safe_sub_func_int8_t_s_s(g_3, (p_60 | (0xC5 && (l_142 >= g_3)))))))), g_3)) <= p_60)) & g_3) & p_60))))
        { /* block id: 47 */
            int32_t **l_146 = &g_69[1];
            l_124 = (((void*)0 != l_143) >= (safe_sub_func_int8_t_s_s((-1), ((void*)0 != l_146))));
        }
        else
        { /* block id: 49 */
            int32_t *l_147 = &g_3;
            (**g_87) = l_147;
            (***l_143) = l_147;
            if ((*l_82))
                break;
        }
        (**g_87) = (***l_143);
        (*l_148) = (-1);
    }
    return (*g_68);
    /* statement id: 57 */
    //assert (func_59_rv == &g_3 || func_59_rv == &g_578);
}




/* ---------------------------------------- */
int main (void)
{
    int i, j;
    int print_hash_value = 0;
    platform_main_begin();
    crc32_gentab();
    func_1();
    transparent_crc(g_3, "g_3", print_hash_value);
    transparent_crc(g_151, "g_151", print_hash_value);
    transparent_crc(g_244, "g_244", print_hash_value);
    transparent_crc(g_558, "g_558", print_hash_value);
    transparent_crc(g_578, "g_578", print_hash_value);
    transparent_crc(g_665, "g_665", print_hash_value);
    transparent_crc(g_726, "g_726", print_hash_value);
    transparent_crc(g_947, "g_947", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 1; j++)
        {
            transparent_crc(g_1064[i][j], "g_1064[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 246
XXX total union variables: 0

XXX max expression depth: 33
breakdown:
   depth: 1, occurrence: 205
   depth: 2, occurrence: 39
   depth: 3, occurrence: 3
   depth: 4, occurrence: 1
   depth: 5, occurrence: 1
   depth: 6, occurrence: 2
   depth: 7, occurrence: 1
   depth: 8, occurrence: 1
   depth: 11, occurrence: 3
   depth: 12, occurrence: 2
   depth: 13, occurrence: 2
   depth: 15, occurrence: 4
   depth: 16, occurrence: 2
   depth: 17, occurrence: 3
   depth: 18, occurrence: 2
   depth: 19, occurrence: 2
   depth: 20, occurrence: 2
   depth: 21, occurrence: 1
   depth: 22, occurrence: 1
   depth: 23, occurrence: 1
   depth: 25, occurrence: 2
   depth: 27, occurrence: 1
   depth: 33, occurrence: 1

XXX total number of pointers: 149

XXX times a variable address is taken: 297
XXX times a pointer is dereferenced on RHS: 207
breakdown:
   depth: 1, occurrence: 148
   depth: 2, occurrence: 25
   depth: 3, occurrence: 16
   depth: 4, occurrence: 17
   depth: 5, occurrence: 1
XXX times a pointer is dereferenced on LHS: 121
breakdown:
   depth: 1, occurrence: 73
   depth: 2, occurrence: 26
   depth: 3, occurrence: 18
   depth: 4, occurrence: 3
   depth: 5, occurrence: 1
XXX times a pointer is compared with null: 79
XXX times a pointer is compared with address of another variable: 25
XXX times a pointer is compared with another pointer: 25
XXX times a pointer is qualified to be dereferenced: 1882

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 429
   level: 2, occurrence: 219
   level: 3, occurrence: 176
   level: 4, occurrence: 76
   level: 5, occurrence: 72
XXX number of pointers point to pointers: 72
XXX number of pointers point to scalars: 77
XXX number of pointers point to structs: 0
XXX percent of pointers has null in alias set: 34.2
XXX average alias set size: 1.44

XXX times a non-volatile is read: 1302
XXX times a non-volatile is write: 437
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 5

XXX stmts: 182
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 33
   depth: 1, occurrence: 18
   depth: 2, occurrence: 25
   depth: 3, occurrence: 31
   depth: 4, occurrence: 37
   depth: 5, occurrence: 38

XXX percentage a fresh-made variable is used: 13.2
XXX percentage an existing variable is used: 86.8
********************* end of statistics **********************/



Assembly Code with Setting 1: 
	.text
	.file	"tmpmx5zz9xv.c"
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5, 0x0                          # -- Begin function main
.LCPI0_0:
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	2                               # 0x2
	.long	3                               # 0x3
	.long	4                               # 0x4
	.long	5                               # 0x5
	.long	6                               # 0x6
	.long	7                               # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0
.LCPI0_1:
	.long	3988292384                      # 0xedb88320
.LCPI0_2:
	.long	8                               # 0x8
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	vmovdqa	.LCPI0_0(%rip), %ymm0           # ymm0 = [0,1,2,3,4,5,6,7]
	xorl	%ecx, %ecx
	vpbroadcastd	.LCPI0_1(%rip), %ymm1   # ymm1 = [3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384]
	leaq	crc32_tab(%rip), %rax
	vpbroadcastd	.LCPI0_2(%rip), %ymm2   # ymm2 = [8,8,8,8,8,8,8,8]
	.p2align	4, 0x90
.LBB0_1:                                # =>This Inner Loop Header: Depth=1
	vpsrld	$1, %ymm0, %ymm3
	vpxor	%ymm1, %ymm3, %ymm4
	vpslld	$31, %ymm0, %ymm5
	vblendvps	%ymm5, %ymm4, %ymm3, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vmovups	%ymm3, (%rcx,%rax)
	vpaddd	%ymm2, %ymm0, %ymm0
	addq	$32, %rcx
	cmpq	$1024, %rcx                     # imm = 0x400
	jne	.LBB0_1
# %bb.2:
	movl	crc32_context(%rip), %ecx
	movzbl	%cl, %edx
                                        # kill: def $ecx killed $ecx killed $rcx
	shrl	$8, %ecx
	xorq	$6, %rdx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$253, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$4, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$82, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$2, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$249, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$2, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$249, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$2, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$249, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$2, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$249, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$2, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	movl	%ecx, %esi
	shrl	$8, %esi
	xorl	$249, %edx
	xorl	(%rax,%rdx,4), %esi
	movl	$-250, g_3(%rip)
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, crc32_context(%rip)
	notl	%esi
	leaq	.L.str.11(%rip), %rdi
	xorl	%eax, %eax
	vzeroupper
	callq	printf@PLT
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc
                                        # -- End function
	.type	g_3,@object                     # @g_3
	.data
	.p2align	2, 0x0
g_3:
	.long	86008310                        # 0x52061f6
	.size	g_3, 4

	.type	crc32_context,@object           # @crc32_context
	.p2align	2, 0x0
crc32_context:
	.long	4294967295                      # 0xffffffff
	.size	crc32_context, 4

	.type	crc32_tab,@object               # @crc32_tab
	.local	crc32_tab
	.comm	crc32_tab,1024,16
	.type	.L.str.11,@object               # @.str.11
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.11:
	.asciz	"checksum = %X\n"
	.size	.L.str.11, 15

	.ident	"clang version 16.0.6"
	.section	".note.GNU-stack","",@progbits
	.addrsig


Assembly Code with Setting 2: 
	.file	"tmplza18_25.c"
	.text
	.p2align 4
	.type	crc32_8bytes, @function
crc32_8bytes:
.LFB84:
	.cfi_startproc
	movl	crc32_context(%rip), %eax
	leaq	crc32_tab(%rip), %rsi
	movl	%edi, %edx
	movl	%eax, %ecx
	shrl	$8, %eax
	xorl	%edi, %ecx
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movzbl	%dh, %ecx
	shrl	$24, %edx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movl	%edi, %ecx
	shrl	$16, %ecx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	xorl	%eax, %edx
	shrl	$8, %eax
	movzbl	%dl, %edx
	xorl	(%rsi,%rdx,4), %eax
	movl	%eax, crc32_context(%rip)
	ret
	.cfi_endproc
.LFE84:
	.size	crc32_8bytes, .-crc32_8bytes
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC5:
	.string	"checksum = %X\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LFB97:
	.cfi_startproc
	movl	$8, %ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	leaq	crc32_tab(%rip), %rax
	vmovdqa	.LC1(%rip), %ymm5
	vmovd	%ecx, %xmm6
	leaq	1024(%rax), %rdx
	vpxor	%xmm4, %xmm4, %xmm4
	movl	$1, %ecx
	vmovd	%ecx, %xmm3
	movl	$-306674912, %ecx
	vpbroadcastd	%xmm6, %ymm6
	vmovd	%ecx, %xmm2
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	vpbroadcastd	%xmm3, %ymm3
	andq	$-32, %rsp
	vpbroadcastd	%xmm2, %ymm2
	.p2align 4,,10
	.p2align 3
.L4:
	vmovdqa	%ymm5, %ymm1
	addq	$32, %rax
	vpaddd	%ymm6, %ymm5, %ymm5
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm0
	vmovdqa	%ymm0, -32(%rax)
	cmpq	%rdx, %rax
	jne	.L4
	movq	g_69(%rip), %rax
	movl	$8, g_3(%rip)
	leaq	g_1064(%rip), %r8
	movl	$-1, g_578(%rip)
	leaq	40(%r8), %r9
	movl	$-250, (%rax)
	movl	$4, g_558(%rip)
	movl	g_3(%rip), %edi
	call	crc32_8bytes
	movl	$-3, %edi
	call	crc32_8bytes
	movl	$-1, %edi
	call	crc32_8bytes
	movl	$4, %edi
	call	crc32_8bytes
	movl	$-1, %edi
	call	crc32_8bytes
	movl	$82, %edi
	call	crc32_8bytes
	movl	$255, %edi
	call	crc32_8bytes
	movl	$65535, %edi
	call	crc32_8bytes
	.p2align 4,,10
	.p2align 3
.L5:
	movl	(%r8), %edi
	addq	$4, %r8
	call	crc32_8bytes
	cmpq	%r9, %r8
	jne	.L5
	movl	crc32_context(%rip), %esi
	leaq	.LC5(%rip), %rdi
	xorl	%eax, %eax
	notl	%esi
	call	printf@PLT
	xorl	%eax, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE97:
	.size	main, .-main
	.section	.rodata
	.align 32
	.type	g_1064, @object
	.size	g_1064, 40
g_1064:
	.long	2
	.long	-7
	.long	2
	.long	-7
	.long	2
	.long	-7
	.long	2
	.long	-7
	.long	2
	.long	-7
	.data
	.align 4
	.type	g_578, @object
	.size	g_578, 4
g_578:
	.long	-31528600
	.align 4
	.type	g_558, @object
	.size	g_558, 4
g_558:
	.long	2105506135
	.section	.data.rel.local,"aw"
	.align 16
	.type	g_69, @object
	.size	g_69, 16
g_69:
	.quad	g_3
	.quad	g_3
	.data
	.align 4
	.type	g_3, @object
	.size	g_3, 4
g_3:
	.long	86008310
	.align 4
	.type	crc32_context, @object
	.size	crc32_context, 4
crc32_context:
	.long	-1
	.local	crc32_tab
	.comm	crc32_tab,1024,32
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC1:
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	6
	.long	7
	.ident	"GCC: (GNU) 13.2.1 20230801"
	.section	.note.GNU-stack,"",@progbits


