--- Interesting Case Report --- 

Interesting Variables: 
['g_110', 'g_70', 'g_168', 'g_145', 'g_167', 'g_69']

Interesting Assembly Lines: 
{'g_110': {'setting1:': [['movb', '$1,', 'g_110(%rip)']], 'setting2': [['movl', '$1,', 'g_110(%rip)']]}, 'g_70': {'setting1:': [], 'setting2': [['movl', '$50,', 'g_70(%rip)']]}, 'g_168': {'setting1:': [['movb', '$1,', 'g_168(%rip)'], ['movb', '$1,', 'g_168(%rip)'], ['movb', '$1,', 'g_168(%rip)'], ['movb', '$1,', 'g_168(%rip)'], ['movb', '$1,', 'g_168(%rip)']], 'setting2': [['movl', '$0,', 'g_168(%rip)']]}, 'g_145': {'setting1:': [], 'setting2': [['movl', '$1,', 'g_145(%rip)']]}, 'g_167': {'setting1:': [['movb', '$1,', 'g_167(%rip)'], ['movb', '$1,', 'g_167(%rip)'], ['movb', '$1,', 'g_167(%rip)'], ['movb', '$1,', 'g_167(%rip)'], ['movb', '$1,', 'g_167(%rip)']], 'setting2': [['movb', '$78,', 'g_167(%rip)']]}, 'g_69': {'setting1:': [], 'setting2': [['movl', '$4,', 'g_69(%rip)']]}}

Source Code: 
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles --no-volatile-pointers --arrays --bitfields --no-checksum --no-comma-operators --compound-assignment --no-consts --no-divs --embedded-assigns --no-jumps --no-longlong --no-force-non-uniform-arrays --no-math64 --muls --packed-struct --paranoid --no-pointers --no-structs --inline-function --return-structs --arg-structs --dangling-global-pointers
 * Seed:      6385492377024851486
 */


#define NO_LONGLONG

#include "csmith.h"

volatile uint32_t csmith_sink_ = 0;

static long __undefined;

/* --- Struct/Union Declarations --- */
/* --- GLOBAL VARIABLES --- */
static int32_t g_30 = 1;
static int8_t g_54 = 1;
static int32_t g_69 = 0xAA4807C1;
static uint32_t g_70 = 0xFECF47A0;
static int32_t g_110 = (-1);
static uint16_t g_114 = 65531U;
static uint8_t g_137 = 0xCC;
static int32_t g_145 = (-5);
static int8_t g_167 = (-4);
static uint32_t g_168 = 1U;
static int32_t g_174 = 4;
static uint8_t g_175 = 0xE9;
static uint8_t g_278 = 9U;
static int32_t g_323 = 0x04E71DC6;
static uint32_t g_341 = 0x3D68C372;
static uint32_t g_371 = 0xF8C8917F;
static int32_t g_375 = 1;
static uint8_t g_378 = 0x14;
static uint16_t g_386 = 0U;
static uint8_t g_493 = 254U;
static uint8_t g_497[8][10][3] = {{{2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}}, {{2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}}, {{2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}}, {{2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}}, {{2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}}, {{2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}}, {{2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}}, {{2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}, {2U, 0xF0, 255U}}};
static int16_t g_535[7][7][5] = {{{0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}}, {{0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}}, {{0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}}, {{0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}}, {{0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}}, {{0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}}, {{0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}, {0xC9BF, 0x6812, 1, 0x5DE7, 0x0AAA}}};
static uint32_t g_644 = 1U;
static uint32_t g_657 = 0xC5DB6749;
static int8_t g_661 = 0xAD;
static int16_t g_662 = 1;
static uint16_t g_663 = 0x803A;
static uint8_t g_666[9] = {255U, 255U, 255U, 255U, 255U, 255U, 255U, 255U, 255U};


/* --- FORWARD DECLARATIONS --- */
static uint8_t  func_1(void);
inline static uint32_t  func_10(int32_t  p_11, int16_t  p_12, uint8_t  p_13, int32_t  p_14, uint16_t  p_15);
static int32_t  func_16(int32_t  p_17);
static int8_t  func_20(uint8_t  p_21, uint32_t  p_22);
inline static int16_t  func_26(uint8_t  p_27, uint32_t  p_28, uint16_t  p_29);
inline static uint32_t  func_34(int32_t  p_35, uint32_t  p_36, int8_t  p_37);
inline static uint16_t  func_38(int8_t  p_39, uint32_t  p_40);
static int16_t  func_47(int32_t  p_48, int8_t  p_49, int8_t  p_50);
inline static uint8_t  func_60(int8_t  p_61, int16_t  p_62, uint32_t  p_63);
inline static int8_t  func_76(uint32_t  p_77);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_30 g_54 g_110 g_137 g_70 g_114 g_175 g_168 g_145 g_167 g_174 g_69 g_278 g_323 g_341 g_371 g_378 g_386 g_375 g_493 g_497 g_644 g_657 g_663 g_666 g_661
 * writes: g_54 g_69 g_70 g_110 g_114 g_137 g_145 g_167 g_168 g_175 g_278 g_323 g_341 g_174 g_371 g_378 g_386 g_375 g_493 g_497 g_535 g_644 g_657 g_663 g_666
 */
static uint8_t  func_1(void)
{ /* block id: 0 */
    uint32_t l_23 = 0U;
    uint16_t l_52 = 0U;
    int32_t l_687 = (-2);
    int32_t l_690[5][4][4] = {{{0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}}, {{0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}}, {{0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}}, {{0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}}, {{0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}, {0x29A3F6CA, 4, 0x3871B06F, 0x0F77AB9C}}};
    uint32_t l_691 = 0U;
    int32_t l_692 = 0xF01BAD77;
    int i, j, k;
    l_692 = (0x3450 != (safe_lshift_func_uint8_t_u_s(((safe_sub_func_int16_t_s_s((safe_sub_func_uint16_t_u_u((safe_rshift_func_int16_t_s_u((l_690[2][0][1] &= (func_10(func_16((safe_lshift_func_int8_t_s_u(((g_666[4] &= ((253U & func_20(l_23, (safe_mul_func_int16_t_s_s(func_26(g_30, (+(safe_add_func_int32_t_s_s(1, func_34(l_23, ((g_54 &= (func_38(l_23, (safe_add_func_uint16_t_u_u(((safe_mod_func_uint8_t_u_u((l_23 <= (((safe_sub_func_int8_t_s_s((((l_52 |= func_47(l_23, l_23, g_30)) != 0xD786) ^ 1U), 0x2E)) & (-1)) || l_52)), 0xD8)) && 0x4F), 0xC0AE))) > 9)) <= 0x0B), g_30)))), l_23), g_30)))) ^ g_30)) | l_23), 5))), g_661, l_687, l_23, g_661) < 0)), g_30)), 0U)), l_23)) ^ 0x60), l_691)));
    return g_54;
}


/* ------------------------------------------ */
/* 
 * reads : g_497 g_323
 * writes: g_323
 */
inline static uint32_t  func_10(int32_t  p_11, int16_t  p_12, uint8_t  p_13, int32_t  p_14, uint16_t  p_15)
{ /* block id: 229 */
    g_323 ^= (safe_lshift_func_uint8_t_u_s(g_497[1][9][0], 7));
    return p_11;
}


/* ------------------------------------------ */
/* 
 * reads : g_661 g_167 g_54 g_174
 * writes:
 */
static int32_t  func_16(int32_t  p_17)
{ /* block id: 224 */
    uint32_t l_671 = 0x3669C49B;
    int32_t l_672 = (-4);
    int32_t l_685 = (-1);
    int32_t l_686 = 0xB2B99DFE;
    l_686 = (safe_mod_func_int16_t_s_s((l_672 |= (safe_sub_func_int32_t_s_s(0, l_671))), (~(safe_add_func_int8_t_s_s(l_671, (l_685 |= (safe_sub_func_uint16_t_u_u(l_671, (safe_mod_func_int32_t_s_s(((g_661 & (0x70CF <= (+((4294967288U != 0x57436F2B) == (((((safe_mod_func_int32_t_s_s(0x7B458466, g_167)) > l_671) >= p_17) == 0x7DCB) || l_671))))) == g_54), 0x56D5B796))))))))));
    return g_174;
}


/* ------------------------------------------ */
/* 
 * reads : g_386 g_375 g_497 g_323 g_70 g_278 g_167 g_145 g_378 g_493 g_371 g_110 g_137 g_644 g_341 g_657 g_663
 * writes: g_535 g_323 g_70 g_137 g_378 g_341 g_375 g_644 g_110 g_657 g_663
 */
static int8_t  func_20(uint8_t  p_21, uint32_t  p_22)
{ /* block id: 190 */
    uint32_t l_572 = 0x592A39A7;
    int32_t l_573 = 0x481EF6CB;
    int32_t l_574 = (-4);
    int32_t l_575 = 0x7B641124;
    int32_t l_647 = 0;
    int32_t l_648 = 0x3DF97EA1;
    int32_t l_649 = (-1);
    int32_t l_650 = 0x7BE4DDF5;
    int32_t l_651 = 9;
    int32_t l_652 = 0x5A409303;
    int32_t l_653 = 0x5EB64F15;
    int32_t l_654 = 0x51A4926C;
    int32_t l_655 = (-4);
    int32_t l_656[7][10][2] = {{{0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}}, {{0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}}, {{0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}}, {{0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}}, {{0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}}, {{0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}}, {{0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}, {0xCC0B949E, 0xCC0B949E}}};
    int16_t l_660 = (-4);
    int i, j, k;
    for (p_22 = 0; (p_22 != 45); p_22++)
    { /* block id: 193 */
        int32_t l_576[9][7][4] = {{{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}, {{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}, {{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}, {{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}, {{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}, {{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}, {{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}, {{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}, {{(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}, {(-3), 0x400582BA, (-3), 0x400582BA}}};
        int32_t l_595 = 0xD70ABE7D;
        uint8_t l_636 = 254U;
        int32_t l_637 = 1;
        int32_t l_640 = 9;
        int32_t l_641 = 0xFA7E0C69;
        int32_t l_642 = (-4);
        int32_t l_643 = 1;
        int i, j, k;
        g_323 |= ((g_535[3][5][0] = (safe_rshift_func_int16_t_s_s((safe_rshift_func_uint16_t_u_s((l_575 = (l_574 = (safe_mul_func_uint16_t_u_u(l_572, (l_573 = 0xAE05))))), (((l_576[6][0][0] ^ p_21) != ((0x56 < (safe_mul_func_int16_t_s_s((-1), 3U))) > ((safe_add_func_uint8_t_u_u(((((safe_rshift_func_int8_t_s_s(g_386, 7)) || (safe_lshift_func_uint16_t_u_s((safe_add_func_int16_t_s_s((p_21 != l_576[6][0][0]), 1U)), g_375))) || l_576[6][0][0]) ^ p_22), 0xA3)) < l_576[6][0][0]))) && p_22))), 5))) > g_497[0][5][2]);
        if (l_576[3][0][3])
            break;
        g_323 = ((((g_497[1][4][0] == (safe_add_func_uint32_t_u_u(p_22, ((safe_mul_func_uint8_t_u_u((p_21 = (safe_add_func_uint32_t_u_u((safe_rshift_func_int16_t_s_u((-1), 11)), (g_70 ^= p_22)))), g_497[0][5][2])) < ((l_595 &= l_573) ^ 9))))) | (g_137 = (((safe_sub_func_uint16_t_u_u((safe_sub_func_uint8_t_u_u(g_278, l_576[6][0][0])), g_167)) != 0xE62FC5E8) >= g_145))) | l_574) != l_572);
        for (g_378 = 0; (g_378 >= 18); g_378 = safe_add_func_uint8_t_u_u(g_378, 1))
        { /* block id: 207 */
            uint16_t l_606 = 0xEA1E;
            int32_t l_619[4][6] = {{(-1), 0x96DF4C2B, (-10), 0x96DF4C2B, (-1), 0x96DF4C2B}, {(-1), 0x96DF4C2B, (-10), 0x96DF4C2B, (-1), 0x96DF4C2B}, {(-1), 0x96DF4C2B, (-10), 0x96DF4C2B, (-1), 0x96DF4C2B}, {(-1), 0x96DF4C2B, (-10), 0x96DF4C2B, (-1), 0x96DF4C2B}};
            int32_t l_629 = 0;
            int8_t l_638 = (-8);
            int8_t l_639 = 1;
            int i, j;
            l_619[1][4] &= (0x5978BF05 == (l_576[6][0][0] || (l_575 = ((safe_mod_func_int32_t_s_s(1, ((g_375 &= (safe_add_func_int8_t_s_s(0x93, (l_606 || (safe_sub_func_uint16_t_u_u(((safe_mul_func_uint16_t_u_u((safe_rshift_func_uint16_t_u_u((safe_rshift_func_int16_t_s_s((l_595 = (safe_mul_func_uint8_t_u_u((p_22 <= (g_341 = (safe_add_func_int8_t_s_s(l_576[6][0][0], (((-1) > l_595) >= g_493))))), 0xDB))), g_371)), g_70)), p_21)) && g_110), 0x83D2)))))) && 0x153F5DAA))) > l_606))));
            l_637 ^= (l_574 <= ((((((p_22 == (1U >= 0U)) != 0x247902F6) || (safe_sub_func_int32_t_s_s((safe_mul_func_int16_t_s_s(((safe_mul_func_uint8_t_u_u((!(safe_mul_func_int8_t_s_s(l_629, (safe_mul_func_int8_t_s_s(p_22, (p_21 && ((safe_mul_func_int8_t_s_s((safe_add_func_int32_t_s_s((l_575 = (g_70 != g_137)), p_22)), (-1))) | 0x75))))))), g_375)) < (-1)), 0xDB85)), p_21))) || l_595) != p_22) <= l_636));
            l_574 = p_21;
            g_644++;
        }
    }
    g_110 = (g_341 || 0x783F45E6);
    ++g_657;
    --g_663;
    return p_22;
}


/* ------------------------------------------ */
/* 
 * reads : g_137 g_110 g_341 g_375 g_371 g_70 g_168 g_54
 * writes: g_110 g_341 g_386
 */
inline static int16_t  func_26(uint8_t  p_27, uint32_t  p_28, uint16_t  p_29)
{ /* block id: 175 */
    int16_t l_538[1][3];
    int32_t l_539 = 1;
    int16_t l_563 = 0x1B20;
    int i, j;
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 3; j++)
            l_538[i][j] = 8;
    }
    l_539 &= (l_538[0][2] &= g_137);
    for (g_110 = (-22); (g_110 > 12); ++g_110)
    { /* block id: 180 */
        for (g_341 = 0; (g_341 <= 16); g_341 = safe_add_func_uint16_t_u_u(g_341, 5))
        { /* block id: 183 */
            uint8_t l_544 = 1U;
            return l_544;
        }
    }
    l_563 = (safe_mul_func_int8_t_s_s(g_375, (0x9985 > (safe_add_func_int32_t_s_s(((safe_rshift_func_uint16_t_u_s((safe_mod_func_int16_t_s_s(l_538[0][2], (safe_sub_func_uint32_t_u_u((((((safe_mul_func_uint8_t_u_u(((((safe_rshift_func_int16_t_s_u(l_538[0][2], (((((255U | (((g_371 && l_538[0][2]) != (safe_sub_func_int8_t_s_s((0xDF4CB8D1 & (safe_add_func_int8_t_s_s(((g_386 = l_538[0][2]) > 0xB637), 1U))), g_371))) != g_70)) == 0x50046D7A) == l_539) || p_27) < 0U))) ^ g_371) == g_341) || 8), p_29)) < 0U) ^ 3) >= g_168) == g_375), p_29)))), p_29)) | g_371), l_539)))));
    return g_54;
}


/* ------------------------------------------ */
/* 
 * reads : g_54 g_30 g_110 g_137 g_70 g_114 g_175 g_168 g_145 g_167 g_174 g_69 g_278 g_323 g_341 g_371 g_378 g_386 g_375 g_493 g_497
 * writes: g_69 g_70 g_110 g_114 g_137 g_145 g_167 g_168 g_175 g_54 g_278 g_323 g_341 g_174 g_371 g_378 g_386 g_375 g_493 g_497 g_535
 */
inline static uint32_t  func_34(int32_t  p_35, uint32_t  p_36, int8_t  p_37)
{ /* block id: 8 */
    int32_t l_66 = 0x691F3A4B;
    int32_t l_78 = 0xD9B6EF54;
    uint32_t l_142 = 4294967295U;
    int32_t l_143[6] = {0x8129AC59, 0x8129AC59, 1, 0x8129AC59, 0x8129AC59, 1};
    uint8_t l_144 = 0xA0;
    int8_t l_210[10][1] = {{0xCD}, {0xCD}, {0xCD}, {0xCD}, {0xCD}, {0xCD}, {0xCD}, {0xCD}, {0xCD}, {0xCD}};
    uint32_t l_213 = 0xF7950AAE;
    uint32_t l_275 = 0x68D0BCE4;
    int32_t l_295[1][6][1] = {{{0x8119FD0A}, {0x8119FD0A}, {0x8119FD0A}, {0x8119FD0A}, {0x8119FD0A}, {0x8119FD0A}}};
    uint32_t l_382 = 4294967293U;
    uint8_t l_420[3][2] = {{1U, 1U}, {1U, 1U}, {1U, 1U}};
    int8_t l_496 = 0x25;
    int32_t l_531 = 0;
    int32_t l_532 = 0xF7E6B739;
    int32_t l_534[10] = {1, 5, 1, 5, 1, 5, 1, 5, 1, 5};
    int i, j, k;
    if ((+((safe_mul_func_int8_t_s_s(0, (safe_mul_func_uint8_t_u_u(func_60(((g_54 != (safe_sub_func_int8_t_s_s((l_66 = 0x32), (func_47((g_70 = (g_69 = (safe_lshift_func_int16_t_s_u(4, 14)))), (p_37 & func_47(func_47((+(safe_mod_func_int16_t_s_s(((safe_lshift_func_uint8_t_u_u(func_38(func_76(l_78), (((g_145 = ((safe_lshift_func_uint16_t_u_u((l_142 = (0xD452736F > g_30)), l_143[2])) | l_144)) == l_78) < 7U)), p_37)) > g_30), p_35))), l_78, l_78), l_143[0], p_37)), p_37) ^ l_144)))) > g_54), g_54, g_54), 0x65)))) & p_35)))
    { /* block id: 47 */
        uint32_t l_203 = 0x97C8AD55;
        int32_t l_214 = 1;
        int32_t l_215[7];
        int16_t l_273 = 0xBE5B;
        int32_t l_385[6];
        uint32_t l_487 = 1U;
        uint8_t l_490 = 0x66;
        int i;
        for (i = 0; i < 7; i++)
            l_215[i] = 0x2BA47188;
        for (i = 0; i < 6; i++)
            l_385[i] = 0xB2485EE6;
        if (((l_78 = g_114) == (+(g_137 = (+(safe_mod_func_int16_t_s_s(((safe_lshift_func_uint16_t_u_s(((safe_sub_func_int16_t_s_s(g_167, 0x0C37)) & (l_215[2] &= (safe_mul_func_int8_t_s_s(((safe_rshift_func_uint8_t_u_u(l_203, 1)) <= ((safe_mod_func_uint32_t_u_u((((((safe_add_func_int16_t_s_s((safe_sub_func_int16_t_s_s((l_210[4][0] = l_203), (l_214 |= (safe_rshift_func_uint16_t_u_s(0xE36F, l_213))))), p_37)) | ((4U | g_110) || 0x48E95C37)) || p_36) | l_142) ^ p_36), 0x8FD7A1EB)) | p_36)), (-1))))), 9)) && (-4)), g_174)))))))
        { /* block id: 53 */
            uint8_t l_236 = 0x2D;
            int32_t l_237[10][6][4] = {{{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}, {{(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}, {(-2), 0x59F58658, 0xDC91CA63, 0x6B7E16A7}}};
            uint16_t l_257 = 1U;
            int32_t l_263[6][3] = {{0xC21BFEE4, 0, 0}, {0xC21BFEE4, 0, 0}, {0xC21BFEE4, 0, 0}, {0xC21BFEE4, 0, 0}, {0xC21BFEE4, 0, 0}, {0xC21BFEE4, 0, 0}};
            uint16_t l_264[9];
            int i, j, k;
            for (i = 0; i < 9; i++)
                l_264[i] = 9U;
            for (g_167 = 5; (g_167 >= 1); g_167 -= 1)
            { /* block id: 56 */
                int32_t l_216[1];
                uint32_t l_242[8] = {2U, 0x57C3E86A, 2U, 0x57C3E86A, 2U, 0x57C3E86A, 2U, 0x57C3E86A};
                int i;
                for (i = 0; i < 1; i++)
                    l_216[i] = 0x14AA7FB4;
                for (l_213 = 0; (l_213 <= 5); l_213 += 1)
                { /* block id: 59 */
                    int i;
                    return l_143[g_167];
                }
                if (l_216[0])
                    break;
                if ((safe_mul_func_uint16_t_u_u(((safe_lshift_func_uint16_t_u_s((safe_add_func_int32_t_s_s(p_35, ((((l_214 = (safe_lshift_func_int8_t_s_s((g_54 ^= (safe_sub_func_uint32_t_u_u((p_35 ^ ((l_216[0] = ((((((l_215[5] = (safe_mod_func_int8_t_s_s(0x56, (safe_lshift_func_int8_t_s_u((g_175 | (l_78 = (l_216[0] > p_36))), ((safe_mul_func_int16_t_s_s((safe_lshift_func_uint8_t_u_u(g_30, (l_237[4][5][1] ^= ((g_145 >= ((!((((g_168 && l_236) | 65535U) > 0xC901) <= 0x96)) ^ 254U)) | 0xD7)))), g_70)) > 0x8AFE)))))) > p_37) || 0x979F6742) & p_36) < l_236) != 0x210429D8)) != g_145)), l_214))), l_236))) & l_210[4][0]) != 65535U) <= l_203))), 5)) & g_174), g_114)))
                { /* block id: 69 */
                    int8_t l_262 = 0xCB;
                    uint8_t l_274 = 255U;
                    for (g_168 = 0; (g_168 <= 5); g_168 += 1)
                    { /* block id: 72 */
                        uint32_t l_238 = 4294967290U;
                        if (l_238)
                            break;
                        l_263[0][2] &= (safe_unary_minus_func_uint8_t_u(((g_54 = ((safe_sub_func_int16_t_s_s(l_242[1], (l_237[1][0][3] = (safe_rshift_func_int8_t_s_u(((safe_mul_func_int8_t_s_s((safe_mul_func_uint16_t_u_u((safe_mod_func_int16_t_s_s((safe_add_func_int16_t_s_s(((safe_sub_func_int32_t_s_s((safe_lshift_func_uint8_t_u_u(((l_257 | g_69) || p_37), (g_175 &= (safe_unary_minus_func_uint16_t_u(l_215[6]))))), ((safe_mul_func_int16_t_s_s(0x2345, ((safe_unary_minus_func_uint16_t_u((g_168 == l_144))) <= 0x24BBF924))) != g_168))) != 0xC308), p_35)), l_262)), p_35)), g_145)) < 255U), g_168))))) != g_114)) > g_110)));
                        l_264[6] = 6;
                        l_275 = (safe_add_func_uint32_t_u_u((safe_add_func_int16_t_s_s(l_142, (((p_37 < (255U != g_30)) ^ (l_273 &= (((((safe_mul_func_int8_t_s_s(p_36, 0xD7)) && ((+g_137) < ((+g_168) ^ p_37))) == p_35) | g_114) ^ 0x258D5DCE))) == l_274))), 0U));
                    }
                    return l_242[1];
                }
                else
                { /* block id: 83 */
                    int32_t l_276[7];
                    int32_t l_277 = 0xCA6D3C6D;
                    int i;
                    for (i = 0; i < 7; i++)
                        l_276[i] = (-1);
                    g_278--;
                }
                g_145 = l_210[2][0];
            }
        }
        else
        { /* block id: 88 */
            uint16_t l_313 = 0U;
            int32_t l_362 = 0xCE069E19;
            int32_t l_363 = 0x5E5775F0;
            l_295[0][2][0] = (safe_mul_func_uint16_t_u_u(((safe_add_func_int8_t_s_s((p_37 = (((g_114 ^= (((safe_lshift_func_int8_t_s_s(((l_78 = ((((safe_add_func_int32_t_s_s(g_69, 5U)) && l_214) != ((l_215[2] ^= 6U) < (safe_add_func_uint16_t_u_u(g_278, 0x34D4)))) && (0x75AE6537 == (-1)))) && ((safe_mod_func_uint32_t_u_u((safe_mul_func_uint16_t_u_u(p_37, g_54)), p_36)) <= g_175)), g_69)) || 1) & 0x4271)) > g_70) > p_37)), g_110)) | 2U), l_273));
            for (g_70 = 0; (g_70 >= 29); ++g_70)
            { /* block id: 96 */
                uint8_t l_310 = 254U;
                int32_t l_314 = 0x33AFFB2B;
                int32_t l_367 = 0x9B1EDB3D;
                int32_t l_368 = 1;
                int32_t l_377 = 0;
                int32_t l_381 = 3;
                for (g_168 = (-11); (g_168 == 15); g_168 = safe_add_func_uint32_t_u_u(g_168, 6))
                { /* block id: 99 */
                    uint16_t l_302 = 0x3057;
                    int32_t l_307 = 0;
                    int32_t l_317 = 2;
                    int32_t l_370[4];
                    int i;
                    for (i = 0; i < 4; i++)
                        l_370[i] = 0xF6EB00A5;
                    l_295[0][0][0] = ((((safe_add_func_int16_t_s_s(((((g_168 < (l_215[2] = (((l_302 = g_174) & (safe_add_func_int8_t_s_s(g_114, (0x03 <= (0xE626 > (g_278 > ((safe_rshift_func_int16_t_s_s(0x9AF7, 8)) && ((l_214 = 0xCB) != (l_78 ^= ((((65529U & p_37) & 0) && l_295[0][5][0]) && 250U)))))))))) ^ p_37))) || l_307) || g_110) && 1), l_275)) >= g_70) || p_36) | 0x2390);
                    for (g_54 = 0; (g_54 <= 0); g_54 += 1)
                    { /* block id: 107 */
                        int32_t l_311 = 1;
                        int16_t l_312[5];
                        int8_t l_364[7] = {0x48, 0x48, 9, 0x48, 0x48, 9, 0x48};
                        int i, j, k;
                        for (i = 0; i < 5; i++)
                            l_312[i] = 6;
                        l_78 = (l_295[g_54][(g_54 + 2)][g_54] ^= (p_37 ^ (p_37 > ((p_36 || (safe_rshift_func_int8_t_s_u((((l_210[(g_54 + 6)][g_54] = (0x243B || 0x0DEA)) < ((g_137 ^= ((((((((l_310 = g_167) != p_35) > (l_311 >= 0x7B)) > p_35) != l_214) > l_312[0]) != 9U) != l_313)) & l_314)) & 0x981A), 1))) == g_167))));
                        l_317 = (l_307 = (safe_sub_func_int8_t_s_s(p_35, p_35)));
                        g_174 = (safe_mul_func_int16_t_s_s(((safe_add_func_uint32_t_u_u((safe_unary_minus_func_uint16_t_u((((g_323 |= 0xFB2E) && (safe_mod_func_int8_t_s_s((((safe_lshift_func_int8_t_s_s((safe_rshift_func_uint16_t_u_u(p_35, (l_295[g_54][(g_54 + 2)][g_54] &= 65534U))), (safe_mul_func_int16_t_s_s((l_307 = (safe_mod_func_uint32_t_u_u((safe_sub_func_uint8_t_u_u((safe_sub_func_int8_t_s_s((safe_rshift_func_int8_t_s_s((((+((g_341--) || (l_215[1] &= (g_341 ^ ((safe_rshift_func_uint8_t_u_s((safe_sub_func_int16_t_s_s((safe_mod_func_uint16_t_u_u((safe_mod_func_int32_t_s_s((((safe_mul_func_int8_t_s_s((((safe_sub_func_int32_t_s_s(((p_37 <= (g_110 & (((safe_rshift_func_int16_t_s_s(l_314, (safe_sub_func_int32_t_s_s(0x2B986226, (((l_363 = ((l_362 = (safe_mod_func_int8_t_s_s((0 != 9), p_37))) & g_168)) != p_37) == g_174))))) & l_302) != 0x371F))) & l_311), p_37)) || 0xCD) && p_37), p_35)) != l_314) != l_273), p_36)), 0x9B98)), (-2))), p_35)) < p_37))))) > 0x5DFE36CB) == g_114), 4)), 0)), p_35)), p_36))), (-1))))) != l_364[4]) >= l_314), 5U))) || p_36))), p_36)) < p_37), p_36));
                    }
                    for (l_313 = 22; (l_313 == 16); l_313 = safe_sub_func_int8_t_s_s(l_313, 9))
                    { /* block id: 126 */
                        int16_t l_369 = 0xA418;
                        int32_t l_374 = 0xB9C6CFBC;
                        int32_t l_376 = 0x8D492CE9;
                        g_371++;
                        g_378--;
                        if (g_168)
                            continue;
                    }
                    l_382--;
                }
            }
        }
        g_386++;
        if ((safe_mul_func_uint16_t_u_u((((safe_lshift_func_int8_t_s_s((safe_sub_func_uint8_t_u_u((((+g_110) == ((+(safe_rshift_func_int8_t_s_s((l_215[2] = l_385[3]), ((((safe_sub_func_int16_t_s_s((safe_sub_func_int32_t_s_s(((safe_mul_func_int16_t_s_s(p_37, p_37)) ^ (safe_rshift_func_int8_t_s_u((safe_mul_func_uint16_t_u_u(g_278, (safe_mul_func_uint8_t_u_u(((safe_mul_func_int8_t_s_s((l_214 |= ((+(l_295[0][2][0] = (((p_36 & g_110) && (safe_lshift_func_int16_t_s_u((safe_mod_func_uint32_t_u_u(((l_66 & (safe_lshift_func_uint8_t_u_u(p_35, 1))) <= p_35), p_35)), g_114))) == 1))) | l_420[1][0])), 1U)) && l_210[3][0]), g_378)))), 6))), 0x1AF65337)), 65532U)) ^ g_110) && g_137) | g_371)))) || 9)) <= 0xA912), g_323)), 7)) < p_37) | g_278), p_37)))
        { /* block id: 139 */
            uint16_t l_445 = 0xFC46;
            int32_t l_462[1];
            int i;
            for (i = 0; i < 1; i++)
                l_462[i] = 0x80BA0935;
            if (g_341)
            { /* block id: 140 */
                int32_t l_442 = 9;
                g_69 = (~(safe_lshift_func_int16_t_s_u(p_36, (safe_rshift_func_uint16_t_u_s(g_323, 6)))));
                g_110 = ((~((safe_rshift_func_uint16_t_u_u(((((safe_sub_func_int16_t_s_s((safe_unary_minus_func_uint32_t_u(l_275)), ((safe_mul_func_int8_t_s_s((p_37 = l_214), ((safe_rshift_func_int8_t_s_u(((((l_215[2] & (g_54 &= (p_36 != p_35))) == (1U ^ (1 && (safe_sub_func_int8_t_s_s(((((safe_mod_func_int32_t_s_s(l_213, (--g_341))) != 4294967295U) < l_445) < l_144), p_36))))) ^ 0x41F7) < 0x617C6CCA), l_442)) & l_442))) <= l_385[3]))) >= l_213) | p_35) == 0U), g_175)) ^ g_386)) & 4294967289U);
            }
            else
            { /* block id: 146 */
                int8_t l_463 = 0x51;
                g_323 = (l_462[0] ^= (g_375 = ((((!(safe_rshift_func_uint8_t_u_s(1U, 1))) & (0xD7 & 255U)) <= (safe_rshift_func_uint8_t_u_u((safe_lshift_func_int16_t_s_s((safe_sub_func_int32_t_s_s((g_145 | (p_37 == ((safe_rshift_func_uint8_t_u_s(248U, l_420[1][0])) > (((!(safe_add_func_uint8_t_u_u((safe_lshift_func_uint8_t_u_u(g_145, 3)), 0x00))) >= p_37) < p_37)))), p_37)), 13)), 6))) >= g_174)));
                l_463 = g_30;
                l_295[0][1][0] = (safe_sub_func_uint8_t_u_u(255U, ((g_137 = (safe_mod_func_uint32_t_u_u(l_462[0], (((safe_mul_func_uint16_t_u_u((safe_lshift_func_int16_t_s_s((safe_rshift_func_int8_t_s_u((safe_sub_func_int32_t_s_s(((~(p_37 > g_375)) ^ (safe_mul_func_int16_t_s_s(((0xDA5BF75F || ((safe_mod_func_uint32_t_u_u((safe_rshift_func_int8_t_s_s(((((((safe_add_func_uint16_t_u_u(p_36, ((l_215[2] ^= (p_37 > p_35)) < (l_214 = ((safe_lshift_func_uint16_t_u_s((g_378 == 0xD1EF), l_203)) < 0x15))))) && 1U) <= g_341) != 0x95) && g_175) && 6U), g_145)), l_210[4][0])) <= g_341)) == p_35), 0xD0C1))), l_462[0])), 2)), p_36)), 0x7FC5)) & 248U) && l_487)))) || l_215[2])));
            }
        }
        else
        { /* block id: 156 */
            int8_t l_488 = 0x5A;
            int32_t l_489[3];
            int i;
            for (i = 0; i < 3; i++)
                l_489[i] = (-1);
            l_490++;
            g_493--;
        }
        ++g_497[0][5][2];
    }
    else
    { /* block id: 161 */
        uint8_t l_524 = 1U;
        int32_t l_533 = 0xF3A4E2AD;
        uint32_t l_536 = 0xA696D364;
        int32_t l_537 = 0xE684A6FA;
        l_537 &= (+(safe_lshift_func_uint16_t_u_s((((g_535[3][5][0] = (safe_mod_func_uint8_t_u_u(((((l_534[1] = (l_533 = (l_532 ^= ((((safe_rshift_func_uint16_t_u_u((~((g_341 &= ((safe_rshift_func_int8_t_s_s((0xBC ^ ((l_295[0][2][0] |= 0x9B) ^ ((safe_lshift_func_uint8_t_u_u((((l_531 = (safe_mul_func_int8_t_s_s((safe_add_func_uint16_t_u_u((((-1) >= ((safe_mul_func_int8_t_s_s(((safe_add_func_int8_t_s_s((g_54 ^= (((safe_mul_func_uint8_t_u_u((safe_lshift_func_uint16_t_u_u(((l_524 <= g_497[0][5][2]) ^ (safe_mul_func_int16_t_s_s((l_78 = ((0xD3 != ((safe_mul_func_int16_t_s_s(((g_167 ^ (5 > (safe_lshift_func_int16_t_s_u((-3), g_378)))) == l_524), p_35)) && g_386)) != 1U)), p_35))), p_35)), g_278)) ^ g_493) ^ 4U)), l_524)) <= l_524), 5)) == p_35)) < l_382), 65535U)), (-1)))) <= p_36) || g_168), 6)) > p_35))), l_144)) || p_37)) || 6U)), l_144)) < l_143[2]) < g_175) | p_35)))) | p_37) & l_142) & p_37), l_142))) != 8U) && l_536), p_37)));
    }
    g_145 = (0x8786 > g_69);
    return p_36;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
inline static uint16_t  func_38(int8_t  p_39, uint32_t  p_40)
{ /* block id: 5 */
    int32_t l_53 = 0xF86FC331;
    return l_53;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int16_t  func_47(int32_t  p_48, int8_t  p_49, int8_t  p_50)
{ /* block id: 1 */
    int16_t l_51[1][8] = {{0xCC54, 0xCC54, 0xA2E7, 0xCC54, 0xCC54, 0xA2E7, 0xCC54, 0xCC54}};
    int i, j;
    for (p_50 = 0; p_50 < 1; p_50 += 1)
    {
        for (p_48 = 0; p_48 < 8; p_48 += 1)
        {
            l_51[p_50][p_48] = 0x38B3;
        }
    }
    return l_51[0][5];
}


/* ------------------------------------------ */
/* 
 * reads : g_70 g_137 g_114 g_54 g_110 g_175 g_168 g_145 g_167
 * writes: g_70 g_167 g_137 g_168 g_145 g_110 g_175 g_114
 */
inline static uint8_t  func_60(int8_t  p_61, int16_t  p_62, uint32_t  p_63)
{ /* block id: 27 */
    uint32_t l_169[4][10] = {{1U, 7U, 0x65346B7F, 6U, 0x23EC1801, 6U, 0x65346B7F, 7U, 1U, 0x99B7E06F}, {1U, 7U, 0x65346B7F, 6U, 0x23EC1801, 6U, 0x65346B7F, 7U, 1U, 0x99B7E06F}, {1U, 7U, 0x65346B7F, 6U, 0x23EC1801, 6U, 0x65346B7F, 7U, 1U, 0x99B7E06F}, {1U, 7U, 0x65346B7F, 6U, 0x23EC1801, 6U, 0x65346B7F, 7U, 1U, 0x99B7E06F}};
    int32_t l_172 = (-1);
    int32_t l_180 = 0x470BB3AF;
    int i, j;
    for (g_70 = 0; (g_70 <= 49); g_70++)
    { /* block id: 30 */
        uint16_t l_162 = 65533U;
        int32_t l_173 = 0x5734C793;
        g_145 = (safe_add_func_uint8_t_u_u(((((safe_mul_func_int16_t_s_s((safe_rshift_func_uint8_t_u_s(255U, 3)), (safe_rshift_func_uint16_t_u_u(0x241D, (l_169[1][2] = ((g_137 && (((((g_168 = ((g_114 > (safe_lshift_func_int8_t_s_u(g_114, 2))) >= (safe_sub_func_int32_t_s_s(0x599A50A9, (safe_add_func_int8_t_s_s(l_162, (g_137 = ((safe_mod_func_uint16_t_u_u(65535U, (g_167 = (safe_sub_func_int8_t_s_s(0x4B, l_162))))) & g_54)))))))) < 0x3317) & p_61) & 0x6489) && g_110)) | g_110)))))) != g_114) < 252U) > g_114), g_114));
        for (g_110 = 0; (g_110 < 20); g_110 = safe_add_func_uint32_t_u_u(g_110, 5))
        { /* block id: 38 */
            ++g_175;
        }
    }
    l_180 = (0xD63D && (g_168 || (((++g_114) | (((safe_mul_func_int8_t_s_s((1 | g_137), ((p_61 <= (l_180 || (p_62 = g_145))) == ((0xAF >= ((safe_rshift_func_int16_t_s_s((((l_172 ^= (safe_mod_func_int16_t_s_s((((0x38 >= g_167) <= 0x08) || 0xE22812B3), g_110))) == p_63) & 0xA3), 15)) ^ 7U)) != 0)))) ^ 4294967295U) > g_70)) == l_169[1][2])));
    return l_172;
}


/* ------------------------------------------ */
/* 
 * reads : g_30 g_54 g_110 g_137
 * writes: g_110 g_114 g_137
 */
inline static int8_t  func_76(uint32_t  p_77)
{ /* block id: 12 */
    int32_t l_89 = 0x7C80C7F4;
    uint16_t l_105 = 0xEB90;
    int32_t l_108[3][7];
    uint8_t l_109[1];
    int32_t l_111 = 0;
    int32_t l_112 = 1;
    int32_t l_113 = 0xEBA84720;
    uint8_t l_123 = 249U;
    int i, j;
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 7; j++)
            l_108[i][j] = 0;
    }
    for (i = 0; i < 1; i++)
        l_109[i] = 0xDE;
    g_114 = ((safe_sub_func_int32_t_s_s(((l_113 = (safe_rshift_func_uint8_t_u_u((safe_mul_func_int16_t_s_s((((((l_112 ^= (((251U || (safe_rshift_func_uint16_t_u_s(g_30, 15))) || (safe_sub_func_uint16_t_u_u((((l_111 ^= (((l_89 > ((safe_add_func_int8_t_s_s(l_89, ((((!(safe_mod_func_uint16_t_u_u((g_110 = (safe_sub_func_uint8_t_u_u((safe_add_func_int16_t_s_s((((l_108[1][5] = (safe_sub_func_uint16_t_u_u((safe_sub_func_int8_t_s_s(((((safe_add_func_int8_t_s_s((65528U & (65532U && 0xAA3A)), l_105)) ^ (safe_lshift_func_uint8_t_u_s(g_54, l_89))) != l_105) <= l_105), 5U)), g_54))) == p_77) ^ 4294967288U), g_54)), l_109[0]))), 0x3F2C))) < 0x6281B62C) & 0x05EE) >= p_77))) == p_77)) || 0xC68D18E1) & p_77)) > p_77) || g_54), g_54))) ^ p_77)) > g_54) == 0U) && 0xB0) > 0x45), 3U)), g_54))) | 0x625F1A37), g_54)) || 2);
    g_137 |= ((safe_sub_func_uint16_t_u_u(((((safe_add_func_uint32_t_u_u(((safe_rshift_func_uint8_t_u_u((((((((safe_mod_func_uint16_t_u_u(p_77, l_123)) >= ((safe_rshift_func_uint16_t_u_u(g_110, 10)) != (l_111 = (p_77 >= ((safe_sub_func_int8_t_s_s((((safe_add_func_int8_t_s_s((g_110 ^ (l_108[1][5] = ((g_114 = ((p_77 || (safe_unary_minus_func_uint16_t_u(((safe_mul_func_uint8_t_u_u(l_123, p_77)) ^ (safe_mod_func_int16_t_s_s((safe_rshift_func_uint8_t_u_u(0x74, p_77)), p_77)))))) <= p_77)) & l_113))), l_111)) >= l_113) <= g_54), g_30)) <= g_30))))) & p_77) > p_77) > g_110) <= 8) && l_108[0][6]), p_77)) && l_123), l_112)) < 0x420E0461) | p_77) > g_110), 0)) ^ (-9));
    g_110 = (2 & (safe_lshift_func_uint8_t_u_u(g_110, l_109[0])));
    return l_108[1][5];
}




/* ---------------------------------------- */
int main (void)
{
    int i, j, k;
    int print_hash_value = 0;
    platform_main_begin();
    func_1();
    csmith_sink_ = g_30;
    csmith_sink_ = g_54;
    csmith_sink_ = g_69;
    csmith_sink_ = g_70;
    csmith_sink_ = g_110;
    csmith_sink_ = g_114;
    csmith_sink_ = g_137;
    csmith_sink_ = g_145;
    csmith_sink_ = g_167;
    csmith_sink_ = g_168;
    csmith_sink_ = g_174;
    csmith_sink_ = g_175;
    csmith_sink_ = g_278;
    csmith_sink_ = g_323;
    csmith_sink_ = g_341;
    csmith_sink_ = g_371;
    csmith_sink_ = g_375;
    csmith_sink_ = g_378;
    csmith_sink_ = g_386;
    csmith_sink_ = g_493;
    for (i = 0; i < 8; i++)
    {
        for (j = 0; j < 10; j++)
        {
            for (k = 0; k < 3; k++)
            {
                csmith_sink_ = g_497[i][j][k];
            }
        }
    }
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 7; j++)
        {
            for (k = 0; k < 5; k++)
            {
                csmith_sink_ = g_535[i][j][k];
            }
        }
    }
    csmith_sink_ = g_644;
    csmith_sink_ = g_657;
    csmith_sink_ = g_661;
    csmith_sink_ = g_662;
    csmith_sink_ = g_663;
    for (i = 0; i < 9; i++)
    {
        csmith_sink_ = g_666[i];
    }
    platform_main_end(0,0);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 147
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 0
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 0
XXX volatile bitfields defined in structs: 0
XXX structs with bitfields in the program: 0
breakdown:
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 0
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 0
XXX times a single bitfield on LHS: 0
XXX times a single bitfield on RHS: 0

XXX max expression depth: 53
breakdown:
   depth: 1, occurrence: 79
   depth: 2, occurrence: 17
   depth: 3, occurrence: 3
   depth: 15, occurrence: 1
   depth: 18, occurrence: 1
   depth: 19, occurrence: 2
   depth: 21, occurrence: 1
   depth: 22, occurrence: 3
   depth: 24, occurrence: 2
   depth: 25, occurrence: 1
   depth: 26, occurrence: 3
   depth: 27, occurrence: 1
   depth: 30, occurrence: 1
   depth: 32, occurrence: 1
   depth: 34, occurrence: 1
   depth: 35, occurrence: 1
   depth: 37, occurrence: 1
   depth: 38, occurrence: 1
   depth: 44, occurrence: 1
   depth: 48, occurrence: 1
   depth: 50, occurrence: 1
   depth: 53, occurrence: 1

XXX total number of pointers: 0

XXX times a non-volatile is read: 445
XXX times a non-volatile is write: 153
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 0

XXX stmts: 80
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 28
   depth: 1, occurrence: 12
   depth: 2, occurrence: 12
   depth: 3, occurrence: 10
   depth: 4, occurrence: 8
   depth: 5, occurrence: 10

XXX percentage a fresh-made variable is used: 19.4
XXX percentage an existing variable is used: 80.6
********************* end of statistics **********************/



Assembly Code with Setting 1: 
	.text
	.file	"tmpv243xl1u.c"
	.globl	main                            # -- Begin function main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movzbl	g_54(%rip), %esi
	andl	$1, %esi
	movzbl	g_110(%rip), %edi
	xorb	$-9, %dil
	orb	g_137(%rip), %dil
	movb	%dil, g_137(%rip)
	movb	$1, %cl
	movl	$50, %eax
	movzbl	g_175(%rip), %edx
	jmp	.LBB0_1
	.p2align	4, 0x90
.LBB0_15:                               #   in Loop: Header=BB0_1 Depth=1
	movb	$1, g_167(%rip)
	movb	%sil, g_137(%rip)
	movb	$1, g_168(%rip)
	movl	%esi, %edi
	movl	%esi, %ecx
	addl	$-5, %eax
	je	.LBB0_17
.LBB0_1:                                # =>This Inner Loop Header: Depth=1
	testb	%cl, %cl
	je	.LBB0_2
# %bb.3:                                #   in Loop: Header=BB0_1 Depth=1
	movb	$1, g_167(%rip)
	movb	%sil, g_137(%rip)
	movb	$1, g_168(%rip)
	movl	%esi, %edi
	movl	%esi, %ecx
	testb	%cl, %cl
	je	.LBB0_5
.LBB0_6:                                #   in Loop: Header=BB0_1 Depth=1
	movb	$1, g_167(%rip)
	movb	%sil, g_137(%rip)
	movb	$1, g_168(%rip)
	movl	%esi, %edi
	movl	%esi, %ecx
	testb	%cl, %cl
	je	.LBB0_8
.LBB0_9:                                #   in Loop: Header=BB0_1 Depth=1
	movb	$1, g_167(%rip)
	movb	%sil, g_137(%rip)
	movb	$1, g_168(%rip)
	movl	%esi, %edi
	movl	%esi, %ecx
	testb	%cl, %cl
	je	.LBB0_11
.LBB0_12:                               #   in Loop: Header=BB0_1 Depth=1
	movb	$1, g_167(%rip)
	movb	%sil, g_137(%rip)
	movb	$1, g_168(%rip)
	movl	%esi, %edi
	movl	%esi, %ecx
	testb	%cl, %cl
	jne	.LBB0_15
	jmp	.LBB0_14
	.p2align	4, 0x90
.LBB0_2:                                #   in Loop: Header=BB0_1 Depth=1
	xorl	%ecx, %ecx
	testb	%cl, %cl
	jne	.LBB0_6
.LBB0_5:                                #   in Loop: Header=BB0_1 Depth=1
	xorl	%ecx, %ecx
	testb	%cl, %cl
	jne	.LBB0_9
.LBB0_8:                                #   in Loop: Header=BB0_1 Depth=1
	xorl	%ecx, %ecx
	testb	%cl, %cl
	jne	.LBB0_12
.LBB0_11:                               #   in Loop: Header=BB0_1 Depth=1
	xorl	%ecx, %ecx
	testb	%cl, %cl
	jne	.LBB0_15
.LBB0_14:                               #   in Loop: Header=BB0_1 Depth=1
	xorl	%ecx, %ecx
	addl	$-5, %eax
	jne	.LBB0_1
.LBB0_17:
	addb	$-56, %dl
	movb	%dl, g_175(%rip)
	movzbl	g_168(%rip), %r11d
	movl	%r11d, %eax
	xorb	$1, %al
	movzbl	%al, %r8d
	incl	%r11d
	xorl	$-13, %esi
	movb	%sil, g_54(%rip)
	movl	g_341(%rip), %r9d
	andl	$1, %r9d
	movl	%r9d, g_341(%rip)
	movl	%edi, %r10d
	andb	$8, %r10b
	movw	$-23997, g_535+260(%rip)        # imm = 0xA243
	movb	$1, g_110(%rip)
	movl	g_657(%rip), %eax
	incl	%eax
	movl	%eax, g_657(%rip)
	movzwl	g_663(%rip), %ecx
	decl	%ecx
	movw	%cx, g_663(%rip)
	andb	$1, g_666.4(%rip)
	movl	g_323(%rip), %ebx
	xorl	$2, %ebx
	movl	%ebx, g_323(%rip)
	movl	$1, csmith_sink_(%rip)
	movl	%esi, csmith_sink_(%rip)
	movl	$4, csmith_sink_(%rip)
	movl	$50, csmith_sink_(%rip)
	movl	$1, csmith_sink_(%rip)
	movl	%r11d, csmith_sink_(%rip)
	movzbl	%dil, %esi
	movl	%esi, csmith_sink_(%rip)
	movl	$1, csmith_sink_(%rip)
	cmpb	$0, g_167(%rip)
	movl	$78, %esi
	movl	$-4, %edi
	cmovnel	%esi, %edi
	movl	%edi, csmith_sink_(%rip)
	movl	%r8d, csmith_sink_(%rip)
	movl	$4, csmith_sink_(%rip)
	movzbl	%dl, %edx
	movl	%edx, csmith_sink_(%rip)
	movl	$9, csmith_sink_(%rip)
	movl	%ebx, csmith_sink_(%rip)
	movl	%r9d, csmith_sink_(%rip)
	movl	$-121073281, csmith_sink_(%rip) # imm = 0xF8C8917F
	movl	$1, csmith_sink_(%rip)
	movl	$20, csmith_sink_(%rip)
	movzbl	%r10b, %edx
	movl	%edx, csmith_sink_(%rip)
	movl	$254, csmith_sink_(%rip)
	xorl	%edx, %edx
	leaq	g_497(%rip), %rsi
	.p2align	4, 0x90
.LBB0_18:                               # =>This Inner Loop Header: Depth=1
	movzbl	(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	1(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	2(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	3(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	4(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	5(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	6(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	7(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	8(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	9(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	10(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	11(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	12(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	13(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	14(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	15(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	16(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	17(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	18(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	19(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	20(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	21(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	22(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	23(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	24(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	25(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	26(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	27(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	28(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movzbl	29(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	addq	$30, %rdx
	cmpq	$240, %rdx
	jne	.LBB0_18
# %bb.19:
	xorl	%edx, %edx
	leaq	g_535(%rip), %rsi
	.p2align	4, 0x90
.LBB0_20:                               # =>This Inner Loop Header: Depth=1
	movswl	(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	2(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	4(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	6(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	8(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	10(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	12(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	14(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	16(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	18(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	20(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	22(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	24(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	26(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	28(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	30(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	32(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	34(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	36(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	38(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	40(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	42(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	44(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	46(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	48(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	50(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	52(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	54(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	56(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	58(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	60(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	62(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	64(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	66(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	movswl	68(%rdx,%rsi), %edi
	movl	%edi, csmith_sink_(%rip)
	addq	$70, %rdx
	cmpq	$490, %rdx                      # imm = 0x1EA
	jne	.LBB0_20
# %bb.21:
	movl	$1, csmith_sink_(%rip)
	movl	%eax, csmith_sink_(%rip)
	movl	$-83, csmith_sink_(%rip)
	movl	$1, csmith_sink_(%rip)
	movzwl	%cx, %eax
	movl	%eax, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movzbl	g_666.4(%rip), %eax
	movl	%eax, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	leaq	.L.str(%rip), %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	printf@PLT
	xorl	%eax, %eax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc
                                        # -- End function
	.type	csmith_sink_,@object            # @csmith_sink_
	.bss
	.globl	csmith_sink_
	.p2align	2, 0x0
csmith_sink_:
	.long	0                               # 0x0
	.size	csmith_sink_, 4

	.type	g_54,@object                    # @g_54
	.data
g_54:
	.byte	1                               # 0x1
	.size	g_54, 1

	.type	g_110,@object                   # @g_110
	.local	g_110
	.comm	g_110,1,4
	.type	g_137,@object                   # @g_137
g_137:
	.byte	204                             # 0xcc
	.size	g_137, 1

	.type	g_167,@object                   # @g_167
	.local	g_167
	.comm	g_167,1,1
	.type	g_168,@object                   # @g_168
	.local	g_168
	.comm	g_168,1,4
	.type	g_175,@object                   # @g_175
g_175:
	.byte	233                             # 0xe9
	.size	g_175, 1

	.type	g_323,@object                   # @g_323
	.p2align	2, 0x0
g_323:
	.long	82255302                        # 0x4e71dc6
	.size	g_323, 4

	.type	g_341,@object                   # @g_341
	.p2align	2, 0x0
g_341:
	.long	1030275954                      # 0x3d68c372
	.size	g_341, 4

	.type	g_497,@object                   # @g_497
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
g_497:
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.ascii	"\002\360\377"
	.size	g_497, 240

	.type	g_535,@object                   # @g_535
	.data
	.p2align	4, 0x0
g_535:
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.short	51647                           # 0xc9bf
	.short	26642                           # 0x6812
	.short	1                               # 0x1
	.short	24039                           # 0x5de7
	.short	2730                            # 0xaaa
	.size	g_535, 490

	.type	g_657,@object                   # @g_657
	.p2align	2, 0x0
g_657:
	.long	3319490377                      # 0xc5db6749
	.size	g_657, 4

	.type	g_663,@object                   # @g_663
	.p2align	1, 0x0
g_663:
	.short	32826                           # 0x803a
	.size	g_663, 2

	.type	g_666.4,@object                 # @g_666.4
g_666.4:
	.byte	255                             # 0xff
	.size	g_666.4, 1

	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"checksum = %X\n"
	.size	.L.str, 15

	.ident	"clang version 16.0.6"
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym csmith_sink_


Assembly Code with Setting 2: 
	.file	"tmpgulqazzw.c"
	.text
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC3:
	.string	"checksum = %X\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LFB97:
	.cfi_startproc
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	movl	$4, g_69(%rip)
	xorl	%ecx, %ecx
	movzbl	g_54(%rip), %eax
	movzbl	g_175(%rip), %edx
	andl	$1, %eax
.L2:
	incl	%ecx
	cmpl	$50, %ecx
	je	.L11
	testb	%al, %al
	jne	.L2
.L11:
	xorl	%esi, %esi
	movl	$-23997, %edi
	movl	$2, %ecx
	movl	g_323(%rip), %r9d
	movw	%si, g_386(%rip)
	movzwl	g_663(%rip), %esi
	movl	%eax, %r10d
	subl	$56, %edx
	movw	%di, 260+g_535(%rip)
	movl	g_657(%rip), %edi
	xorl	$-13, %r10d
	xorl	$2, %r9d
	movw	%cx, g_114(%rip)
	movl	g_341(%rip), %ecx
	leal	1(%rdi), %r8d
	leal	-1(%rsi), %edi
	movzbl	4+g_666(%rip), %esi
	movb	%dl, g_175(%rip)
	andl	$1, %ecx
	movb	%al, g_137(%rip)
	movzbl	%dl, %edx
	movzbl	%al, %eax
	movb	%r10b, g_54(%rip)
	andl	$1, %esi
	movsbl	%r10b, %r10d
	movl	$1, csmith_sink_(%rip)
	movl	%ecx, g_341(%rip)
	movl	%r10d, csmith_sink_(%rip)
	movl	$50, g_70(%rip)
	movl	$4, csmith_sink_(%rip)
	movl	$1, g_145(%rip)
	movl	$50, csmith_sink_(%rip)
	movl	$0, g_168(%rip)
	movl	$1, csmith_sink_(%rip)
	movb	$78, g_167(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$1, g_110(%rip)
	movl	%eax, csmith_sink_(%rip)
	leaq	g_535(%rip), %rax
	movl	$1, csmith_sink_(%rip)
	movl	%r8d, g_657(%rip)
	movl	$78, csmith_sink_(%rip)
	movw	%di, g_663(%rip)
	movl	$0, csmith_sink_(%rip)
	movb	%sil, 4+g_666(%rip)
	movl	%r9d, g_323(%rip)
	movl	$4, csmith_sink_(%rip)
	movl	%edx, csmith_sink_(%rip)
	movl	$9, csmith_sink_(%rip)
	movl	%r9d, csmith_sink_(%rip)
	movl	%ecx, csmith_sink_(%rip)
	leaq	490(%rax), %rcx
	movl	$-121073281, csmith_sink_(%rip)
	movl	$1, csmith_sink_(%rip)
	movl	$20, csmith_sink_(%rip)
	movl	$0, csmith_sink_(%rip)
	movl	$254, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
	movl	$2, csmith_sink_(%rip)
	movl	$240, csmith_sink_(%rip)
	movl	$255, csmith_sink_(%rip)
.L8:
	movswl	(%rax), %edx
	addq	$70, %rax
	movl	%edx, csmith_sink_(%rip)
	movswl	-68(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-66(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-64(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-62(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-60(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-58(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-56(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-54(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-52(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-50(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-48(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-46(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-44(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-42(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-40(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-38(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-36(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-34(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-32(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-30(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-28(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-26(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-24(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-22(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-20(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-18(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-16(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-14(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-12(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-10(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-8(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-6(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-4(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	movswl	-2(%rax), %edx
	movl	%edx, csmith_sink_(%rip)
	cmpq	%rax, %rcx
	jne	.L8
	movzbl	g_666(%rip), %eax
	movzwl	%di, %edi
	movl	$1, csmith_sink_(%rip)
	movzbl	%sil, %esi
	movl	%r8d, csmith_sink_(%rip)
	movl	$-83, csmith_sink_(%rip)
	movl	$1, csmith_sink_(%rip)
	movl	%edi, csmith_sink_(%rip)
	leaq	.LC3(%rip), %rdi
	movl	%eax, csmith_sink_(%rip)
	movzbl	1+g_666(%rip), %eax
	movl	%eax, csmith_sink_(%rip)
	movzbl	2+g_666(%rip), %eax
	movl	%eax, csmith_sink_(%rip)
	movzbl	3+g_666(%rip), %eax
	movl	%eax, csmith_sink_(%rip)
	movzbl	5+g_666(%rip), %eax
	movl	%esi, csmith_sink_(%rip)
	xorl	%esi, %esi
	movl	%eax, csmith_sink_(%rip)
	movzbl	6+g_666(%rip), %eax
	movl	%eax, csmith_sink_(%rip)
	movzbl	7+g_666(%rip), %eax
	movl	%eax, csmith_sink_(%rip)
	movzbl	8+g_666(%rip), %eax
	movl	%eax, csmith_sink_(%rip)
	xorl	%eax, %eax
	call	printf@PLT
	xorl	%eax, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE97:
	.size	main, .-main
	.data
	.align 8
	.type	g_666, @object
	.size	g_666, 9
g_666:
	.ascii	"\377\377\377\377\377\377\377\377\377"
	.align 2
	.type	g_663, @object
	.size	g_663, 2
g_663:
	.value	-32710
	.align 4
	.type	g_657, @object
	.size	g_657, 4
g_657:
	.long	-975476919
	.align 32
	.type	g_535, @object
	.size	g_535, 490
g_535:
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.value	-13889
	.value	26642
	.value	1
	.value	24039
	.value	2730
	.local	g_386
	.comm	g_386,2,2
	.align 4
	.type	g_341, @object
	.size	g_341, 4
g_341:
	.long	1030275954
	.align 4
	.type	g_323, @object
	.size	g_323, 4
g_323:
	.long	82255302
	.type	g_175, @object
	.size	g_175, 1
g_175:
	.byte	-23
	.align 4
	.type	g_168, @object
	.size	g_168, 4
g_168:
	.long	1
	.type	g_167, @object
	.size	g_167, 1
g_167:
	.byte	-4
	.align 4
	.type	g_145, @object
	.size	g_145, 4
g_145:
	.long	-5
	.type	g_137, @object
	.size	g_137, 1
g_137:
	.byte	-52
	.align 2
	.type	g_114, @object
	.size	g_114, 2
g_114:
	.value	-5
	.align 4
	.type	g_110, @object
	.size	g_110, 4
g_110:
	.long	-1
	.align 4
	.type	g_70, @object
	.size	g_70, 4
g_70:
	.long	-19970144
	.align 4
	.type	g_69, @object
	.size	g_69, 4
g_69:
	.long	-1438119999
	.type	g_54, @object
	.size	g_54, 1
g_54:
	.byte	1
	.globl	csmith_sink_
	.bss
	.align 4
	.type	csmith_sink_, @object
	.size	csmith_sink_, 4
csmith_sink_:
	.zero	4
	.ident	"GCC: (GNU) 13.2.1 20230801"
	.section	.note.GNU-stack,"",@progbits


