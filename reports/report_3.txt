--- Interesting Case Report --- 

Interesting Variables: 
['g_74']

Interesting Assembly Lines: 
{'g_74': {'setting1:': [], 'setting2': [['movl', '$0,', 'g_74(%rip)']]}}

Source Code: 
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles --no-volatile-pointers --arrays --no-bitfields --checksum --comma-operators --no-compound-assignment --no-consts --no-divs --no-embedded-assigns --no-jumps --no-longlong --force-non-uniform-arrays --no-math64 --muls --no-packed-struct --no-paranoid --pointers --no-structs --no-inline-function --return-structs --arg-structs --no-dangling-global-pointers
 * Seed:      12792152951972894026
 */


#define NO_LONGLONG

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
/* --- GLOBAL VARIABLES --- */
static int32_t g_2[2] = {0x110C93B4,0x110C93B4};
static int32_t g_8 = (-9);
static int32_t g_11 = (-1);
static int32_t g_15[7][5] = {{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1}};
static int32_t g_25 = 1;
static int32_t *g_46[10][4] = {{&g_2[1],&g_2[1],&g_15[5][0],(void*)0},{&g_2[1],&g_2[1],(void*)0,&g_2[1]},{&g_15[5][0],&g_15[3][1],&g_2[1],(void*)0},{&g_15[5][0],&g_2[1],&g_2[1],(void*)0},{(void*)0,&g_15[3][1],(void*)0,(void*)0},{(void*)0,(void*)0,&g_2[1],(void*)0},{&g_15[5][0],(void*)0,&g_2[1],(void*)0},{&g_2[1],&g_15[3][1],&g_2[1],(void*)0},{&g_15[5][0],&g_2[1],&g_2[1],(void*)0},{(void*)0,&g_15[3][1],(void*)0,(void*)0}};
static int32_t **g_45 = &g_46[2][2];
static int32_t g_74 = 0x75FF9B03;
static int32_t g_100 = 0xA33634C7;
static int32_t ***g_177[8] = {&g_45,&g_45,&g_45,&g_45,&g_45,&g_45,&g_45,&g_45};
static int32_t ****g_176[6] = {&g_177[0],&g_177[0],&g_177[0],&g_177[0],&g_177[0],&g_177[0]};
static int32_t *****g_296 = &g_176[1];
static int16_t g_445 = (-9);
static int32_t *g_510 = &g_15[5][3];
static int32_t ***g_704 = (void*)0;
static int16_t g_726 = 5;
static uint32_t g_741 = 4294967295U;
static uint16_t g_742 = 1U;


/* --- FORWARD DECLARATIONS --- */
static uint8_t  func_1(void);
static int16_t  func_16(uint32_t  p_17, uint32_t  p_18, int16_t  p_19, int32_t * p_20);
static int32_t * func_21(uint32_t  p_22);
static int32_t ** func_34(int32_t * p_35, uint32_t  p_36, uint8_t  p_37);
static uint16_t  func_43(int32_t ** p_44);
static int32_t  func_47(int32_t ** p_48, int32_t  p_49, int32_t * p_50);
static int32_t ** func_52(int32_t ** p_53, int16_t  p_54, int32_t ** p_55);
static int32_t ** func_56(int32_t ** p_57, uint32_t  p_58, uint8_t  p_59, int32_t * p_60, int32_t  p_61);
static int32_t ** func_62(int32_t * p_63, int32_t  p_64, int8_t  p_65);
static int32_t * func_66(int32_t * p_67);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_2 g_8 g_11 g_15 g_74 g_445 g_25 g_45 g_100 g_510 g_704 g_726 g_741 g_742 g_46 g_296
 * writes: g_2 g_8 g_11 g_15 g_46 g_74 g_25 g_100 g_177 g_445 g_296 g_510 g_176
 */
static uint8_t  func_1(void)
{ /* block id: 0 */
    int16_t l_608 = 1;
    int32_t l_686[10] = {0,0x74E2A4D2,0,0x74E2A4D2,0,0,0x74E2A4D2,0,0x74E2A4D2,0};
    int32_t **l_696 = &g_510;
    uint16_t l_697[1][5][5] = {{{0x46F2,0x794B,1U,0x46F2,0x259F},{1U,0x46F2,0x2363,0x46F2,1U},{1U,65528U,0x794B,0x259F,65528U},{1U,0x794B,0x794B,1U,0x259F},{0x46F2,1U,0x2363,65528U,65528U}}};
    int32_t *l_769 = &l_686[3];
    int32_t l_829 = (-5);
    int32_t *l_856 = &l_686[7];
    uint8_t l_868[4] = {0x7C,0x7C,0x7C,0x7C};
    int32_t ****l_871 = (void*)0;
    int32_t *l_873 = (void*)0;
    int i, j, k;
    for (g_2[1] = 0; (g_2[1] > 0); g_2[1]++)
    { /* block id: 3 */
        int32_t *l_6 = (void*)0;
        int32_t *l_7 = &g_8;
        int32_t l_661 = 0xEF0A2A8D;
        (*l_7) = (+g_2[1]);
        for (g_8 = 1; (g_8 != 25); g_8 = safe_add_func_uint32_t_u_u(g_8, 6))
        { /* block id: 7 */
            int32_t l_14[5][10] = {{0x91509CF1,(-2),(-1),4,(-2),1,(-2),4,(-1),(-2)},{0x91509CF1,0x0ED3C15D,(-1),4,0x0ED3C15D,0x1247ADF1,(-2),(-1),(-1),(-2)},{0x1247ADF1,(-2),(-1),(-1),(-2),0x1247ADF1,0x0ED3C15D,4,(-1),0x0ED3C15D},{0x91509CF1,(-2),(-1),4,(-2),1,(-2),4,(-1),(-2)},{0x91509CF1,0x0ED3C15D,(-1),4,0x0ED3C15D,0x1247ADF1,(-2),(-1),(-1),(-2)}};
            int32_t *****l_610[7][10] = {{&g_176[3],&g_176[1],(void*)0,(void*)0,&g_176[1],&g_176[3],(void*)0,&g_176[3],&g_176[1],(void*)0},{&g_176[3],&g_176[4],&g_176[3],(void*)0,(void*)0,(void*)0,(void*)0,&g_176[3],&g_176[4],&g_176[3]},{&g_176[3],&g_176[3],&g_176[4],&g_176[1],&g_176[4],&g_176[3],&g_176[3],&g_176[3],&g_176[3],&g_176[4]},{&g_176[3],&g_176[3],&g_176[3],&g_176[3],&g_176[4],&g_176[1],&g_176[4],&g_176[3],&g_176[3],&g_176[3]},{&g_176[4],&g_176[3],(void*)0,(void*)0,(void*)0,(void*)0,&g_176[3],&g_176[4],&g_176[3],(void*)0},{&g_176[1],&g_176[3],(void*)0,&g_176[3],&g_176[1],(void*)0,(void*)0,(void*)0,&g_176[3],&g_176[4]},{&g_176[5],&g_176[5],&g_176[4],(void*)0,&g_176[3],(void*)0,&g_176[4],&g_176[5],&g_176[5],&g_176[4]}};
            uint32_t l_642 = 0x30456893;
            uint8_t l_689 = 0U;
            int16_t l_690 = 0xBCC0;
            int i, j;
            for (g_11 = (-5); (g_11 >= 7); g_11 = safe_add_func_uint8_t_u_u(g_11, 2))
            { /* block id: 10 */
                int32_t *l_641[6];
                int i;
                for (i = 0; i < 6; i++)
                    l_641[i] = (void*)0;
                for (g_15[5][0] = 0; (g_15[5][0] <= 4); g_15[5][0] += 1)
                { /* block id: 13 */
                    int32_t ***l_611 = &g_45;
                    int i, j;
                }
                if (l_608)
                { /* block id: 298 */
                    return g_2[1];
                }
                else
                { /* block id: 300 */
                    int32_t l_612 = (-1);
                    (*g_45) = ((l_612 , (safe_mul_func_int8_t_s_s(((g_8 ^ (safe_mul_func_uint8_t_u_u((safe_sub_func_uint8_t_u_u(g_15[6][2], (g_15[5][0] > ((safe_mod_func_int16_t_s_s(((safe_mul_func_uint16_t_u_u(g_2[0], (((safe_add_func_uint16_t_u_u(((((safe_rshift_func_uint8_t_u_u(g_2[1], 5)) | (l_608 ^ (safe_rshift_func_int8_t_s_u(((safe_mul_func_uint16_t_u_u((+(safe_unary_minus_func_int32_t_s(((safe_lshift_func_uint16_t_u_u((safe_mod_func_uint32_t_u_u((safe_mod_func_int8_t_s_s((((void*)0 != l_641[5]) >= 1), l_608)), 0xFE9D8B7B)), g_74)) == g_15[0][3])))), 1)) && g_15[2][4]), 7)))) > 0xA1A0) ^ l_642), g_445)) , g_2[0]) <= l_612))) , g_11), g_25)) , 0U)))), g_74))) , (-7)), g_2[1]))) , (void*)0);
                }
                for (l_642 = 0; (l_642 == 13); l_642++)
                { /* block id: 305 */
                }
            }
            for (g_74 = 0; (g_74 >= 8); ++g_74)
            { /* block id: 311 */
                int32_t l_660 = 0xD815AE43;
                for (g_25 = 0; (g_25 <= 3); g_25 += 1)
                { /* block id: 314 */
                    int16_t l_683 = 0xC5DC;
                    for (l_608 = 0; (l_608 <= 3); l_608 += 1)
                    { /* block id: 317 */
                        int i, j;
                        g_15[g_25][(g_25 + 1)] = (safe_rshift_func_int8_t_s_s((safe_rshift_func_int8_t_s_u((safe_add_func_int8_t_s_s((g_15[(g_25 + 1)][l_608] , (((((+g_15[(l_608 + 1)][l_608]) , g_15[(g_25 + 1)][l_608]) , (safe_mod_func_uint16_t_u_u((l_610[(g_25 + 1)][(l_608 + 4)] == l_610[(l_608 + 1)][(g_25 + 2)]), g_74))) == 0x53750595) == (safe_lshift_func_uint16_t_u_u((((safe_add_func_int16_t_s_s(g_15[5][4], (l_660 != (-1)))) || 0xC5) , 0x1BC4), 15)))), 0x82)), g_100)), g_100));
                        if (l_661)
                            continue;
                    }
                    (*g_510) = ((safe_rshift_func_int8_t_s_s(((((safe_mod_func_uint32_t_u_u((safe_rshift_func_uint16_t_u_u((((safe_sub_func_int8_t_s_s(((safe_rshift_func_uint8_t_u_u((0x21CD51AE > ((safe_lshift_func_uint8_t_u_s(((safe_add_func_int16_t_s_s((safe_lshift_func_uint16_t_u_s(0x4C7D, g_11)), (safe_sub_func_uint16_t_u_u((+(((safe_mod_func_int32_t_s_s((l_683 >= (safe_mul_func_uint16_t_u_u(g_74, l_686[7]))), g_15[5][0])) , (safe_lshift_func_int8_t_s_u(l_660, g_100))) <= g_100)), g_25)))) , 7U), g_15[2][3])) ^ 0xB722)), g_2[1])) , g_15[5][0]), g_8)) , 7) <= g_2[1]), l_608)), l_689)) <= (-1)) || l_608) && 0U), g_11)) < g_11);
                }
                for (l_608 = 7; (l_608 >= 2); l_608 -= 1)
                { /* block id: 325 */
                    int16_t l_691 = 0x1976;
                    for (g_11 = 1; (g_11 <= 4); g_11 += 1)
                    { /* block id: 328 */
                        int32_t l_694 = (-1);
                        int i, j;
                        l_14[g_11][(g_11 + 4)] = (((((l_690 ^ (g_15[5][0] , (l_691 != (safe_lshift_func_int8_t_s_u((((g_74 , &g_177[l_608]) == (void*)0) != g_15[5][0]), l_691))))) , (0x7BC1 >= 0x0D74)) > l_694) , 9U) , l_686[7]);
                        l_14[g_11][(l_608 + 2)] = (~g_2[1]);
                    }
                }
                (*g_510) = (l_696 != (void*)0);
            }
            if (l_697[0][0][0])
                continue;
            return g_15[5][0];
        }
    }
    for (g_74 = 0; (g_74 == (-11)); g_74 = safe_sub_func_int32_t_s_s(g_74, 5))
    { /* block id: 341 */
        int32_t l_703[2];
        int8_t l_707 = 0x6F;
        int32_t ***l_711 = &l_696;
        int i;
        for (i = 0; i < 2; i++)
            l_703[i] = 6;
        for (g_100 = 0; g_100 < 8; g_100 += 1)
        {
            g_177[g_100] = &g_45;
        }
        (***l_711) = ((+((((safe_sub_func_uint16_t_u_u(l_703[1], ((((((&l_696 == g_704) > g_11) > ((safe_add_func_int8_t_s_s((l_707 == (safe_lshift_func_int16_t_s_s((+g_2[1]), 5))), ((((**l_696) && 0x1E27) & 0x5666) || 0U))) == l_703[0])) , (void*)0) != (void*)0) , 65535U))) , &l_696) == l_711) != g_445)) , (*g_510));
        (*g_45) = (**l_711);
    }
    for (g_445 = 3; (g_445 >= 1); g_445 -= 1)
    { /* block id: 348 */
        uint8_t l_712 = 0xDE;
        int32_t **l_715 = (void*)0;
        uint16_t l_831 = 0xF166;
        if (l_712)
        { /* block id: 349 */
            return (**l_696);
        }
        else
        { /* block id: 351 */
            int32_t **l_719 = &g_46[9][0];
            int32_t l_743 = 0x282849DD;
            int16_t l_766 = 1;
            uint8_t l_801 = 1U;
            int32_t *l_826 = (void*)0;
            int32_t *****l_830 = &g_176[1];
            uint8_t l_836[5][6][2] = {{{0xB5,0xFB},{0x4B,0xFB},{0xB5,252U},{0xE8,0x4B},{0x61,0xA8},{0U,247U}},{{0xBD,0xB5},{0xB2,0xB2},{0x12,0xE8},{0x74,0x16},{0xCB,255U},{255U,0xCB}},{{0xA8,251U},{0xA8,0xCB},{255U,255U},{0xCB,0x16},{0x74,0xE8},{0x12,0xB2}},{{0xB2,0xB5},{0xBD,247U},{0U,0xA8},{0x61,0x4B},{0xE8,252U},{0xB5,0xFB}},{{0x4B,0xFB},{0xB5,252U},{0xE8,0x4B},{0x61,0xA8},{0U,247U},{0xBD,0xB5}}};
            uint8_t l_843 = 1U;
            int i, j, k;
            if ((((safe_mul_func_uint16_t_u_u(((((l_712 , (l_715 != ((safe_unary_minus_func_uint32_t_u((1U | (safe_mul_func_int16_t_s_s(g_11, (**l_696)))))) , l_719))) == (safe_add_func_int16_t_s_s((safe_rshift_func_uint8_t_u_u(((0xB6 < (safe_mod_func_int32_t_s_s(g_726, ((safe_unary_minus_func_int16_t_s((**l_696))) , (*g_510))))) & l_712), g_2[1])), g_11))) || g_445) , g_726), g_15[5][0])) , 4294967290U) & g_15[5][0]))
            { /* block id: 352 */
                uint8_t l_734 = 0x9C;
                int32_t *l_768 = &l_686[7];
                int32_t ****l_800 = &g_177[0];
                int32_t ***l_811[1];
                int i;
                for (i = 0; i < 1; i++)
                    l_811[i] = &l_696;
                if (((((g_726 == g_74) >= (safe_add_func_int16_t_s_s(((((void*)0 == (*l_696)) ^ (((safe_sub_func_int8_t_s_s((safe_sub_func_int32_t_s_s(l_734, ((safe_rshift_func_int16_t_s_s((safe_add_func_uint16_t_u_u((safe_add_func_int32_t_s_s(l_734, g_741)), (((((((((void*)0 == l_696) , g_25) , 0xC23E) || g_2[0]) , (*l_696)) != (void*)0) >= g_11) | 0x85CD7077))), g_2[1])) >= g_25))), g_742)) != l_743) && 1)) == g_11), l_743))) , (void*)0) != l_719))
                { /* block id: 353 */
                    int32_t ****l_751[5];
                    int32_t *l_756 = &g_11;
                    int32_t *****l_775 = &g_176[2];
                    int i;
                    for (i = 0; i < 5; i++)
                        l_751[i] = &g_177[0];
                    if ((((7U != ((((safe_rshift_func_uint8_t_u_u(g_8, ((safe_sub_func_uint8_t_u_u(251U, 252U)) || g_742))) && ((~(safe_rshift_func_uint8_t_u_u(((void*)0 != l_751[3]), ((safe_sub_func_int8_t_s_s(0xF5, ((safe_sub_func_uint8_t_u_u((g_11 , g_742), 0xC2)) , g_25))) || g_2[0])))) , (**l_696))) ^ 0xB0) < 0x2193B84F)) , 1) , 0x8DC244CE))
                    { /* block id: 354 */
                        int8_t l_765 = (-1);
                        l_756 = (*g_45);
                        (*g_45) = func_21((**l_696));
                        (**l_696) = (safe_sub_func_uint16_t_u_u(((g_2[1] , (((void*)0 != &l_696) && (safe_rshift_func_int16_t_s_u(g_2[0], g_100)))) | (1U == ((safe_lshift_func_uint8_t_u_u((2U & g_100), (((safe_mod_func_uint16_t_u_u((g_15[5][0] > l_734), 1U)) ^ l_765) || l_734))) > l_766))), g_445));
                    }
                    else
                    { /* block id: 358 */
                        int32_t **l_767[10] = {&g_46[2][2],&g_46[2][2],&g_46[2][2],&g_46[2][2],&g_46[2][2],&g_46[2][2],&g_46[2][2],&g_46[2][2],&g_46[2][2],&g_46[2][2]};
                        int i;
                        (*g_45) = (*l_719);
                        (*g_510) = (l_767[5] == (void*)0);
                        return g_8;
                    }
                    for (l_712 = 0; (l_712 <= 3); l_712 += 1)
                    { /* block id: 365 */
                        int i, j;
                        g_15[(g_445 + 3)][l_712] = (**l_696);
                        g_46[(l_712 + 6)][g_445] = l_768;
                    }
                    (**l_696) = ((((void*)0 == &g_176[4]) & ((0x97B95F03 && ((((((g_8 != 0x9622) >= (!(safe_lshift_func_int16_t_s_s((safe_mul_func_uint16_t_u_u(g_8, ((l_775 == &l_751[3]) , ((safe_sub_func_uint16_t_u_u((g_445 , (*l_768)), 0x48F2)) , 1)))), 6)))) , (**l_696)) == (**l_696)) >= g_8) > g_8)) <= 0xF5AC)) ^ (*l_769));
                }
                else
                { /* block id: 372 */
                    uint16_t l_783 = 0x364F;
                    int32_t *l_784 = &g_25;
                    int32_t ***l_810 = &g_45;
                    int32_t l_825[10][9][1] = {{{0x03CC710C},{1},{1},{(-2)},{3},{1},{(-6)},{(-1)},{(-1)}},{{(-1)},{(-6)},{1},{3},{(-2)},{1},{1},{0x03CC710C},{0xAC689A91}},{{(-8)},{0xCBEFC64F},{0xBF6571E9},{(-1)},{0xBF6571E9},{0xCBEFC64F},{(-8)},{0xAC689A91},{0x03CC710C}},{{1},{1},{(-2)},{3},{1},{(-6)},{(-1)},{(-1)},{(-1)}},{{(-6)},{1},{3},{(-2)},{1},{1},{0x03CC710C},{0xAC689A91},{(-8)}},{{0xCBEFC64F},{0xBF6571E9},{(-1)},{0xBF6571E9},{0xCBEFC64F},{(-8)},{0xAC689A91},{0x03CC710C},{1}},{{1},{(-2)},{3},{1},{(-6)},{(-1)},{(-1)},{(-1)},{(-6)}},{{1},{3},{(-2)},{1},{1},{0x03CC710C},{0xAC689A91},{(-8)},{0xCBEFC64F}},{{0xBF6571E9},{(-1)},{0xBF6571E9},{0xCBEFC64F},{(-8)},{0xAC689A91},{0x03CC710C},{1},{1}},{{(-2)},{3},{1},{(-6)},{(-1)},{(-1)},{(-1)},{(-6)},{1}}};
                    int i, j, k;
                    for (l_608 = 0; (l_608 <= 4); l_608 += 1)
                    { /* block id: 375 */
                        int16_t l_780[1][3];
                        int8_t l_781[1];
                        int32_t ****l_782 = &g_177[4];
                        int i, j;
                        for (i = 0; i < 1; i++)
                        {
                            for (j = 0; j < 3; j++)
                                l_780[i][j] = 0;
                        }
                        for (i = 0; i < 1; i++)
                            l_781[i] = 0xF8;
                        (*l_782) = (((&g_176[1] == (void*)0) || (-5)) , ((safe_add_func_int32_t_s_s(((l_780[0][2] | (((9 < ((g_2[1] < (**l_696)) & ((g_25 > (0x252C1483 ^ l_781[0])) , g_15[1][4]))) | g_15[1][0]) & g_11)) ^ 0U), 0U)) , &l_715));
                        g_296 = &g_176[3];
                        g_15[(g_445 + 2)][(g_445 + 1)] = l_783;
                        return g_15[5][0];
                    }
                    (*g_45) = l_784;
                    if ((safe_sub_func_uint8_t_u_u((*l_784), ((**l_696) && (*l_768)))))
                    { /* block id: 382 */
                        int32_t l_791 = (-3);
                        (**l_696) = (safe_lshift_func_int16_t_s_u((safe_lshift_func_int8_t_s_s(((((l_791 ^ (*l_768)) , (((-1) <= (safe_mod_func_int8_t_s_s(g_726, g_15[5][0]))) , (((safe_lshift_func_int16_t_s_u(g_15[5][3], 7)) | (safe_rshift_func_uint16_t_u_s((((((safe_mul_func_int8_t_s_s(((l_800 == (void*)0) , 0xF2), (-1))) ^ 0x1B) & l_791) | g_74) != g_445), 3))) > (**l_696)))) == 0) | 0xCFBF8F52), 1)), 14));
                        if (l_801)
                            break;
                    }
                    else
                    { /* block id: 385 */
                        uint32_t l_816[6][6][3] = {{{4294967294U,4294967289U,0xEC1BF194},{0xD2935B5B,4294967295U,7U},{0xE136C1CB,4294967289U,0x7EBE4E52},{7U,4294967295U,1U},{0xDAF12B6C,4294967289U,4294967289U},{0x9EF50DD6,4294967295U,0x91D893F3}},{{0x7EBE4E52,8U,4294967291U},{7U,0x52C31764,0xC3E7F4C0},{0xEC1BF194,8U,0U},{4294967295U,0x52C31764,0xA47ED59C},{4294967289U,8U,8U},{1U,0x52C31764,0x91D893F3}},{{0x7EBE4E52,8U,4294967291U},{7U,0x52C31764,0xC3E7F4C0},{0xEC1BF194,8U,0U},{4294967295U,0x52C31764,0xA47ED59C},{4294967289U,8U,8U},{1U,0x52C31764,0x91D893F3}},{{0x7EBE4E52,8U,4294967291U},{7U,0x52C31764,0xC3E7F4C0},{0xEC1BF194,8U,0U},{4294967295U,0x52C31764,0xA47ED59C},{4294967289U,8U,8U},{1U,0x52C31764,0x91D893F3}},{{0x7EBE4E52,8U,4294967291U},{7U,0x52C31764,0xC3E7F4C0},{0xEC1BF194,8U,0U},{4294967295U,0x52C31764,0xA47ED59C},{4294967289U,8U,8U},{1U,0x52C31764,0x91D893F3}},{{0x7EBE4E52,8U,4294967291U},{7U,0x52C31764,0xC3E7F4C0},{0xEC1BF194,8U,0U},{4294967295U,0x52C31764,0xA47ED59C},{4294967289U,8U,8U},{1U,0x52C31764,0x91D893F3}}};
                        int i, j, k;
                        (**l_810) = (((safe_mod_func_uint16_t_u_u((((65530U <= (safe_add_func_uint32_t_u_u(g_741, (safe_mul_func_int8_t_s_s((safe_rshift_func_int16_t_s_u(((l_810 != l_811[0]) & g_11), 14)), (-6)))))) , (safe_rshift_func_int16_t_s_s((safe_rshift_func_int16_t_s_s((l_816[5][4][1] <= ((((safe_mul_func_uint16_t_u_u((safe_add_func_uint8_t_u_u((safe_rshift_func_int8_t_s_s(((g_741 >= (g_445 >= g_2[1])) <= 253U), g_2[1])), (*l_769))), g_15[5][0])) >= 0) < g_742) ^ l_801)), 3)), (*l_769)))) , g_8), l_825[3][7][0])) ^ 0x11ED679D) , l_826);
                        l_830 = ((safe_sub_func_uint16_t_u_u(0xA6DD, l_829)) , (void*)0);
                    }
                }
            }
            else
            { /* block id: 390 */
                int8_t l_833 = 0x59;
                uint16_t l_849 = 0x70A5;
                int32_t ****l_851 = &g_704;
                int8_t l_866 = 1;
                int32_t l_867 = 0;
                if (l_831)
                { /* block id: 391 */
                    for (l_766 = 1; (l_766 >= 0); l_766 -= 1)
                    { /* block id: 394 */
                        int32_t *l_832 = &g_2[1];
                        (*l_719) = (*g_45);
                        (*l_696) = l_832;
                    }
                    (*g_45) = (((((0x8E46 != 0x65E1) , l_833) > (safe_lshift_func_uint8_t_u_u(l_836[3][5][1], 7))) , (safe_rshift_func_int8_t_s_u((safe_lshift_func_int8_t_s_u(0xB8, 6)), 5))) , func_21(((safe_rshift_func_int8_t_s_s(l_843, ((**l_696) == g_25))) ^ (+(l_833 != 1U)))));
                }
                else
                { /* block id: 399 */
                    uint8_t l_845 = 254U;
                    int32_t ****l_852 = &g_704;
                    (*g_510) = (g_445 | (l_845 < (~(safe_mul_func_uint16_t_u_u((l_849 , ((~65531U) || (l_851 != l_852))), g_15[5][1])))));
                    for (g_11 = 0; (g_11 <= 1); g_11 += 1)
                    { /* block id: 403 */
                        uint32_t l_853 = 4294967295U;
                        int8_t l_857 = (-1);
                        int i;
                        g_2[g_11] = (((((*g_45) == (l_853 , func_21((&l_715 == (*l_851))))) | (safe_rshift_func_uint8_t_u_u(g_741, g_15[1][1]))) <= 0xF309) | (l_715 == (void*)0));
                        (*l_719) = l_856;
                        (*l_856) = l_857;
                        (*g_45) = (void*)0;
                    }
                }
                l_867 = (((**l_696) <= g_25) & ((((safe_lshift_func_uint16_t_u_u(g_742, ((255U > ((safe_mod_func_int32_t_s_s(((((((((l_715 == &l_769) && (&l_856 != &l_826)) <= (safe_mod_func_int8_t_s_s((*l_856), 251U))) < l_866) , 0x17C5) ^ g_100) , g_726) & g_15[5][2]), (**l_696))) < g_8)) & (**l_696)))) , g_2[1]) , (**l_696)) & 65535U));
            }
            l_868[1] = 0xD1B696A3;
            for (l_743 = 0; (l_743 > (-24)); l_743 = safe_sub_func_int32_t_s_s(l_743, 1))
            { /* block id: 415 */
                uint32_t l_872 = 0x81C6574B;
                for (g_8 = 0; (g_8 <= 1); g_8 += 1)
                { /* block id: 418 */
                    int i, j, k;
                    if (l_836[g_445][(g_8 + 4)][g_8])
                        break;
                    (*g_296) = l_871;
                }
                (*g_45) = (l_872 , l_873);
            }
        }
        return g_445;
    }
    return g_726;
}


/* ------------------------------------------ */
/* 
 * reads : g_25 g_177 g_45 g_46 g_2
 * writes: g_25 g_177 g_46
 */
static int16_t  func_16(uint32_t  p_17, uint32_t  p_18, int16_t  p_19, int32_t * p_20)
{ /* block id: 26 */
    int32_t *l_29 = &g_25;
    int32_t ****l_240 = &g_177[0];
    uint32_t l_241 = 1U;
    int8_t l_256 = 1;
    int32_t l_375 = (-8);
    uint32_t l_470 = 0x2732D654;
    int16_t l_534 = (-8);
    (*l_29) = ((void*)0 != l_29);
    for (g_25 = (-6); (g_25 != 18); g_25 = safe_add_func_uint16_t_u_u(g_25, 8))
    { /* block id: 30 */
        int8_t l_214 = 0x92;
        uint8_t l_215 = 248U;
        int8_t l_216 = 3;
        int32_t **l_225[6][8] = {{&l_29,(void*)0,&l_29,(void*)0,(void*)0,(void*)0,(void*)0,&l_29},{&l_29,&l_29,&l_29,(void*)0,&l_29,&l_29,(void*)0,(void*)0},{(void*)0,&l_29,&l_29,&l_29,&l_29,(void*)0,&l_29,(void*)0},{&l_29,(void*)0,&l_29,(void*)0,(void*)0,(void*)0,(void*)0,&l_29},{&l_29,&l_29,&l_29,(void*)0,&l_29,&l_29,(void*)0,(void*)0},{(void*)0,&l_29,&l_29,&l_29,&l_29,(void*)0,&l_29,(void*)0}};
        int16_t l_242 = (-3);
        int32_t *****l_300 = &l_240;
        int32_t l_334 = 0xA9DD4FA4;
        int32_t *l_372 = &g_2[1];
        uint8_t l_444 = 0U;
        uint32_t l_577 = 0x3FA9B884;
        int i, j;
        for (p_18 = 15; (p_18 <= 18); ++p_18)
        { /* block id: 33 */
            uint32_t l_40 = 0xE4A0435E;
            int32_t **l_213 = &l_29;
            int32_t ***l_220 = &g_45;
            int8_t l_279 = 0;
            int32_t l_292 = (-9);
            int32_t *****l_297 = &g_176[1];
        }
        (**l_300) = (**l_300);
    }
    (***l_240) = (***l_240);
    return g_2[0];
}


/* ------------------------------------------ */
/* 
 * reads : g_25
 * writes: g_25
 */
static int32_t * func_21(uint32_t  p_22)
{ /* block id: 15 */
    for (p_22 = 0; (p_22 > 58); p_22 = safe_add_func_int16_t_s_s(p_22, 6))
    { /* block id: 18 */
        int32_t l_28 = (-1);
        for (g_25 = 0; (g_25 != (-8)); --g_25)
        { /* block id: 21 */
            l_28 = 0x6255D580;
        }
    }
    return &g_2[1];
}


/* ------------------------------------------ */
/* 
 * reads : g_177 g_45
 * writes:
 */
static int32_t ** func_34(int32_t * p_35, uint32_t  p_36, uint8_t  p_37)
{ /* block id: 130 */
    int32_t *l_217 = &g_74;
    int32_t ****l_218 = &g_177[2];
    int32_t *****l_219 = &l_218;
    l_217 = p_35;
    (*l_219) = l_218;
    return (**l_218);
}


/* ------------------------------------------ */
/* 
 * reads : g_45 g_46 g_2 g_8 g_74 g_15 g_25 g_100 g_11 g_176
 * writes: g_46 g_100 g_74
 */
static uint16_t  func_43(int32_t ** p_44)
{ /* block id: 34 */
    uint32_t l_51 = 4294967295U;
    int32_t *l_68[8] = {&g_8,&g_8,&g_8,&g_8,&g_8,&g_8,&g_8,&g_8};
    int8_t l_76 = 0;
    int32_t l_86 = (-5);
    uint32_t l_138 = 0x3EA481B1;
    uint8_t l_151 = 0xB5;
    int32_t ****l_179[10][2][7] = {{{&g_177[3],&g_177[6],(void*)0,&g_177[0],&g_177[0],&g_177[4],&g_177[0]},{&g_177[0],&g_177[0],&g_177[7],&g_177[7],&g_177[0],&g_177[0],&g_177[7]}},{{(void*)0,&g_177[1],(void*)0,(void*)0,&g_177[3],&g_177[0],&g_177[1]},{&g_177[7],(void*)0,&g_177[5],&g_177[0],&g_177[4],&g_177[7],(void*)0}},{{(void*)0,&g_177[0],&g_177[3],(void*)0,&g_177[2],&g_177[0],(void*)0},{&g_177[6],&g_177[0],&g_177[0],(void*)0,&g_177[0],&g_177[0],&g_177[6]}},{{&g_177[0],&g_177[3],&g_177[6],&g_177[0],(void*)0,(void*)0,(void*)0},{&g_177[7],&g_177[0],&g_177[0],&g_177[0],&g_177[7],(void*)0,&g_177[0]}},{{(void*)0,&g_177[6],&g_177[6],&g_177[0],&g_177[0],(void*)0,&g_177[0]},{&g_177[0],&g_177[0],&g_177[0],&g_177[0],&g_177[6],&g_177[0],(void*)0}},{{(void*)0,(void*)0,&g_177[7],&g_177[2],(void*)0,&g_177[0],&g_177[3]},{&g_177[6],&g_177[7],(void*)0,&g_177[0],&g_177[7],&g_177[0],(void*)0}},{{&g_177[4],&g_177[0],&g_177[0],(void*)0,(void*)0,&g_177[0],&g_177[0]},{&g_177[7],&g_177[6],(void*)0,&g_177[4],&g_177[0],&g_177[7],&g_177[0]}},{{&g_177[0],(void*)0,&g_177[0],&g_177[0],&g_177[3],&g_177[0],(void*)0},{&g_177[0],&g_177[7],(void*)0,&g_177[4],&g_177[0],(void*)0,(void*)0}},{{(void*)0,(void*)0,&g_177[1],(void*)0,(void*)0,&g_177[3],&g_177[0]},{&g_177[5],&g_177[0],&g_177[0],&g_177[0],(void*)0,&g_177[7],&g_177[0]}},{{(void*)0,&g_177[3],&g_177[3],&g_177[2],&g_177[4],(void*)0,&g_177[6]},{&g_177[5],&g_177[0],&g_177[7],&g_177[0],&g_177[0],&g_177[0],&g_177[7]}}};
    int32_t l_185 = (-1);
    int32_t *l_204 = &g_25;
    int i, j, k;
    if (func_47((l_51 , func_52(func_56(func_62(func_66(l_68[0]), g_74, ((l_76 < (l_68[3] != (void*)0)) != ((safe_sub_func_int32_t_s_s((((g_15[5][0] , (safe_lshift_func_int16_t_s_s(((safe_rshift_func_uint8_t_u_u((safe_mod_func_int8_t_s_s(((void*)0 == &g_2[0]), 0x86)), g_8)) , g_74), 0))) || g_2[1]) != g_15[0][0]), 0x5B79C141)) > g_15[5][0]))), g_8, l_86, &l_86, g_25), g_2[1], g_45)), g_15[5][0], l_68[1]))
    { /* block id: 71 */
        uint8_t l_137 = 0x72;
        int8_t l_152 = 0;
        int32_t *l_158 = (void*)0;
        int32_t ***l_163 = &g_45;
        int32_t ****l_162 = &l_163;
        int32_t *l_180 = &g_25;
        for (l_76 = 2; (l_76 <= 7); l_76 += 1)
        { /* block id: 74 */
            int32_t l_136 = 9;
            int32_t *l_159 = &g_2[1];
            if (((safe_mul_func_int8_t_s_s(g_2[1], ((((&g_46[4][1] == ((l_136 < (((((l_137 || ((l_138 , p_44) != &g_46[8][3])) , l_137) , (((p_44 == &g_46[2][2]) > 1U) , l_136)) , g_8) || g_8)) , (void*)0)) , l_136) & 0x11602922) <= 0xA36E))) > g_25))
            { /* block id: 75 */
                int32_t l_149 = (-5);
                int32_t ****l_153 = (void*)0;
                int32_t ****l_154 = (void*)0;
                int32_t ***l_156 = &g_45;
                int32_t ****l_155 = &l_156;
                for (l_138 = 2; (l_138 <= 7); l_138 += 1)
                { /* block id: 78 */
                    int i;
                    l_68[l_76] = (((&l_86 == (void*)0) | 1) , (void*)0);
                    return l_136;
                }
                (*l_155) = (((((safe_mul_func_uint16_t_u_u((((((((((safe_sub_func_uint32_t_u_u((safe_rshift_func_uint8_t_u_u((((l_136 == (safe_mod_func_int8_t_s_s((((safe_mul_func_int16_t_s_s(4, l_137)) < l_137) > (g_25 & (((l_137 != g_8) , ((l_149 || (safe_unary_minus_func_int32_t_s(((void*)0 == &p_44)))) | 0U)) & l_137))), l_149))) > l_137) || l_151), l_149)), 0x3FA6EFE3)) >= g_25) && l_152) , l_149) , 254U) , l_136) & l_152) , 0xD9DE4CBC) <= 0x040C694B), g_8)) | l_149) == (-10)) <= g_2[1]) , &g_45);
                for (g_100 = 7; (g_100 >= 0); g_100 -= 1)
                { /* block id: 85 */
                    uint32_t l_157 = 4294967295U;
                    int i;
                    l_68[g_100] = l_158;
                    for (l_151 = 0; (l_151 <= 7); l_151 += 1)
                    { /* block id: 89 */
                        return g_74;
                    }
                    if (l_152)
                        continue;
                    if ((*l_159))
                        break;
                }
            }
            else
            { /* block id: 95 */
                int32_t l_160[5];
                int32_t *l_161 = &g_2[1];
                int i;
                for (i = 0; i < 5; i++)
                    l_160[i] = 5;
                l_160[3] = (*l_159);
                (*p_44) = l_161;
            }
            l_159 = &l_86;
            for (l_137 = 0; l_137 < 10; l_137 += 1)
            {
                for (l_136 = 0; l_136 < 4; l_136 += 1)
                {
                    g_46[l_137][l_136] = (void*)0;
                }
            }
        }
        (*l_162) = &p_44;
        for (g_74 = (-6); (g_74 >= (-13)); --g_74)
        { /* block id: 105 */
            uint32_t l_175[3];
            uint8_t l_183 = 0x5D;
            int32_t *l_188 = &l_86;
            uint32_t l_203 = 0xE20C9473;
            int i;
            for (i = 0; i < 3; i++)
                l_175[i] = 0xCD2030A4;
            for (l_76 = 0; (l_76 <= 3); l_76 += 1)
            { /* block id: 108 */
                int32_t l_178[9] = {1,8,1,1,8,1,1,8,1};
                uint16_t l_182 = 0xE622;
                int32_t ****l_193 = &g_177[0];
                int32_t l_202 = 0xBAC8EDC9;
                int i, j;
                if ((safe_add_func_uint32_t_u_u((safe_lshift_func_uint16_t_u_u((!(safe_mul_func_int8_t_s_s((safe_add_func_uint16_t_u_u((((l_175[0] && (250U & ((g_176[1] != (l_178[3] , l_179[6][0][4])) ^ (l_180 != &l_178[1])))) , (~l_175[1])) , ((-8) < 0xD0A9)), g_100)), l_182))), l_178[3])), (*l_180))))
                { /* block id: 109 */
                    l_178[8] = 5;
                }
                else
                { /* block id: 111 */
                    int32_t l_184 = (-5);
                    if (l_183)
                        break;
                    l_185 = l_184;
                    for (l_182 = 0; (l_182 >= 13); l_182 = safe_add_func_int16_t_s_s(l_182, 9))
                    { /* block id: 116 */
                        (***l_162) = l_188;
                        (*l_188) = l_184;
                    }
                    (*l_188) = (p_44 != ((safe_add_func_int8_t_s_s(((-8) & 0x1FC9FD4B), ((safe_sub_func_int16_t_s_s(((((g_2[1] == ((((l_193 == ((((&l_163 != &g_177[0]) != (((safe_rshift_func_uint8_t_u_s((safe_mod_func_int32_t_s_s((safe_mul_func_uint16_t_u_u((safe_sub_func_uint32_t_u_u((g_100 , (l_202 && 0x7B)), (*l_188))), l_203)), (*l_188))), g_11)) | g_25) ^ g_11)) & g_2[1]) , (void*)0)) != g_15[5][0]) , (*l_188)) != 1)) && g_15[1][0]) , 0xA9CE404B) != (*l_188)), (*l_188))) != g_25))) , p_44));
                }
                (*l_188) = (*l_188);
            }
        }
    }
    else
    { /* block id: 125 */
        return g_74;
    }
    (*p_44) = l_204;
    return g_8;
}


/* ------------------------------------------ */
/* 
 * reads : g_74 g_15 g_11 g_2 g_8 g_100
 * writes:
 */
static int32_t  func_47(int32_t ** p_48, int32_t  p_49, int32_t * p_50)
{ /* block id: 62 */
    int32_t **l_114[1][1];
    int i, j;
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 1; j++)
            l_114[i][j] = &g_46[6][1];
    }
    for (p_49 = 3; (p_49 >= 0); p_49 -= 1)
    { /* block id: 65 */
        uint16_t l_115 = 0x6755;
        int32_t l_116 = 0x773013A2;
        l_116 = (((((safe_sub_func_int32_t_s_s(((((g_74 | (!((safe_mul_func_uint16_t_u_u(g_15[5][0], (-1))) > (p_50 == p_50)))) != (safe_mul_func_uint8_t_u_u((((((safe_lshift_func_uint8_t_u_s((safe_add_func_uint8_t_u_u((l_114[0][0] == &g_46[6][3]), ((8 != (g_11 >= (*p_50))) || g_15[4][4]))), 5)) != g_8) , 8U) <= g_100) <= g_15[5][0]), g_100))) && g_15[5][0]) ^ g_11), l_115)) <= 255U) < l_115) == g_74) < l_115);
        l_116 = ((-5) > (((safe_mod_func_int16_t_s_s(((safe_sub_func_int32_t_s_s((safe_mul_func_uint8_t_u_u(g_100, ((((void*)0 == &g_46[1][3]) , g_15[3][3]) ^ ((safe_rshift_func_int16_t_s_s((safe_add_func_uint8_t_u_u((safe_add_func_uint16_t_u_u((((6 && g_8) > g_74) >= (((safe_add_func_int16_t_s_s((!(0xB5 == 0)), p_49)) < g_74) < 0xF4)), g_15[5][0])), g_8)), g_8)) | p_49)))), (*p_50))) ^ g_8), 0x04B1)) == p_49) & 0U));
        return l_116;
    }
    return (*p_50);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int32_t ** func_52(int32_t ** p_53, int16_t  p_54, int32_t ** p_55)
{ /* block id: 59 */
    int32_t *l_101 = &g_2[1];
    int32_t *l_102 = &g_74;
    l_102 = l_101;
    return p_53;
}


/* ------------------------------------------ */
/* 
 * reads : g_2 g_100 g_15
 * writes: g_46
 */
static int32_t ** func_56(int32_t ** p_57, uint32_t  p_58, uint8_t  p_59, int32_t * p_60, int32_t  p_61)
{ /* block id: 54 */
    int32_t *l_91 = &g_2[1];
    (*p_57) = ((safe_sub_func_int32_t_s_s((p_61 == (safe_lshift_func_int16_t_s_s(g_2[1], (&p_61 == l_91)))), (safe_sub_func_uint16_t_u_u((safe_rshift_func_int8_t_s_u(((safe_lshift_func_int8_t_s_u(((*l_91) & (((((safe_mod_func_int32_t_s_s(g_100, 0xC533BF95)) && ((*l_91) , p_61)) | 0x4FAD) , (*l_91)) && 255U)), (*l_91))) , (*l_91)), g_2[1])), (*l_91))))) , &p_61);
    l_91 = l_91;
    (*p_60) = (g_15[5][0] < (*l_91));
    return &g_46[2][2];
}


/* ------------------------------------------ */
/* 
 * reads : g_45
 * writes: g_46
 */
static int32_t ** func_62(int32_t * p_63, int32_t  p_64, int8_t  p_65)
{ /* block id: 51 */
    int32_t *l_85 = (void*)0;
    (*g_45) = l_85;
    return &g_46[5][0];
}


/* ------------------------------------------ */
/* 
 * reads : g_45 g_46 g_2 g_8
 * writes: g_46
 */
static int32_t * func_66(int32_t * p_67)
{ /* block id: 35 */
    uint32_t l_69 = 0xEDA7DA9F;
    int32_t *l_73 = &g_74;
    int32_t l_75 = 0;
    if (l_69)
    { /* block id: 36 */
        (*g_45) = (*g_45);
    }
    else
    { /* block id: 38 */
        (*g_45) = p_67;
        (*g_45) = (*g_45);
        for (l_69 = 6; (l_69 == 43); ++l_69)
        { /* block id: 43 */
            int32_t *l_72 = &g_11;
            return l_72;
        }
    }
    l_73 = (void*)0;
    l_75 = (*p_67);
    (*g_45) = &l_75;
    return p_67;
}




/* ---------------------------------------- */
int main (void)
{
    int i, j;
    int print_hash_value = 0;
    platform_main_begin();
    crc32_gentab();
    func_1();
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 4; j++)
            g_46[i][j] = 0;
    }
    for (i = 0; i < 8; i++)
        g_177[i] = 0;
    for (i = 0; i < 2; i++)
    {
        transparent_crc(g_2[i], "g_2[i]", print_hash_value);
        if (print_hash_value) printf("index = [%d]\n", i);

    }
    transparent_crc(g_8, "g_8", print_hash_value);
    transparent_crc(g_11, "g_11", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 5; j++)
        {
            transparent_crc(g_15[i][j], "g_15[i][j]", print_hash_value);
            if (print_hash_value) printf("index = [%d][%d]\n", i, j);

        }
    }
    transparent_crc(g_25, "g_25", print_hash_value);
    transparent_crc(g_74, "g_74", print_hash_value);
    transparent_crc(g_100, "g_100", print_hash_value);
    transparent_crc(g_445, "g_445", print_hash_value);
    transparent_crc(g_726, "g_726", print_hash_value);
    transparent_crc(g_741, "g_741", print_hash_value);
    transparent_crc(g_742, "g_742", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 197
XXX total union variables: 0

XXX max expression depth: 30
breakdown:
   depth: 1, occurrence: 145
   depth: 2, occurrence: 37
   depth: 3, occurrence: 2
   depth: 4, occurrence: 1
   depth: 7, occurrence: 1
   depth: 10, occurrence: 1
   depth: 13, occurrence: 1
   depth: 14, occurrence: 2
   depth: 15, occurrence: 1
   depth: 16, occurrence: 2
   depth: 17, occurrence: 1
   depth: 18, occurrence: 2
   depth: 19, occurrence: 3
   depth: 21, occurrence: 2
   depth: 22, occurrence: 1
   depth: 24, occurrence: 2
   depth: 25, occurrence: 1
   depth: 26, occurrence: 1
   depth: 27, occurrence: 1
   depth: 30, occurrence: 3

XXX total number of pointers: 111

XXX times a variable address is taken: 266
XXX times a pointer is dereferenced on RHS: 175
breakdown:
   depth: 1, occurrence: 134
   depth: 2, occurrence: 33
   depth: 3, occurrence: 7
   depth: 4, occurrence: 1
XXX times a pointer is dereferenced on LHS: 70
breakdown:
   depth: 1, occurrence: 48
   depth: 2, occurrence: 5
   depth: 3, occurrence: 11
   depth: 4, occurrence: 6
XXX times a pointer is compared with null: 36
XXX times a pointer is compared with address of another variable: 17
XXX times a pointer is compared with another pointer: 13
XXX times a pointer is qualified to be dereferenced: 1423

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 350
   level: 2, occurrence: 149
   level: 3, occurrence: 44
   level: 4, occurrence: 75
   level: 5, occurrence: 52
XXX number of pointers point to pointers: 67
XXX number of pointers point to scalars: 44
XXX number of pointers point to structs: 0
XXX percent of pointers has null in alias set: 27
XXX average alias set size: 1.52

XXX times a non-volatile is read: 1110
XXX times a non-volatile is write: 287
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 0

XXX stmts: 141
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 31
   depth: 1, occurrence: 21
   depth: 2, occurrence: 14
   depth: 3, occurrence: 18
   depth: 4, occurrence: 28
   depth: 5, occurrence: 29

XXX percentage a fresh-made variable is used: 13.3
XXX percentage an existing variable is used: 86.7
********************* end of statistics **********************/



Assembly Code with Setting 1: 
	.text
	.file	"tmph6xqsmj_.c"
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5, 0x0                          # -- Begin function main
.LCPI0_0:
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	2                               # 0x2
	.long	3                               # 0x3
	.long	4                               # 0x4
	.long	5                               # 0x5
	.long	6                               # 0x6
	.long	7                               # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0
.LCPI0_1:
	.long	3988292384                      # 0xedb88320
.LCPI0_2:
	.long	8                               # 0x8
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	vmovdqa	.LCPI0_0(%rip), %ymm0           # ymm0 = [0,1,2,3,4,5,6,7]
	xorl	%ecx, %ecx
	vpbroadcastd	.LCPI0_1(%rip), %ymm1   # ymm1 = [3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384]
	leaq	crc32_tab(%rip), %rax
	vpbroadcastd	.LCPI0_2(%rip), %ymm2   # ymm2 = [8,8,8,8,8,8,8,8]
	.p2align	4, 0x90
.LBB0_1:                                # =>This Inner Loop Header: Depth=1
	vpsrld	$1, %ymm0, %ymm3
	vpxor	%ymm1, %ymm3, %ymm4
	vpslld	$31, %ymm0, %ymm5
	vblendvps	%ymm5, %ymm4, %ymm3, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vmovups	%ymm3, (%rcx,%rax)
	vpaddd	%ymm2, %ymm0, %ymm0
	addq	$32, %rcx
	cmpq	$1024, %rcx                     # imm = 0x400
	jne	.LBB0_1
# %bb.2:
	movl	crc32_context(%rip), %ecx
	movzbl	%cl, %edx
                                        # kill: def $ecx killed $ecx killed $rcx
	shrl	$8, %ecx
	xorq	$180, %rdx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$147, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$12, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$17, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	movl	%ecx, %esi
	shrl	$8, %esi
	xorl	$247, %edx
	xorl	(%rax,%rdx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, %ecx
	notl	%ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	$16, %ecx
	leaq	g_15(%rip), %rdx
	.p2align	4, 0x90
.LBB0_3:                                # =>This Inner Loop Header: Depth=1
	movl	%esi, %r9d
	shrl	$8, %r9d
	movl	-16(%rcx,%rdx), %r8d
	movl	-12(%rcx,%rdx), %edi
	xorl	%r8d, %esi
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %r9d
	movl	%r8d, %esi
	shrl	$8, %esi
	xorl	%r9d, %esi
	shrl	$8, %r9d
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %r9d
	movl	%r8d, %esi
	shrl	$16, %esi
	xorl	%r9d, %esi
	shrl	$8, %r9d
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %r9d
	shrl	$24, %r8d
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	%r8d, %esi
	xorl	(%rax,%rsi,4), %r9d
	movl	%r9d, %esi
	shrl	$8, %esi
	xorl	%edi, %r9d
	movzbl	%r9b, %r8d
	xorl	(%rax,%r8,4), %esi
	movl	%edi, %r8d
	shrl	$8, %r8d
	xorl	%esi, %r8d
	shrl	$8, %esi
	movzbl	%r8b, %r8d
	xorl	(%rax,%r8,4), %esi
	movl	%edi, %r8d
	shrl	$16, %r8d
	xorl	%esi, %r8d
	shrl	$8, %esi
	movzbl	%r8b, %r8d
	xorl	(%rax,%r8,4), %esi
	shrl	$24, %edi
	movzbl	%sil, %r8d
	movl	%esi, %r9d
	shrl	$8, %r9d
	xorl	%edi, %r8d
	xorl	(%rax,%r8,4), %r9d
	movl	-8(%rcx,%rdx), %esi
	movl	%r9d, %edi
	shrl	$8, %edi
	xorl	%esi, %r9d
	movzbl	%r9b, %r8d
	xorl	(%rax,%r8,4), %edi
	movl	%esi, %r8d
	shrl	$8, %r8d
	xorl	%edi, %r8d
	shrl	$8, %edi
	movzbl	%r8b, %r8d
	xorl	(%rax,%r8,4), %edi
	movl	%esi, %r8d
	shrl	$16, %r8d
	xorl	%edi, %r8d
	shrl	$8, %edi
	movzbl	%r8b, %r8d
	xorl	(%rax,%r8,4), %edi
	shrl	$24, %esi
	movzbl	%dil, %r8d
	shrl	$8, %edi
	xorl	%esi, %r8d
	xorl	(%rax,%r8,4), %edi
	movl	-4(%rcx,%rdx), %esi
	movl	%edi, %r8d
	shrl	$8, %r8d
	xorl	%esi, %edi
	movzbl	%dil, %edi
	xorl	(%rax,%rdi,4), %r8d
	movl	%esi, %edi
	shrl	$8, %edi
	xorl	%r8d, %edi
	shrl	$8, %r8d
	movzbl	%dil, %edi
	xorl	(%rax,%rdi,4), %r8d
	movl	%esi, %edi
	shrl	$16, %edi
	xorl	%r8d, %edi
	shrl	$8, %r8d
	movzbl	%dil, %edi
	xorl	(%rax,%rdi,4), %r8d
	shrl	$24, %esi
	movzbl	%r8b, %edi
	shrl	$8, %r8d
	xorl	%esi, %edi
	xorl	(%rax,%rdi,4), %r8d
	movl	(%rcx,%rdx), %edi
	movl	%r8d, %esi
	shrl	$8, %esi
	xorl	%edi, %r8d
	movzbl	%r8b, %r8d
	xorl	(%rax,%r8,4), %esi
	movl	%edi, %r8d
	shrl	$8, %r8d
	xorl	%esi, %r8d
	shrl	$8, %esi
	movzbl	%r8b, %r8d
	xorl	(%rax,%r8,4), %esi
	movl	%edi, %r8d
	shrl	$16, %r8d
	xorl	%esi, %r8d
	shrl	$8, %esi
	movzbl	%r8b, %r8d
	xorl	(%rax,%r8,4), %esi
	shrl	$24, %edi
	movzbl	%sil, %r8d
	shrl	$8, %esi
	xorl	%edi, %r8d
	xorl	(%rax,%r8,4), %esi
	addq	$20, %rcx
	cmpq	$156, %rcx
	jne	.LBB0_3
# %bb.4:
	movl	%esi, %ecx
	shrl	$8, %ecx
	movzbl	%sil, %edx
	xorl	$1, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$199, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$52, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$54, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$163, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$3, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$5, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$1, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	movl	%ecx, %esi
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movl	%esi, crc32_context(%rip)
	notl	%esi
	leaq	.L.str.14(%rip), %rdi
	xorl	%eax, %eax
	vzeroupper
	callq	printf@PLT
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc
                                        # -- End function
	.type	g_15,@object                    # @g_15
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
g_15:
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.size	g_15, 140

	.type	crc32_context,@object           # @crc32_context
	.data
	.p2align	2, 0x0
crc32_context:
	.long	4294967295                      # 0xffffffff
	.size	crc32_context, 4

	.type	crc32_tab,@object               # @crc32_tab
	.local	crc32_tab
	.comm	crc32_tab,1024,16
	.type	.L.str.14,@object               # @.str.14
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.14:
	.asciz	"checksum = %X\n"
	.size	.L.str.14, 15

	.ident	"clang version 16.0.6"
	.section	".note.GNU-stack","",@progbits
	.addrsig


Assembly Code with Setting 2: 
	.file	"tmpuco7bi5u.c"
	.text
	.p2align 4
	.type	crc32_8bytes, @function
crc32_8bytes:
.LFB84:
	.cfi_startproc
	movl	crc32_context(%rip), %eax
	leaq	crc32_tab(%rip), %rsi
	movl	%edi, %edx
	movl	%eax, %ecx
	shrl	$8, %eax
	xorl	%edi, %ecx
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movzbl	%dh, %ecx
	shrl	$24, %edx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movl	%edi, %ecx
	shrl	$16, %ecx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	xorl	%eax, %edx
	shrl	$8, %eax
	movzbl	%dl, %edx
	xorl	(%rsi,%rdx,4), %eax
	movl	%eax, crc32_context(%rip)
	ret
	.cfi_endproc
.LFE84:
	.size	crc32_8bytes, .-crc32_8bytes
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC5:
	.string	"checksum = %X\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LFB97:
	.cfi_startproc
	movl	$8, %ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	leaq	crc32_tab(%rip), %rax
	vmovdqa	.LC1(%rip), %ymm5
	vmovd	%ecx, %xmm6
	leaq	1024(%rax), %rdx
	vpxor	%xmm4, %xmm4, %xmm4
	movl	$1, %ecx
	vmovd	%ecx, %xmm3
	movl	$-306674912, %ecx
	vpbroadcastd	%xmm6, %ymm6
	vmovd	%ecx, %xmm2
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	vpbroadcastd	%xmm3, %ymm3
	andq	$-32, %rsp
	vpbroadcastd	%xmm2, %ymm2
	.p2align 4,,10
	.p2align 3
.L4:
	vmovdqa	%ymm5, %ymm1
	addq	$32, %rax
	vpaddd	%ymm6, %ymm5, %ymm5
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm0
	vmovdqa	%ymm0, -32(%rax)
	cmpq	%rdx, %rax
	jne	.L4
	movl	g_2(%rip), %edi
	movl	$0, 4+g_2(%rip)
	leaq	g_15(%rip), %r9
	movl	$0, g_74(%rip)
	leaq	140(%r9), %r10
	call	crc32_8bytes
	xorl	%edi, %edi
	call	crc32_8bytes
	movl	$-9, %edi
	call	crc32_8bytes
	movl	$-1, %edi
	call	crc32_8bytes
.L5:
	xorl	%r8d, %r8d
	.p2align 4,,10
	.p2align 3
.L6:
	movl	(%r9,%r8,4), %edi
	incq	%r8
	call	crc32_8bytes
	cmpq	$5, %r8
	jne	.L6
	addq	$20, %r9
	cmpq	%r9, %r10
	jne	.L5
	movl	$1, %edi
	call	crc32_8bytes
	xorl	%edi, %edi
	call	crc32_8bytes
	movl	$-1556728633, %edi
	call	crc32_8bytes
	movl	$3, %edi
	call	crc32_8bytes
	movl	$5, %edi
	call	crc32_8bytes
	movl	$-1, %edi
	call	crc32_8bytes
	movl	$1, %edi
	call	crc32_8bytes
	movl	crc32_context(%rip), %esi
	leaq	.LC5(%rip), %rdi
	xorl	%eax, %eax
	notl	%esi
	call	printf@PLT
	xorl	%eax, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE97:
	.size	main, .-main
	.data
	.align 4
	.type	g_74, @object
	.size	g_74, 4
g_74:
	.long	1979685635
	.section	.rodata
	.align 32
	.type	g_15, @object
	.size	g_15, 140
g_15:
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.long	1
	.data
	.align 8
	.type	g_2, @object
	.size	g_2, 8
g_2:
	.long	286036916
	.long	286036916
	.align 4
	.type	crc32_context, @object
	.size	crc32_context, 4
crc32_context:
	.long	-1
	.local	crc32_tab
	.comm	crc32_tab,1024,32
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC1:
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	6
	.long	7
	.ident	"GCC: (GNU) 13.2.1 20230801"
	.section	.note.GNU-stack,"",@progbits


