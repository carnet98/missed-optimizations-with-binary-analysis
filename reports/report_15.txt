--- Interesting Case Report --- 

Interesting Variables: 
['g_29', 'g_869']

Interesting Assembly Lines: 
{'g_29': {'setting1:': [], 'setting2': [['movl', '$-107,', 'g_29(%rip)']]}, 'g_869': {'setting1:': [], 'setting2': [['movl', '$1,', 'g_869(%rip)']]}}

Source Code: 
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles --no-volatile-pointers --no-arrays --no-bitfields --checksum --comma-operators --compound-assignment --consts --no-divs --embedded-assigns --no-jumps --no-longlong --no-force-non-uniform-arrays --no-math64 --muls --no-packed-struct --paranoid --no-pointers --structs --no-inline-function --return-structs --arg-structs --no-dangling-global-pointers
 * Seed:      5213419359587285009
 */


#define NO_LONGLONG

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
/* --- GLOBAL VARIABLES --- */
static uint32_t g_13 = 0x48B08158;
static int32_t g_29 = 4;
static int8_t g_41 = 0x66;
static uint16_t g_43 = 1U;
static int8_t g_58 = 7;
static uint32_t g_108 = 0x4896031D;
static uint16_t g_111 = 65535U;
static uint32_t g_164 = 0x0892DF0D;
static int32_t g_185 = 0x70E6FC06;
static uint32_t g_237 = 0x4286F750;
static uint32_t g_264 = 0xC3BA664A;
static uint32_t g_286 = 0xE1D4163E;
static uint8_t g_345 = 0x65;
static const int32_t g_363 = 8;
static int16_t g_364 = (-9);
static uint16_t g_370 = 1U;
static uint32_t g_398 = 1U;
static uint16_t g_499 = 0x3AF0;
static uint32_t g_615 = 0x24FD1FC5;
static uint8_t g_617 = 0x72;
static uint32_t g_657 = 0xC7EA0BBC;
static int32_t g_673 = (-1);
static int16_t g_675 = (-1);
static int32_t g_705 = 0xBACAAA3B;
static uint32_t g_829 = 0xAF016A9C;
static int32_t g_869 = 0;
static int8_t g_874 = 0;
static int16_t g_875 = 2;
static int16_t g_876 = 0x2CA1;
static int8_t g_878 = 0x95;
static uint8_t g_879 = 1U;
static uint32_t g_933 = 1U;


/* --- FORWARD DECLARATIONS --- */
static uint32_t  func_1(void);
static uint16_t  func_9(int32_t  p_10, uint16_t  p_11, int32_t  p_12);
static int32_t  func_15(int32_t  p_16, int32_t  p_17, uint8_t  p_18, int32_t  p_19);
static uint8_t  func_21(int32_t  p_22, int32_t  p_23, uint8_t  p_24, uint32_t  p_25);
static uint8_t  func_61(const int32_t  p_62, int16_t  p_63);
static uint32_t  func_69(int8_t  p_70, uint32_t  p_71, uint16_t  p_72, int8_t  p_73, uint8_t  p_74);
static uint8_t  func_78(int16_t  p_79, int16_t  p_80, int32_t  p_81, uint8_t  p_82, uint32_t  p_83);
static int16_t  func_84(int32_t  p_85);
static int32_t  func_87(uint8_t  p_88, int32_t  p_89, uint32_t  p_90);
static int32_t  func_91(uint8_t  p_92, uint16_t  p_93, uint16_t  p_94, uint32_t  p_95, uint8_t  p_96);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_13 g_43 g_41 g_29 g_58 g_111 g_108 g_164 g_185 g_237 g_264 g_286 g_345 g_363 g_370 g_398 g_499 g_364 g_615 g_657 g_675 g_673 g_705 g_829 g_617 g_869 g_879 g_876 g_878 g_933
 * writes: g_29 g_43 g_58 g_108 g_111 g_164 g_185 g_237 g_264 g_41 g_286 g_345 g_364 g_370 g_398 g_499 g_615 g_617 g_673 g_675 g_829 g_869 g_879
 */
static uint32_t  func_1(void)
{ /* block id: 0 */
    uint32_t l_6 = 4U;
    uint16_t l_14 = 0xFDC8;
    uint8_t l_20 = 0U;
    uint32_t l_26 = 4294967289U;
    int8_t l_868 = 0x3B;
    int32_t l_870 = 0x99AC1011;
    int32_t l_871 = 0xD30DACD3;
    int32_t l_872 = 0xF2E85950;
    int32_t l_873 = 0x6C91F04B;
    int32_t l_877 = 0x79CB8E36;
    int32_t l_900 = 0x2E5C5F07;
    int8_t l_901 = 0x0E;
    int8_t l_902 = 0;
    int16_t l_903 = 0x6DEE;
    int16_t l_904 = 0x4904;
    int8_t l_907 = 1;
    uint32_t l_932 = 5U;
    uint32_t l_934 = 1U;
    l_870 = (g_869 ^= (safe_rshift_func_uint16_t_u_u((((safe_mul_func_int16_t_s_s(l_6, (safe_rshift_func_uint8_t_u_u((((((func_9(g_13, ((l_14 , (((g_13 & func_15((l_6 == 5U), l_20, (g_13 , (func_21(l_26, l_6, g_13, g_13) | 9)), l_20)) , g_237) || g_657)) >= 0x46), l_6) && l_20) , 0x55) & g_13) >= g_363) < l_14), l_14)))) || l_868) == 0xF0C3), l_6)));
    ++g_879;
    l_871 = (safe_sub_func_uint32_t_u_u(l_873, (((g_398 ^= (g_237 < ((2U && (safe_add_func_uint16_t_u_u((safe_mul_func_int8_t_s_s((safe_lshift_func_int8_t_s_u(((l_871 >= l_873) | 0x0730B60D), (safe_mul_func_int16_t_s_s((safe_lshift_func_uint16_t_u_s(((((((((safe_mod_func_uint32_t_u_u((safe_mod_func_int32_t_s_s(0x642856B0, (((l_901 |= ((safe_lshift_func_int16_t_s_s(((g_58 | ((g_364 < 1) < l_872)) > 0x88), l_900)) & 0xFF21)) >= g_345) | l_900))), l_871)) , g_876) && g_675) , l_900) <= g_43) != l_873) > 0xD04E2598) == 0x1E246523), 14)), l_902)))), l_903)), g_164))) & l_904))) != l_870) == 0x552ED8A7)));
    g_869 = (((0x13D2F953 >= (g_29 = (l_873 = (l_903 , (safe_rshift_func_int16_t_s_u((((l_907 , g_370) & (safe_unary_minus_func_int8_t_s((safe_add_func_uint8_t_u_u((safe_sub_func_uint8_t_u_u((safe_lshift_func_int8_t_s_s(((((safe_sub_func_int32_t_s_s(0x0ADA27B8, (safe_sub_func_int8_t_s_s(0xC3, 0U)))) , (safe_unary_minus_func_int8_t_s((((((safe_mul_func_int8_t_s_s((safe_sub_func_int16_t_s_s((safe_lshift_func_uint16_t_u_s((safe_rshift_func_uint16_t_u_s(9U, 12)), (safe_rshift_func_int16_t_s_s(((safe_mul_func_uint8_t_u_u(0x77, g_869)) ^ 248U), l_20)))), 65535U)), l_907)) <= l_877) != 0xCDE6BBA8) , l_904) < 0xF5DA1053)))) , l_870) <= l_20), l_902)), g_878)), l_932))))) , g_878), 13)))))) >= g_933) != g_111);
    return l_934;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static uint16_t  func_9(int32_t  p_10, uint16_t  p_11, int32_t  p_12)
{ /* block id: 292 */
    int8_t l_866 = (-5);
    int32_t l_867 = 5;
    l_867 = l_866;
    return p_12;
}


/* ------------------------------------------ */
/* 
 * reads : g_13 g_43 g_41 g_29 g_58 g_111 g_108 g_164 g_185 g_237 g_264 g_286 g_345 g_363 g_370 g_398 g_499 g_364 g_615 g_657 g_675 g_673 g_705 g_829 g_617
 * writes: g_29 g_43 g_58 g_108 g_111 g_164 g_185 g_237 g_264 g_41 g_286 g_345 g_364 g_370 g_398 g_499 g_615 g_617 g_673 g_675 g_829
 */
static int32_t  func_15(int32_t  p_16, int32_t  p_17, uint8_t  p_18, int32_t  p_19)
{ /* block id: 4 */
    int16_t l_33 = (-5);
    int32_t l_40 = 5;
    int8_t l_656 = 0xFA;
    uint32_t l_791 = 0U;
    uint8_t l_853 = 0U;
    int32_t l_864 = 0x23F44C6D;
    int32_t l_865 = 3;
    g_29 = g_13;
    for (p_18 = 0; (p_18 >= 55); p_18++)
    { /* block id: 8 */
        int32_t l_32 = 1;
        int32_t l_42 = 0x1CD1AC8C;
        uint32_t l_573 = 4294967292U;
        uint8_t l_582 = 4U;
        int32_t l_599 = 0xC2784677;
        int32_t l_605 = 8;
        l_33 = l_32;
        for (l_33 = (-8); (l_33 < (-15)); --l_33)
        { /* block id: 12 */
            int8_t l_36 = 0x26;
            int32_t l_37 = (-10);
            int32_t l_38 = 0xC51AC06E;
            int32_t l_39 = 0x2AC30BCA;
            ++g_43;
        }
        if (l_32)
        { /* block id: 15 */
            const int32_t l_57 = 0x0E88FEFD;
            l_40 = ((-10) && (safe_add_func_int32_t_s_s((g_58 |= (func_21(l_32, (0xAB1F356D || (((safe_sub_func_uint16_t_u_u(65533U, ((safe_mod_func_int32_t_s_s((+(g_43 && ((safe_sub_func_int32_t_s_s(((g_13 , (p_17 , (safe_mod_func_uint16_t_u_u(g_43, (0xE2BB && g_41))))) != 4294967295U), g_13)) != p_16))), l_57)) | g_13))) != l_32) <= p_16)), l_57, g_43) , g_29)), l_57)));
            if (p_19)
                continue;
            return l_42;
        }
        else
        { /* block id: 20 */
            uint16_t l_572 = 65530U;
            int32_t l_581 = 0x4B39CB52;
            int32_t l_583 = 0x508DF86D;
            int32_t l_604 = 0xAB05D3E4;
            int32_t l_787 = 0x579C670D;
            uint32_t l_790 = 0xE7C0A4F6;
            if ((safe_mul_func_uint16_t_u_u(((func_61(g_41, p_16) ^ (g_13 & ((l_40 = ((((safe_mul_func_uint16_t_u_u((((((((safe_rshift_func_uint8_t_u_s((safe_add_func_uint16_t_u_u(((safe_sub_func_int16_t_s_s((0U <= ((-5) != ((safe_mul_func_uint16_t_u_u((0x52 | l_32), (l_42 , 65533U))) && l_572))), g_363)) , p_18), 0U)), g_363)) , (-1)) & p_19) , l_42) && 1) & g_13) <= 0x2D1E), l_32)) > 0x80BE) != g_363) == p_16)) & 1))) || 0), l_573)))
            { /* block id: 199 */
                uint8_t l_576 = 0xC8;
                int32_t l_584 = 0xB1A35EF9;
                l_42 ^= g_370;
                l_40 |= 0x9257564A;
                l_584 ^= (((safe_mul_func_int16_t_s_s(((l_576 = (l_572 != (l_572 , l_33))) < l_33), (safe_mod_func_uint32_t_u_u(((((g_345 = (safe_rshift_func_int16_t_s_s(4, (p_16 > ((l_583 = (0x58CEC235 ^ ((g_345 > (l_582 = (l_581 = p_18))) >= 0xA1ED))) <= g_286))))) && l_33) , p_16) || l_583), p_17)))) != 0U) ^ p_17);
            }
            else
            { /* block id: 208 */
                int16_t l_590 = 0;
                int32_t l_616 = (-6);
                uint16_t l_655 = 0x7CAF;
                int16_t l_706 = 0xAB02;
                int32_t l_732 = (-1);
                if (g_41)
                { /* block id: 209 */
                    int32_t l_587 = 0xD725249A;
                    int32_t l_600 = (-3);
                    int32_t l_601 = 0x9D505C4A;
                    int32_t l_602 = 0x39EB4650;
                    int32_t l_603 = 0x5B449227;
                    uint32_t l_618 = 4294967291U;
                    g_29 = g_345;
                    l_603 = (((((p_19 <= (((g_617 = ((((l_583 = ((safe_add_func_int16_t_s_s((l_616 = (((l_40 != l_587) , (safe_mul_func_int8_t_s_s(((l_42 = l_590) != ((l_581 = (l_590 , (safe_lshift_func_uint16_t_u_s((safe_mul_func_int8_t_s_s((4294967293U & (safe_mul_func_uint16_t_u_u(((p_19 || ((safe_lshift_func_uint16_t_u_s(((g_370++) , ((safe_sub_func_int16_t_s_s((safe_mod_func_uint8_t_u_u(((p_18 | (l_601 = (safe_mul_func_int16_t_s_s((g_615 &= (g_364 = (((((!p_17) && p_19) | 7U) == 0xE4D0503F) , 0x4865))), g_41)))) >= 0x17C3C2E7), l_583)), p_17)) , g_364)), p_17)) >= g_108)) == 0xE4), (-3)))), 0U)), 4)))) >= p_16)), 1))) , 0x14C3)), g_29)) == g_264)) ^ p_19) && g_29) & g_108)) , l_32) && g_43)) | p_19) == l_599) , p_16) || l_616);
                    l_601 = (l_618 , (safe_mul_func_int8_t_s_s(g_29, (l_582 != g_164))));
                    for (g_286 = 0; (g_286 != 43); g_286++)
                    { /* block id: 224 */
                        uint16_t l_653 = 6U;
                        uint16_t l_670 = 9U;
                        int32_t l_674 = 1;
                        g_29 &= (safe_add_func_int32_t_s_s((-1), (g_43 , (safe_mul_func_int16_t_s_s(0x6F44, ((((p_16 <= (!p_19)) && (!(safe_mod_func_int32_t_s_s((safe_add_func_uint16_t_u_u((safe_mod_func_int16_t_s_s(((p_17 < (0x1EEAB81F < 1U)) >= (g_398 = g_363)), p_19)), p_18)), g_108)))) || p_19) < g_499))))));
                        g_29 = (((((safe_lshift_func_uint8_t_u_s(0U, ((p_17 && p_17) != (safe_sub_func_int8_t_s_s(((safe_mod_func_int16_t_s_s((safe_add_func_int32_t_s_s((safe_sub_func_uint8_t_u_u(l_605, p_17)), (l_42 &= (safe_rshift_func_uint8_t_u_u(((l_616 = ((safe_mod_func_int32_t_s_s((((((safe_add_func_int8_t_s_s(g_164, (safe_rshift_func_uint8_t_u_s(l_582, 5)))) < (l_653 > ((!g_363) ^ 0))) ^ l_655) < p_16) != l_616), 8)) > l_33)) & 6), l_656))))), 0x56AF)) < 0xCC05), g_657))))) >= 65528U) != l_605) <= p_19) >= p_18);
                        if (g_111)
                            continue;
                        g_185 &= ((safe_add_func_uint32_t_u_u((safe_add_func_int8_t_s_s((((l_674 = (8U != (safe_rshift_func_uint8_t_u_s((((g_673 = (safe_add_func_uint32_t_u_u(((p_16 , (safe_mod_func_int32_t_s_s((((g_364 = ((((g_41 = (0U ^ l_602)) <= (((0xF4 | (safe_rshift_func_int16_t_s_s(((p_17 , ((l_583 = (l_670 , (safe_sub_func_int32_t_s_s(0xAD6C5ED4, p_18)))) > l_616)) < 0x790A), 10))) == 7U) , g_29)) , 0xC8) == 0x3C)) <= 0x856D) != p_19), l_587))) , p_16), 0x7F06EC14))) && 0x8203) == p_19), p_18)))) != p_16) && l_600), g_675)), g_398)) < p_17);
                    }
                }
                else
                { /* block id: 238 */
                    uint8_t l_696 = 0x3E;
                    int32_t l_703 = 0x37E64523;
                    int32_t l_704 = 0x5594C27A;
                    for (g_29 = (-2); (g_29 < (-3)); g_29 = safe_sub_func_int8_t_s_s(g_29, 5))
                    { /* block id: 241 */
                        uint16_t l_678 = 65532U;
                        l_678 ^= 0x40A634C6;
                        return l_42;
                    }
                    l_616 = (safe_sub_func_int16_t_s_s(((+(g_237 <= ((safe_rshift_func_uint16_t_u_s((safe_mod_func_uint8_t_u_u((((((((safe_sub_func_uint32_t_u_u((g_673 ^ (((g_164 | ((0xF495 | 0x00E1) <= (safe_rshift_func_uint16_t_u_u(((-1) >= ((((safe_mul_func_uint16_t_u_u(g_164, (safe_sub_func_uint32_t_u_u((l_696++), ((((safe_sub_func_uint8_t_u_u(((safe_add_func_uint16_t_u_u((l_703 = (g_286 ^ (0xD3B8DD7B != 0xD7C2D869))), l_40)) | l_40), 0xA1)) && g_364) <= 4294967288U) , g_345))))) ^ 0xFDA1) & g_499) || l_33)), 8)))) != 1U) | 0xDA470135)), l_704)) | l_604) > l_40) <= g_237) & g_705) ^ p_19) && g_43), 0x46)), 6)) < 253U))) <= l_706), g_108));
                }
                if (((safe_add_func_uint32_t_u_u((safe_add_func_uint32_t_u_u(((-1) != ((safe_mod_func_int8_t_s_s(((-1) || p_19), g_363)) , (0x26B50878 < p_18))), p_19)), 0xCE088BCF)) | g_108))
                { /* block id: 249 */
                    uint16_t l_724 = 0x1B1E;
                    int32_t l_739 = 0xEAAC1684;
                    uint16_t l_760 = 0x860C;
                    uint32_t l_780 = 5U;
                    g_185 &= ((safe_mul_func_uint16_t_u_u(((!(l_581 |= g_43)) == ((safe_mod_func_int8_t_s_s(((safe_mod_func_int16_t_s_s((g_364 || ((((((((l_616 ^= 0x0A) & ((p_19 > ((safe_lshift_func_int8_t_s_s((((0xC437C3F7 == (l_724 > ((safe_add_func_int32_t_s_s((safe_lshift_func_int8_t_s_s((((safe_add_func_uint8_t_u_u((l_732 = (!0xF0958B57)), (safe_add_func_uint8_t_u_u(1U, (l_739 = (safe_mod_func_int16_t_s_s(((safe_rshift_func_int16_t_s_u(p_19, 9)) < g_264), l_32))))))) != l_724) != p_19), 0)), p_19)) != g_43))) >= 0U) <= l_656), 0)) == 0x87)) <= l_32)) & g_398) < (-1)) & 3U) & 0) , g_264) , 1)), p_19)) <= g_237), g_673)) == g_108)), 8U)) || g_13);
                    l_732 |= (g_29 = (((safe_add_func_int32_t_s_s((l_739 = (safe_lshift_func_int16_t_s_s(((safe_unary_minus_func_uint32_t_u(0xD1A17798)) ^ (safe_rshift_func_uint16_t_u_u((safe_rshift_func_uint16_t_u_u((+(safe_rshift_func_uint8_t_u_s(0U, 5))), 5)), ((safe_sub_func_int16_t_s_s(6, (p_19 , (safe_sub_func_int16_t_s_s(((((g_370 ^ ((safe_mul_func_int16_t_s_s((safe_lshift_func_uint8_t_u_u((((l_604 = (l_760 != ((((safe_mul_func_uint16_t_u_u((((((l_40 = (safe_rshift_func_uint8_t_u_s((((safe_sub_func_int8_t_s_s(4, (safe_rshift_func_int16_t_s_u((safe_add_func_uint32_t_u_u((g_398++), (((g_675 = (safe_mod_func_uint32_t_u_u(((((l_780 &= ((safe_unary_minus_func_uint32_t_u(g_286)) , ((safe_mul_func_uint16_t_u_u(((safe_rshift_func_uint16_t_u_s(l_605, g_705)) < p_18), g_657)) , p_19))) , p_18) <= p_16) > 0), g_43))) | l_572) > g_345))), l_760)))) , g_370) <= 0x34C5), 7))) , p_17) >= l_656) > 2U) & 0xAD0E), 0x71C3)) , g_657) , 0xDBD74667) , p_16))) != p_18) || p_19), 2)), 0xA672)) & g_370)) > l_739) <= (-9)) || g_615), l_572))))) ^ l_739)))), g_657))), g_185)) & g_615) > l_583));
                }
                else
                { /* block id: 263 */
                    g_29 |= 0xCEF59449;
                    if (p_17)
                        break;
                }
            }
            l_581 ^= (safe_mod_func_int8_t_s_s((((p_17 == p_19) , (safe_sub_func_int16_t_s_s(((p_16 , (safe_lshift_func_uint16_t_u_s(((l_582 , ((((l_787 && ((g_499 > 0x8C4F) | ((safe_rshift_func_int8_t_s_u(g_363, (l_790 || p_19))) != p_16))) < 1U) , p_16) ^ l_791)) , 0x9F2D), l_656))) | p_19), g_345))) , p_17), l_583));
            l_581 ^= g_705;
            for (l_573 = 0; (l_573 < 47); l_573++)
            { /* block id: 272 */
                uint32_t l_808 = 1U;
                g_673 = ((((((safe_add_func_uint8_t_u_u((g_617 = (safe_add_func_uint8_t_u_u(0xFC, (safe_mul_func_uint16_t_u_u(((safe_mod_func_int8_t_s_s((g_829 &= ((((((safe_add_func_int8_t_s_s((safe_mod_func_uint32_t_u_u(0U, ((safe_mul_func_int16_t_s_s(l_808, (((safe_lshift_func_uint8_t_u_u(l_808, ((((safe_sub_func_int32_t_s_s(((safe_rshift_func_uint8_t_u_s(((safe_mul_func_int16_t_s_s((!(!(safe_sub_func_int32_t_s_s(p_16, (+p_19))))), (((65535U == ((l_787 = (+((safe_rshift_func_uint8_t_u_s((safe_rshift_func_uint16_t_u_s(g_499, 4)), (g_41 = ((safe_mul_func_uint16_t_u_u(65535U, p_18)) || 0x4B)))) , g_345))) < p_18)) , l_32) == g_363))) || g_58), g_164)) > p_17), l_40)) || 0x819FAE3F) <= (-8)) < p_18))) && g_58) == g_398))) | g_13))), l_573)) && (-1)) , p_18) >= p_18) , 8) > l_790)), 0x62)) , g_617), l_33))))), l_32)) == 0x4E) < g_13) || l_808) , p_19) >= l_42);
                if (l_604)
                    break;
            }
        }
    }
    l_865 = (((l_864 = (((p_18 = (((((((safe_add_func_uint32_t_u_u((safe_lshift_func_int8_t_s_s((safe_add_func_int8_t_s_s((g_58 &= (safe_add_func_int32_t_s_s((4294967295U & (safe_mod_func_int16_t_s_s((safe_mod_func_int8_t_s_s(g_13, (+((safe_lshift_func_int16_t_s_s((((safe_add_func_uint32_t_u_u((((safe_sub_func_int16_t_s_s((g_364 = (l_40 = (p_18 && (((((safe_mul_func_uint8_t_u_u(((safe_mul_func_int16_t_s_s((p_18 || 9U), (l_853 = p_17))) > ((((safe_mul_func_uint16_t_u_u(((safe_mod_func_uint16_t_u_u(((--g_43) && g_345), (safe_mul_func_int8_t_s_s((safe_sub_func_int16_t_s_s(l_791, p_17)), g_111)))) >= p_18), l_33)) > 0x7E9C51BC) != 0xCAB29C44) == 0x58638DE1)), 0x40)) ^ 0U) , 0x85EBE0B5) || 0x4F5BB740) >= l_33)))), 0U)) , 0x8DC3) != l_33), p_18)) <= p_16) != l_791), 4)) ^ g_499)))), p_18))), 1))), g_111)), 4)), 7)) != g_617) < l_791) < 0xEA) || p_17) , 0x36) > g_398)) , p_16) > 1)) && 0x3D66BEC8) , g_111);
    l_40 = g_398;
    return l_656;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static uint8_t  func_21(int32_t  p_22, int32_t  p_23, uint8_t  p_24, uint32_t  p_25)
{ /* block id: 1 */
    uint32_t l_27 = 0xFB1AF9D6;
    int32_t l_28 = 0;
    l_28 |= l_27;
    return p_22;
}


/* ------------------------------------------ */
/* 
 * reads : g_29 g_43 g_13 g_111 g_108 g_58 g_41 g_164 g_185 g_237 g_264 g_286 g_345 g_363 g_370 g_398 g_499 g_364
 * writes: g_29 g_43 g_108 g_111 g_164 g_185 g_237 g_58 g_264 g_41 g_286 g_345 g_364 g_370 g_398 g_499
 */
static uint8_t  func_61(const int32_t  p_62, int16_t  p_63)
{ /* block id: 21 */
    const uint16_t l_64 = 65535U;
    int32_t l_326 = 0;
    int32_t l_366 = 0xB29F12BC;
    int32_t l_367 = 0;
    int8_t l_368 = 0xC6;
    int32_t l_500 = 0xE731DA85;
    if ((p_63 > g_29))
    { /* block id: 22 */
        uint16_t l_75 = 8U;
        g_29 = l_64;
        for (g_43 = (-4); (g_43 >= 51); g_43 = safe_add_func_int8_t_s_s(g_43, 5))
        { /* block id: 26 */
            int8_t l_86 = 0x0D;
            int32_t l_356 = 0xFAFFE66E;
            l_356 = ((safe_rshift_func_uint8_t_u_s(p_62, 3)) == func_69(l_64, (l_75 == l_75), l_75, p_63, (l_326 = ((safe_lshift_func_int16_t_s_u((((l_64 , func_78(func_84((p_63 && (l_86 = g_13))), p_63, g_13, g_13, g_13)) , 65532U) | 0xF2D4), g_43)) != 0x06DAA5E9))));
        }
    }
    else
    { /* block id: 129 */
        uint16_t l_362 = 8U;
        int32_t l_365 = 0xBCF45954;
        int32_t l_369 = 0xB3495F28;
        uint32_t l_456 = 2U;
        uint16_t l_485 = 0U;
        if (((safe_mod_func_uint8_t_u_u((65526U < (g_370 = (((((l_326 && 0x1DE5116E) < (l_367 ^= (l_326 & (p_63 > ((g_264 < (l_366 = (((((l_365 = (g_364 = ((g_264 , (g_108 = (safe_add_func_uint32_t_u_u(((g_345 | ((l_362 = (((~p_63) == 1U) == 0U)) <= 65530U)) > p_62), g_363)))) > 0x989D2F6E))) , p_62) & p_62) , p_62) >= g_29))) < 0x73AA))))) <= l_368) | l_64) < l_369))), p_63)) | p_63))
        { /* block id: 137 */
            uint16_t l_374 = 65535U;
            int32_t l_393 = (-1);
            g_29 = (((g_108 = ((((!(safe_mod_func_int16_t_s_s(((l_374 = g_370) | (safe_rshift_func_int8_t_s_s(g_286, (safe_sub_func_uint8_t_u_u((safe_mod_func_int32_t_s_s(((-1) && (((l_366 = (safe_add_func_uint16_t_u_u(0x7B85, (p_63 = (((safe_rshift_func_uint16_t_u_u(1U, (safe_lshift_func_uint16_t_u_u(g_237, (safe_sub_func_int16_t_s_s((safe_sub_func_uint16_t_u_u((l_367 ^ (0x00 == l_393)), p_62)), p_63)))))) > l_393) != 0x88))))) < l_64) <= 0x79EC)), l_393)), g_237))))), 0x738E))) != 1) ^ p_62) == p_62)) ^ p_62) , g_237);
            for (g_41 = 0; (g_41 < 26); g_41 = safe_add_func_int8_t_s_s(g_41, 1))
            { /* block id: 145 */
                int16_t l_396 = 0x718E;
                int32_t l_397 = (-1);
                int32_t l_431 = 0xEAFF6CA6;
                l_393 = l_396;
                g_398--;
                if (((((safe_mod_func_int8_t_s_s((((l_393 = g_13) || g_286) == (safe_rshift_func_int16_t_s_s(((safe_rshift_func_int8_t_s_u((safe_add_func_uint8_t_u_u((safe_add_func_uint8_t_u_u(g_185, l_396)), l_374)), 2)) != ((safe_mod_func_int8_t_s_s(l_64, ((((safe_sub_func_uint16_t_u_u((safe_unary_minus_func_uint8_t_u((safe_mod_func_uint8_t_u_u(((l_365 &= (safe_mod_func_int16_t_s_s((0x0B > (safe_lshift_func_uint16_t_u_u((l_374 <= g_370), p_62))), 0x4915))) ^ p_63), p_62)))), 0x4764)) >= l_362) ^ p_63) || 65535U))) || 4U)), 3))), l_374)) > 0x45) < l_396) > g_370))
                { /* block id: 150 */
                    int8_t l_422 = 0x5A;
                    int32_t l_432 = 0x919F8683;
                    if ((7U < l_422))
                    { /* block id: 151 */
                        l_393 = (((((l_366 = (safe_add_func_uint8_t_u_u((((g_43 < (g_370 = (((l_397 >= 0xF3) > ((p_63 <= g_58) == (g_345 || (l_431 ^= ((safe_sub_func_uint32_t_u_u((safe_lshift_func_int8_t_s_s((safe_add_func_int32_t_s_s((g_185 ^ l_397), g_286)), 6)), g_29)) , 0xF278))))) < l_422))) >= 0xB2) != l_362), p_62))) == 1U) <= 0xC7) >= g_264) , 0);
                        l_432 = l_422;
                    }
                    else
                    { /* block id: 157 */
                        g_29 = l_365;
                    }
                }
                else
                { /* block id: 160 */
                    return l_374;
                }
            }
            l_393 = l_365;
            l_369 &= (0x8A || 0x19);
        }
        else
        { /* block id: 166 */
            uint32_t l_454 = 1U;
            int32_t l_455 = 0x1827CA51;
            int32_t l_470 = 1;
            g_29 = ((l_367 = (((safe_rshift_func_uint8_t_u_u((safe_rshift_func_uint16_t_u_s((safe_sub_func_int8_t_s_s((safe_rshift_func_int16_t_s_s(((((safe_sub_func_int16_t_s_s(0x491C, g_29)) ^ (safe_unary_minus_func_int16_t_s(((((~((safe_sub_func_int32_t_s_s(((l_455 = (l_326 = ((safe_add_func_uint32_t_u_u(0xA6FD3F7A, (0x00 < 0x7C))) > (safe_add_func_int32_t_s_s((((-1) && ((safe_unary_minus_func_int16_t_s(0x40C3)) == ((((safe_sub_func_uint32_t_u_u(((g_370 | (p_63 && g_111)) & g_363), g_164)) , l_454) || l_365) | p_62))) < p_62), l_369))))) < l_366), 4294967286U)) >= l_369)) , g_111) && g_286) <= 0)))) < p_63) , g_264), 15)), (-8))), p_63)), g_29)) > g_363) & 65527U)) != p_63);
            g_185 |= l_456;
            l_369 = (safe_add_func_uint32_t_u_u(l_369, (safe_mod_func_uint8_t_u_u(((safe_mul_func_uint8_t_u_u(247U, 0x48)) >= ((!g_185) != 9)), (safe_add_func_int8_t_s_s(0xD3, (0xE1 >= (l_367 | ((safe_lshift_func_int16_t_s_u((safe_rshift_func_int8_t_s_u(((0xBB > p_63) , g_13), 7)), l_470)) , l_470)))))))));
        }
        g_29 ^= (safe_rshift_func_int8_t_s_s(((0xF2CF != (((safe_mod_func_int8_t_s_s(((safe_mul_func_int16_t_s_s((safe_mod_func_int8_t_s_s((safe_mod_func_uint32_t_u_u((((((((safe_mod_func_int16_t_s_s(((safe_add_func_int16_t_s_s((((l_485 = 0U) , (safe_mod_func_uint32_t_u_u(((safe_mod_func_int32_t_s_s(((((safe_unary_minus_func_uint16_t_u(((safe_add_func_int8_t_s_s(l_365, (safe_add_func_int16_t_s_s(l_456, g_398)))) , p_63))) & 0x20DD8B0E) & (safe_sub_func_uint8_t_u_u((g_499 = ((((g_345--) ^ (0U & g_370)) >= p_62) ^ (-9))), 0x67))) && 0x17), 0xAFE8CCAF)) && 0xAE81), p_63))) != l_326), g_164)) == g_237), 0x5928)) >= g_13) <= l_367) || 1) > 1) || l_326) , l_369), p_62)), 1U)), l_365)) ^ p_63), g_264)) , l_367) >= l_500)) || (-5)), 6));
    }
    for (g_499 = 11; (g_499 != 21); ++g_499)
    { /* block id: 181 */
        uint32_t l_503 = 0x59226EBE;
        int32_t l_544 = 0;
        int32_t l_559 = 0;
        l_503 = (-1);
        if ((g_345 >= (safe_mul_func_int8_t_s_s((safe_lshift_func_uint8_t_u_u(255U, ((safe_rshift_func_uint8_t_u_u((safe_sub_func_uint16_t_u_u((+(safe_mul_func_int16_t_s_s((0x55DCB15F <= (((!(((safe_sub_func_int32_t_s_s(l_366, (((-3) ^ (safe_lshift_func_int8_t_s_u(p_63, 3))) | g_13))) && (safe_mod_func_int32_t_s_s((((safe_rshift_func_uint8_t_u_u((l_366 | (((g_499 , 0) > l_367) != p_63)), 4)) < 9U) || g_286), l_503))) < p_62)) == p_63) | p_63)), p_63))), p_62)), 1)) >= g_111))), g_111))))
        { /* block id: 183 */
            int16_t l_524 = 0xD810;
            int8_t l_560 = 0xA9;
            int32_t l_561 = 0x8ABD43E7;
            g_29 = (l_524 == l_524);
            l_544 ^= (((8 == (((safe_lshift_func_uint8_t_u_u(p_62, (((l_367 &= (safe_mul_func_uint8_t_u_u(((safe_add_func_uint32_t_u_u(0xC2BF5C01, (p_63 || ((((g_29 = 0x3A74ED63) || (safe_mul_func_uint16_t_u_u((safe_rshift_func_int16_t_s_u(p_63, (((safe_mod_func_int16_t_s_s((safe_sub_func_int8_t_s_s(((safe_sub_func_int32_t_s_s((+l_500), (safe_mul_func_uint8_t_u_u((l_524 == l_368), 2)))) | g_264), g_370)), p_63)) && p_62) || 0U))), l_503))) ^ p_63) , 4)))) != g_58), 1U))) <= p_63) >= g_364))) , 0xB3147C78) , g_286)) | l_524) >= 65535U);
            if (g_43)
                continue;
            l_561 = (l_560 = (safe_add_func_uint16_t_u_u(l_544, (((((safe_lshift_func_int16_t_s_u(((safe_mul_func_uint8_t_u_u((safe_mul_func_int8_t_s_s((g_370 , ((g_345 = (safe_mul_func_int8_t_s_s((0x159C8B26 != p_62), (g_164 == g_41)))) >= (safe_mul_func_int8_t_s_s((((safe_add_func_uint16_t_u_u((5 | (l_559 = ((g_58 | (((((0x0F & 0x0E) != (-1)) | 0x82DC5408) | g_363) < 0)) > 4U))), 0)) > l_368) , l_544), (-10))))), 0x11)), l_368)) || g_41), 5)) <= 1) , l_524) && l_503) != 0xAC97))));
        }
        else
        { /* block id: 193 */
            return p_62;
        }
    }
    return p_63;
}


/* ------------------------------------------ */
/* 
 * reads : g_286 g_108 g_13 g_111 g_164 g_41 g_58
 * writes: g_286 g_108 g_111 g_345
 */
static uint32_t  func_69(int8_t  p_70, uint32_t  p_71, uint16_t  p_72, int8_t  p_73, uint8_t  p_74)
{ /* block id: 110 */
    int32_t l_333 = (-5);
    int32_t l_352 = 5;
    int32_t l_355 = 0x8D4B9C1E;
    for (g_286 = 19; (g_286 >= 43); g_286 = safe_add_func_int32_t_s_s(g_286, 9))
    { /* block id: 113 */
        const uint32_t l_346 = 0x34F7F432;
        for (g_108 = 23; (g_108 < 11); g_108 = safe_sub_func_int32_t_s_s(g_108, 1))
        { /* block id: 116 */
            uint32_t l_347 = 0U;
            l_347 ^= (safe_mul_func_uint8_t_u_u(l_333, ((safe_lshift_func_uint8_t_u_u(((safe_mod_func_uint16_t_u_u(((g_13 & (g_111++)) <= (((((p_72 = (g_108 != (((+(safe_lshift_func_int16_t_s_s(p_71, 8))) || (((p_74 || 1U) , (safe_sub_func_uint32_t_u_u(0x3BC691B7, (((g_345 = p_72) , g_286) > l_346)))) | g_164)) <= 1U))) && g_41) < l_333) < p_71) || p_70)), 65531U)) >= g_58), 2)) <= g_164)));
        }
    }
    l_355 ^= (l_352 = (((l_333 == (safe_mod_func_uint16_t_u_u(l_333, 0xF6D2))) != (safe_mod_func_int8_t_s_s(g_164, (++p_74)))) == 65533U));
    return g_286;
}


/* ------------------------------------------ */
/* 
 * reads : g_29 g_164 g_264 g_286 g_185 g_111 g_43 g_41 g_108
 * writes: g_286 g_58
 */
static uint8_t  func_78(int16_t  p_79, int16_t  p_80, int32_t  p_81, uint8_t  p_82, uint32_t  p_83)
{ /* block id: 101 */
    int32_t l_294 = 0x54B2A351;
    int32_t l_324 = 0x589D5DEC;
    int32_t l_325 = (-2);
    l_294 |= (5U <= (!g_29));
    l_325 &= ((safe_mod_func_uint16_t_u_u(((((safe_lshift_func_uint8_t_u_u(p_80, 1)) >= (g_58 = (safe_mod_func_int16_t_s_s(((((safe_rshift_func_int8_t_s_u((~((((((safe_sub_func_uint32_t_u_u((((safe_sub_func_uint32_t_u_u(g_164, ((safe_rshift_func_int8_t_s_s(((g_264 ^ (safe_unary_minus_func_uint32_t_u((((g_286++) < 0x12ECCD64) , 0x8B9456BA)))) , (safe_mul_func_int16_t_s_s(p_79, ((safe_lshift_func_uint8_t_u_s(0xFF, (((l_294 = (safe_mul_func_uint8_t_u_u((safe_unary_minus_func_uint16_t_u((((((safe_add_func_uint8_t_u_u((p_82 = l_294), (-7))) | g_185) < p_83) < 0x2B921B1E) | l_294))), l_294))) ^ p_83) == g_111))) & g_43)))), 6)) , p_82))) , g_41) <= 0U), 4294967293U)) || g_108) < 0x9EE6F4B5) > 2) | g_164) ^ 0x8DA2AAD2)), l_324)) || g_111) != 0U) & l_324), 3U)))) , p_82) , l_324), 0x2084)) | l_324);
    return g_43;
}


/* ------------------------------------------ */
/* 
 * reads : g_111 g_108 g_29 g_13 g_58 g_41 g_43 g_164 g_185 g_237 g_264 g_286
 * writes: g_108 g_111 g_29 g_164 g_185 g_237 g_58 g_264 g_41 g_286
 */
static int16_t  func_84(int32_t  p_85)
{ /* block id: 28 */
    uint8_t l_97 = 0x91;
    int32_t l_240 = 0xEC69D37B;
    int16_t l_282 = (-2);
    int32_t l_284 = 0x8AEBE663;
    l_240 &= func_87(func_21(func_91(((l_97 , ((0x66298A20 < 0) & (((safe_mod_func_uint16_t_u_u(0x69AC, (safe_lshift_func_uint8_t_u_u((((safe_mul_func_int8_t_s_s((safe_rshift_func_uint8_t_u_s(p_85, (4294967287U ^ ((safe_lshift_func_int8_t_s_s(((g_108 = l_97) && ((1 && ((safe_lshift_func_uint16_t_u_u(((-2) & l_97), 11)) >= 255U)) >= 0xC1DF722E)), g_111)) && l_97)))), p_85)) > 3) < (-1)), 2)))) > p_85) , g_108))) >= l_97), g_29, l_97, g_111, g_13), p_85, l_97, l_97), p_85, g_41);
    for (g_58 = (-13); (g_58 < (-29)); g_58 = safe_sub_func_int8_t_s_s(g_58, 6))
    { /* block id: 81 */
        uint8_t l_261 = 0x38;
        for (g_111 = (-14); (g_111 < 5); g_111++)
        { /* block id: 84 */
            uint32_t l_269 = 1U;
            int32_t l_270 = 0x889F70B1;
            l_270 = (safe_sub_func_uint8_t_u_u((safe_sub_func_int32_t_s_s(g_108, (((0xC6 < (safe_add_func_int16_t_s_s((safe_rshift_func_int16_t_s_u((safe_rshift_func_int8_t_s_u((safe_mul_func_uint16_t_u_u((l_240 |= g_43), (safe_lshift_func_int16_t_s_s((((safe_mul_func_int16_t_s_s(l_261, 0x490E)) == ((p_85 |= g_13) , (safe_add_func_int32_t_s_s(((p_85 == (++g_264)) < (safe_add_func_int16_t_s_s(((0xEE < (((((((((g_29 > l_261) >= g_29) , l_269) <= l_261) == 1U) == g_237) , p_85) , g_164) && 0x12A9E8DC)) , (-3)), (-1)))), p_85)))) <= g_185), 0)))), 2)), 13)), g_237))) , l_240) ^ 8U))), g_108));
        }
        return p_85;
    }
    for (g_264 = 0; (g_264 == 51); g_264 = safe_add_func_uint8_t_u_u(g_264, 6))
    { /* block id: 94 */
        uint32_t l_277 = 4294967295U;
        int32_t l_285 = 0x871A79F7;
        g_185 = (safe_mul_func_int8_t_s_s((((safe_sub_func_int32_t_s_s(l_277, (safe_mul_func_int16_t_s_s((g_164 != (l_285 = ((safe_rshift_func_int8_t_s_s(7, (g_41 &= l_282))) ^ (+(++g_286))))), p_85)))) & g_13) ^ 65532U), (safe_mul_func_uint16_t_u_u((safe_lshift_func_int16_t_s_s(l_277, 7)), g_264))));
    }
    return p_85;
}


/* ------------------------------------------ */
/* 
 * reads : g_43 g_58 g_13 g_164 g_41 g_111 g_108 g_29 g_185 g_237
 * writes: g_164 g_29 g_185 g_111 g_108 g_237
 */
static int32_t  func_87(uint8_t  p_88, int32_t  p_89, uint32_t  p_90)
{ /* block id: 51 */
    const uint32_t l_155 = 0xF16CCE4F;
    int32_t l_165 = (-1);
    uint32_t l_176 = 0U;
    int32_t l_177 = 0xBBF11896;
    int32_t l_178 = 9;
    int32_t l_232 = (-1);
    int32_t l_233 = 1;
    int32_t l_234 = (-10);
    int32_t l_235 = 0x7CE1FA24;
    int32_t l_236 = 0x6C562556;
    l_165 = ((((safe_add_func_uint32_t_u_u(4294967292U, (l_155 != (safe_add_func_int32_t_s_s(g_43, (safe_rshift_func_int16_t_s_u(0x8372, 13))))))) , p_90) && (((g_58 <= ((0x5D | ((l_155 & (safe_mul_func_int8_t_s_s(((safe_add_func_int32_t_s_s((((g_164 |= g_13) ^ g_58) ^ 0xF9760D51), 0xCB904F0D)) & p_88), 5))) ^ g_41)) | 4294967295U)) > p_88) , p_89)) | l_155);
    if (((l_165 = (safe_mul_func_uint8_t_u_u((p_89 < (l_165 , (l_178 ^= ((safe_add_func_uint32_t_u_u(((l_155 || 4294967295U) < (-6)), (safe_sub_func_int8_t_s_s(((-7) > (p_90 != (((((l_177 ^= (safe_sub_func_int8_t_s_s(((l_165 ^ (safe_mod_func_uint8_t_u_u((g_111 > l_176), g_58))) || l_165), (-10)))) ^ l_155) != g_13) , g_43) != l_155))), g_108)))) & l_176)))), g_41))) , l_178))
    { /* block id: 57 */
        uint8_t l_196 = 0x75;
        g_29 &= (p_89 = (safe_rshift_func_uint8_t_u_s(p_89, 0)));
        l_165 = (((safe_sub_func_int16_t_s_s(((((g_13 , (g_185 = (p_88 == (safe_sub_func_int8_t_s_s(p_89, g_164))))) , g_164) > ((safe_mod_func_int32_t_s_s(g_29, (safe_sub_func_uint32_t_u_u(p_90, (~l_177))))) != ((!((((safe_rshift_func_uint16_t_u_u(g_41, g_111)) | 0x5A9A) >= 5U) & p_89)) <= 4294967295U))) < g_29), l_177)) , 0x72653B0F) || p_89);
        for (g_111 = 7; (g_111 != 19); ++g_111)
        { /* block id: 64 */
            int16_t l_201 = (-6);
            --l_196;
            if (g_111)
                break;
            p_89 = ((safe_sub_func_uint8_t_u_u((g_41 & ((l_201 , ((0 < ((safe_mod_func_uint32_t_u_u(0x25E41762, (9U || (p_90 , 4294967294U)))) , ((safe_rshift_func_uint8_t_u_u((((safe_mod_func_uint32_t_u_u(g_58, (g_108 = g_108))) ^ g_185) < 0x59), g_43)) , g_29))) , l_196)) , g_41)), 0x81)) & 0);
        }
    }
    else
    { /* block id: 70 */
        int32_t l_210 = (-1);
        int32_t l_231 = 2;
        g_29 = (g_185 = (safe_lshift_func_int8_t_s_s(l_210, ((safe_lshift_func_uint16_t_u_s(0xCA5F, 10)) , (safe_add_func_int16_t_s_s(((8 < (((safe_rshift_func_uint16_t_u_s(((!((!((safe_lshift_func_int8_t_s_u((((safe_sub_func_int16_t_s_s((~1U), (safe_unary_minus_func_uint16_t_u((((safe_add_func_int32_t_s_s(g_185, (l_165 = (safe_sub_func_uint16_t_u_u((safe_sub_func_int16_t_s_s(l_155, g_43)), 0xF891))))) <= (l_231 &= ((-6) >= 1))) , 65535U))))) <= l_210) != l_176), l_177)) , 0x90F1)) , g_111)) ^ l_155), 13)) || p_88) & 0x23372F70)) > p_89), g_185))))));
    }
    g_237++;
    return l_178;
}


/* ------------------------------------------ */
/* 
 * reads : g_108 g_58 g_111 g_13 g_41 g_29
 * writes: g_108 g_111 g_29
 */
static int32_t  func_91(uint8_t  p_92, uint16_t  p_93, uint16_t  p_94, uint32_t  p_95, uint8_t  p_96)
{ /* block id: 30 */
    int32_t l_116 = 0xA6D6C577;
    int32_t l_141 = 0xF19E1DE5;
    uint16_t l_150 = 0x9D1C;
    uint32_t l_151 = 0xE3D8B0AA;
    int32_t l_152 = 4;
    for (p_96 = 0; (p_96 >= 39); p_96++)
    { /* block id: 33 */
        uint8_t l_120 = 0x97;
        for (g_108 = 0; (g_108 == 56); g_108++)
        { /* block id: 36 */
            int16_t l_117 = 0xCF98;
            int32_t l_123 = 0xB463C3EA;
            int32_t l_124 = 0x31F07AA3;
            l_116 = g_58;
            if (l_117)
                break;
            g_29 = ((((1 != (safe_sub_func_uint16_t_u_u(l_120, l_120))) > ((g_111--) && (l_123 = p_95))) > g_108) >= g_13);
            l_124 |= g_58;
        }
        g_29 = p_95;
    }
    l_152 = (!((safe_mul_func_uint16_t_u_u((((((g_111 = 65535U) >= (safe_mul_func_int16_t_s_s(((safe_lshift_func_uint8_t_u_u(((safe_mod_func_uint32_t_u_u(p_93, (safe_sub_func_int32_t_s_s((g_41 || 0x93), (safe_add_func_uint8_t_u_u(0x8E, ((safe_unary_minus_func_int8_t_s((l_116 & (g_108 = (l_141 = ((safe_rshift_func_uint16_t_u_u(0x50E2, 14)) != p_96)))))) != (safe_add_func_uint32_t_u_u((safe_lshift_func_int16_t_s_u((safe_mul_func_int8_t_s_s((((safe_lshift_func_uint16_t_u_s(((g_13 | 0x2DF22AE8) ^ l_116), 15)) , 65529U) && p_92), p_93)), 10)), p_94))))))))) && g_29), l_150)) <= 0x37), 0x1F3B))) | p_92) <= p_95) ^ 0), l_151)) || l_150));
    return p_95;
}




/* ---------------------------------------- */
int main (void)
{
    int print_hash_value = 0;
    platform_main_begin();
    crc32_gentab();
    func_1();
    transparent_crc(g_13, "g_13", print_hash_value);
    transparent_crc(g_29, "g_29", print_hash_value);
    transparent_crc(g_41, "g_41", print_hash_value);
    transparent_crc(g_43, "g_43", print_hash_value);
    transparent_crc(g_58, "g_58", print_hash_value);
    transparent_crc(g_108, "g_108", print_hash_value);
    transparent_crc(g_111, "g_111", print_hash_value);
    transparent_crc(g_164, "g_164", print_hash_value);
    transparent_crc(g_185, "g_185", print_hash_value);
    transparent_crc(g_237, "g_237", print_hash_value);
    transparent_crc(g_264, "g_264", print_hash_value);
    transparent_crc(g_286, "g_286", print_hash_value);
    transparent_crc(g_345, "g_345", print_hash_value);
    transparent_crc(g_363, "g_363", print_hash_value);
    transparent_crc(g_364, "g_364", print_hash_value);
    transparent_crc(g_370, "g_370", print_hash_value);
    transparent_crc(g_398, "g_398", print_hash_value);
    transparent_crc(g_499, "g_499", print_hash_value);
    transparent_crc(g_615, "g_615", print_hash_value);
    transparent_crc(g_617, "g_617", print_hash_value);
    transparent_crc(g_657, "g_657", print_hash_value);
    transparent_crc(g_673, "g_673", print_hash_value);
    transparent_crc(g_675, "g_675", print_hash_value);
    transparent_crc(g_705, "g_705", print_hash_value);
    transparent_crc(g_829, "g_829", print_hash_value);
    transparent_crc(g_869, "g_869", print_hash_value);
    transparent_crc(g_874, "g_874", print_hash_value);
    transparent_crc(g_875, "g_875", print_hash_value);
    transparent_crc(g_876, "g_876", print_hash_value);
    transparent_crc(g_878, "g_878", print_hash_value);
    transparent_crc(g_879, "g_879", print_hash_value);
    transparent_crc(g_933, "g_933", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 173
XXX total union variables: 0

XXX max expression depth: 55
breakdown:
   depth: 1, occurrence: 116
   depth: 2, occurrence: 21
   depth: 3, occurrence: 1
   depth: 4, occurrence: 1
   depth: 8, occurrence: 1
   depth: 9, occurrence: 2
   depth: 14, occurrence: 2
   depth: 15, occurrence: 1
   depth: 18, occurrence: 1
   depth: 19, occurrence: 1
   depth: 20, occurrence: 1
   depth: 21, occurrence: 1
   depth: 22, occurrence: 1
   depth: 23, occurrence: 3
   depth: 24, occurrence: 1
   depth: 25, occurrence: 2
   depth: 26, occurrence: 2
   depth: 27, occurrence: 2
   depth: 28, occurrence: 1
   depth: 29, occurrence: 1
   depth: 30, occurrence: 3
   depth: 31, occurrence: 1
   depth: 32, occurrence: 1
   depth: 33, occurrence: 2
   depth: 34, occurrence: 1
   depth: 35, occurrence: 2
   depth: 37, occurrence: 1
   depth: 38, occurrence: 1
   depth: 39, occurrence: 1
   depth: 42, occurrence: 1
   depth: 45, occurrence: 1
   depth: 48, occurrence: 1
   depth: 51, occurrence: 1
   depth: 55, occurrence: 1

XXX total number of pointers: 0

XXX times a non-volatile is read: 729
XXX times a non-volatile is write: 195
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 0

XXX stmts: 114
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 34
   depth: 1, occurrence: 19
   depth: 2, occurrence: 30
   depth: 3, occurrence: 10
   depth: 4, occurrence: 12
   depth: 5, occurrence: 9

XXX percentage a fresh-made variable is used: 18.2
XXX percentage an existing variable is used: 81.8
********************* end of statistics **********************/



Assembly Code with Setting 1: 
	.text
	.file	"tmpvrsoeaer.c"
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5, 0x0                          # -- Begin function main
.LCPI0_0:
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	2                               # 0x2
	.long	3                               # 0x3
	.long	4                               # 0x4
	.long	5                               # 0x5
	.long	6                               # 0x6
	.long	7                               # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0
.LCPI0_1:
	.long	3988292384                      # 0xedb88320
.LCPI0_2:
	.long	8                               # 0x8
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	vmovdqa	.LCPI0_0(%rip), %ymm0           # ymm0 = [0,1,2,3,4,5,6,7]
	xorl	%ecx, %ecx
	vpbroadcastd	.LCPI0_1(%rip), %ymm1   # ymm1 = [3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384]
	leaq	crc32_tab(%rip), %rax
	vpbroadcastd	.LCPI0_2(%rip), %ymm2   # ymm2 = [8,8,8,8,8,8,8,8]
	.p2align	4, 0x90
.LBB0_1:                                # =>This Inner Loop Header: Depth=1
	vpsrld	$1, %ymm0, %ymm3
	vpxor	%ymm1, %ymm3, %ymm4
	vpslld	$31, %ymm0, %ymm5
	vblendvps	%ymm5, %ymm4, %ymm3, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vmovups	%ymm3, (%rcx,%rax)
	vpaddd	%ymm2, %ymm0, %ymm0
	addq	$32, %rcx
	cmpq	$1024, %rcx                     # imm = 0x400
	jne	.LBB0_1
# %bb.2:
	movl	crc32_context(%rip), %ecx
	movzbl	%cl, %edx
                                        # kill: def $ecx killed $ecx killed $rcx
	shrl	$8, %ecx
	xorq	$88, %rdx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$129, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$176, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$72, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$149, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movl	%ecx, %edx
	notl	%edx
	shrl	$8, %ecx
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	$102, %edx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	shrl	$8, %ecx
	xorl	(%rax,%rdx,4), %ecx
	movzbl	%cl, %edx
	movl	%ecx, %esi
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	g_58(%rip), %ecx
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$1, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	andl	$9, %ecx
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	%ecx, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$29, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$3, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$150, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$72, %edx
	xorl	(%rax,%rdx,4), %esi
	movl	%esi, %edx
	notl	%edx
	shrl	$8, %esi
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %esi
	movl	%esi, %edx
	notl	%edx
	shrl	$8, %esi
	movzbl	%dl, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$13, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$223, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$146, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$8, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$6, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$252, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$230, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$112, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$80, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$247, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$134, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$66, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$74, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$102, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$186, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$195, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$62, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$22, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$212, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$225, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$101, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$8, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$1, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$1, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$240, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$58, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$197, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$31, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$253, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$36, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$114, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$188, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$11, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edx
	shrl	$8, %esi
	xorl	$234, %edx
	xorl	(%rax,%rdx,4), %esi
	movzbl	%sil, %edi
	movl	%esi, %edx
	shrl	$8, %edx
	xorl	$199, %edi
	xorl	(%rax,%rdi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$59, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$170, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$202, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$186, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$156, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$106, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$1, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$175, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$1, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movb	%cl, g_58(%rip)
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	$2, %ecx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	$161, %ecx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	$44, %ecx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	(%rax,%rcx,4), %edx
	movzbl	g_879(%rip), %ecx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	$149, %esi
	xorl	(%rax,%rsi,4), %edx
	incb	%cl
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movl	%edx, %esi
	notl	%esi
	shrl	$8, %edx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %edx
	movzbl	%cl, %esi
	movzbl	%dl, %edi
	shrl	$8, %edx
	xorl	%esi, %edi
	xorl	(%rax,%rdi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movzbl	%dl, %esi
	shrl	$8, %edx
	xorl	(%rax,%rsi,4), %edx
	movb	%cl, g_879(%rip)
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	$1, %ecx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	shrl	$8, %edx
	xorl	(%rax,%rcx,4), %edx
	movzbl	%dl, %ecx
	movl	%edx, %esi
	shrl	$8, %esi
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, crc32_context(%rip)
	notl	%esi
	leaq	.L.str.33(%rip), %rdi
	xorl	%eax, %eax
	vzeroupper
	callq	printf@PLT
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc
                                        # -- End function
	.type	g_58,@object                    # @g_58
	.data
g_58:
	.byte	7                               # 0x7
	.size	g_58, 1

	.type	g_879,@object                   # @g_879
g_879:
	.byte	1                               # 0x1
	.size	g_879, 1

	.type	crc32_context,@object           # @crc32_context
	.p2align	2, 0x0
crc32_context:
	.long	4294967295                      # 0xffffffff
	.size	crc32_context, 4

	.type	crc32_tab,@object               # @crc32_tab
	.local	crc32_tab
	.comm	crc32_tab,1024,16
	.type	.L.str.33,@object               # @.str.33
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.33:
	.asciz	"checksum = %X\n"
	.size	.L.str.33, 15

	.ident	"clang version 16.0.6"
	.section	".note.GNU-stack","",@progbits
	.addrsig


Assembly Code with Setting 2: 
	.file	"tmp6s5t9uo7.c"
	.text
	.p2align 4
	.type	crc32_8bytes, @function
crc32_8bytes:
.LFB84:
	.cfi_startproc
	movl	crc32_context(%rip), %eax
	leaq	crc32_tab(%rip), %rsi
	movl	%edi, %edx
	movl	%eax, %ecx
	shrl	$8, %eax
	xorl	%edi, %ecx
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movzbl	%dh, %ecx
	shrl	$24, %edx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movl	%edi, %ecx
	shrl	$16, %ecx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	xorl	%eax, %edx
	shrl	$8, %eax
	movzbl	%dl, %edx
	xorl	(%rsi,%rdx,4), %eax
	movl	%eax, crc32_context(%rip)
	ret
	.cfi_endproc
.LFE84:
	.size	crc32_8bytes, .-crc32_8bytes
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC4:
	.string	"checksum = %X\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LFB97:
	.cfi_startproc
	movl	$8, %ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	leaq	crc32_tab(%rip), %rax
	vmovdqa	.LC0(%rip), %ymm5
	vmovd	%ecx, %xmm6
	leaq	1024(%rax), %rdx
	vpxor	%xmm4, %xmm4, %xmm4
	movl	$1, %ecx
	vmovd	%ecx, %xmm3
	movl	$-306674912, %ecx
	vpbroadcastd	%xmm6, %ymm6
	vmovd	%ecx, %xmm2
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	vpbroadcastd	%xmm3, %ymm3
	andq	$-32, %rsp
	vpbroadcastd	%xmm2, %ymm2
	.p2align 4,,10
	.p2align 3
.L4:
	vmovdqa	%ymm5, %ymm1
	addq	$32, %rax
	vpaddd	%ymm6, %ymm5, %ymm5
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm0
	vmovdqa	%ymm0, -32(%rax)
	cmpq	%rdx, %rax
	jne	.L4
	xorl	%eax, %eax
	movzbl	g_58(%rip), %r8d
	movl	$1219527000, %edi
	movl	$-107, g_29(%rip)
	movw	%ax, g_364(%rip)
	movzbl	g_879(%rip), %eax
	andl	$9, %r8d
	movl	$1, g_869(%rip)
	leal	1(%rax), %r9d
	movb	%r8b, g_58(%rip)
	movb	%r9b, g_879(%rip)
	call	crc32_8bytes
	movl	$-107, %edi
	call	crc32_8bytes
	movl	$102, %edi
	call	crc32_8bytes
	movl	$1, %edi
	call	crc32_8bytes
	movsbl	%r8b, %edi
	call	crc32_8bytes
	movl	$1217790749, %edi
	call	crc32_8bytes
	movl	$65535, %edi
	call	crc32_8bytes
	movl	$143843085, %edi
	call	crc32_8bytes
	movl	$1894185990, %edi
	call	crc32_8bytes
	movl	$1116141392, %edi
	call	crc32_8bytes
	movl	$-1011194294, %edi
	call	crc32_8bytes
	movl	$-506194370, %edi
	call	crc32_8bytes
	movl	$101, %edi
	call	crc32_8bytes
	movl	$8, %edi
	call	crc32_8bytes
	xorl	%edi, %edi
	call	crc32_8bytes
	movl	$1, %edi
	call	crc32_8bytes
	call	crc32_8bytes
	movl	$15088, %edi
	call	crc32_8bytes
	movl	$620568517, %edi
	call	crc32_8bytes
	movl	$114, %edi
	call	crc32_8bytes
	movl	$-940962884, %edi
	call	crc32_8bytes
	movl	$-1, %edi
	call	crc32_8bytes
	call	crc32_8bytes
	movl	$-1161123269, %edi
	call	crc32_8bytes
	movl	$-1358861668, %edi
	call	crc32_8bytes
	movl	$1, %edi
	call	crc32_8bytes
	xorl	%edi, %edi
	call	crc32_8bytes
	movl	$2, %edi
	call	crc32_8bytes
	movl	$11425, %edi
	call	crc32_8bytes
	movl	$-107, %edi
	call	crc32_8bytes
	movzbl	%r9b, %edi
	call	crc32_8bytes
	movl	$1, %edi
	call	crc32_8bytes
	movl	crc32_context(%rip), %esi
	leaq	.LC4(%rip), %rdi
	xorl	%eax, %eax
	notl	%esi
	call	printf@PLT
	xorl	%eax, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE97:
	.size	main, .-main
	.data
	.type	g_879, @object
	.size	g_879, 1
g_879:
	.byte	1
	.local	g_869
	.comm	g_869,4,4
	.align 2
	.type	g_364, @object
	.size	g_364, 2
g_364:
	.value	-9
	.type	g_58, @object
	.size	g_58, 1
g_58:
	.byte	7
	.align 4
	.type	g_29, @object
	.size	g_29, 4
g_29:
	.long	4
	.align 4
	.type	crc32_context, @object
	.size	crc32_context, 4
crc32_context:
	.long	-1
	.local	crc32_tab
	.comm	crc32_tab,1024,32
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC0:
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	6
	.long	7
	.ident	"GCC: (GNU) 13.2.1 20230801"
	.section	.note.GNU-stack,"",@progbits


