--- Interesting Case Report --- 

Interesting Variables: 
['g_3', 'g_228', 'g_195']

Interesting Assembly Lines: 
{'g_3': {'setting1:': [['movb', '$1,', 'g_3(%rip)']], 'setting2': [['movl', '$1,', 'g_3(%rip)']]}, 'g_228': {'setting1:': [], 'setting2': [['movl', '$0,', 'g_228(%rip)']]}, 'g_195': {'setting1:': [], 'setting2': [['movb', '$0,', 'g_195(%rip)']]}}

Source Code: 
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles --no-volatile-pointers --no-arrays --no-bitfields --checksum --no-comma-operators --compound-assignment --no-consts --divs --no-embedded-assigns --jumps --no-longlong --no-force-non-uniform-arrays --no-math64 --muls --no-packed-struct --no-paranoid --pointers --structs --inline-function --return-structs --arg-structs --dangling-global-pointers
 * Seed:      17740882882436419826
 */


#define NO_LONGLONG

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
/* --- GLOBAL VARIABLES --- */
static int32_t g_3 = 0x7D8A8701;
static int32_t g_34 = 0xEDB7758B;
static uint32_t g_158 = 0xF93B9B47;
static int8_t g_194 = 0xC7;
static int8_t g_195 = 0;
static uint32_t g_228 = 0x4EFFBF5E;
static int32_t **g_233 = (void*)0;
static uint8_t g_253 = 255U;
static int16_t g_290 = 1;
static int32_t ***g_329 = (void*)0;
static int32_t ****g_328 = &g_329;
static int32_t *****g_327 = &g_328;
static int32_t g_357 = 0xF60FB972;
static int32_t g_391 = (-7);
static uint32_t g_419 = 0xE3233A39;


/* --- FORWARD DECLARATIONS --- */
static int32_t  func_1(void);
inline static int32_t  func_4(int32_t * p_5, int32_t * p_6);
inline static int32_t * func_7(int16_t  p_8, int32_t * p_9);
inline static int8_t  func_14(int32_t * p_15, uint32_t  p_16, int32_t * p_17, int32_t * p_18);
static int32_t * func_19(uint16_t  p_20, uint32_t  p_21, uint16_t  p_22, int8_t  p_23);
static int8_t  func_26(uint16_t  p_27, uint8_t  p_28, int32_t * p_29);
static uint16_t  func_76(int32_t * p_77);
static int32_t * func_78(int32_t ** p_79, int32_t ** p_80, int32_t ** p_81, int32_t ** p_82, int32_t  p_83);
static int32_t ** func_84(uint8_t  p_85, int32_t  p_86);
inline static uint8_t  func_87(int32_t ** p_88, int32_t * p_89, int32_t * p_90, int8_t  p_91, uint32_t  p_92);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_3 g_34 g_158 g_228 g_233 g_194 g_195 g_253 g_327 g_290 g_357 g_329 g_419 g_391
 * writes: g_3 g_34 g_158 g_228 g_195 g_253 g_357 g_419 g_391
 */
static int32_t  func_1(void)
{ /* block id: 0 */
    int32_t *l_2 = &g_3;
    int32_t *l_378 = (void*)0;
    int32_t *l_422 = &g_391;
    int32_t **l_423 = &l_2;
    (*l_2) ^= 0x540D7F82;
    (*l_2) ^= 0;
    (*l_422) ^= func_4(func_7((g_3 >= g_3), &g_3), l_378);
    (*l_423) = l_378;
    return g_228;
}


/* ------------------------------------------ */
/* 
 * reads : g_419 g_3
 * writes: g_3 g_419
 */
inline static int32_t  func_4(int32_t * p_5, int32_t * p_6)
{ /* block id: 90 */
    int32_t *l_379 = (void*)0;
    int32_t l_380 = 0;
    int32_t l_381 = 7;
    int32_t *l_382 = &g_357;
    int32_t *l_383 = &l_381;
    int32_t *l_384 = &l_381;
    int32_t *l_385 = (void*)0;
    int32_t *l_386 = &g_357;
    int32_t *l_387 = &g_357;
    int32_t *l_388 = &l_381;
    int32_t *l_389 = (void*)0;
    int32_t *l_390 = &g_3;
    int32_t *l_392 = &g_391;
    int32_t *l_393 = &l_380;
    int32_t *l_394 = &g_3;
    int32_t *l_395 = (void*)0;
    int32_t *l_396 = &g_3;
    int32_t *l_397 = &g_3;
    int32_t *l_398 = &l_381;
    int32_t *l_399 = &g_3;
    int32_t *l_400 = &g_391;
    int32_t *l_401 = &l_380;
    int32_t *l_402 = &g_357;
    int32_t *l_403 = &l_380;
    int32_t *l_404 = (void*)0;
    int32_t *l_405 = &l_381;
    int32_t *l_406 = &l_380;
    int32_t l_407 = 0x2848F1E6;
    int32_t *l_408 = &l_381;
    int32_t *l_409 = &g_357;
    int32_t *l_410 = &g_3;
    int32_t *l_411 = &l_407;
    int32_t l_412 = 1;
    int32_t *l_413 = &l_407;
    int32_t *l_414 = &g_391;
    int32_t l_415 = 0xBEA07A3B;
    int32_t *l_416 = &l_415;
    int32_t *l_417 = &g_3;
    int32_t *l_418 = &l_412;
    (*p_5) = (l_379 == (void*)0);
    g_419--;
    return (*p_5);
}


/* ------------------------------------------ */
/* 
 * reads : g_3 g_34 g_158 g_228 g_233 g_194 g_195 g_253 g_327 g_290 g_357 g_329
 * writes: g_34 g_3 g_158 g_228 g_195 g_253 g_357
 */
inline static int32_t * func_7(int16_t  p_8, int32_t * p_9)
{ /* block id: 3 */
    int32_t *l_25 = &g_3;
    int32_t l_376 = 0x75B281ED;
    int32_t *l_377 = &g_3;
    (*p_9) = (safe_mul_func_int8_t_s_s((safe_div_func_int8_t_s_s(func_14(func_19((((+((void*)0 != l_25)) < (func_26(p_8, (&g_3 == l_25), &g_3) != ((safe_add_func_uint16_t_u_u(p_8, p_8)) != 0xF4))) > (-1)), g_194, p_8, g_194), p_8, p_9, l_25), p_8)), l_376));
    return l_377;
}


/* ------------------------------------------ */
/* 
 * reads : g_3 g_228 g_194 g_195 g_253 g_327 g_34 g_290 g_357 g_329
 * writes: g_357 g_3 g_228
 */
inline static int8_t  func_14(int32_t * p_15, uint32_t  p_16, int32_t * p_17, int32_t * p_18)
{ /* block id: 73 */
    int32_t *l_300 = &g_3;
    int32_t **l_299 = &l_300;
    int32_t ***l_326 = &g_233;
    int32_t ****l_325 = &l_326;
    int32_t *****l_324 = &l_325;
    uint32_t l_338 = 0x53018A90;
    int32_t *l_340 = &g_3;
    uint8_t l_373 = 0x31;
    (*l_299) = func_78(l_299, &p_18, &l_300, &l_300, (**l_299));
    if ((**l_299))
    { /* block id: 75 */
        int32_t l_303 = 0x1E2C77FF;
        int32_t l_339 = 0xE7944019;
        (*l_299) = func_19((safe_mul_func_int16_t_s_s(p_16, (((void*)0 != (*l_299)) && (0x212F & l_303)))), (**l_299), g_3, (safe_div_func_uint32_t_u_u((safe_mul_func_uint8_t_u_u(g_228, 0U)), (*l_300))));
        l_339 |= (safe_mul_func_uint8_t_u_u((g_228 == (safe_sub_func_uint16_t_u_u((((safe_mod_func_int8_t_s_s(((((((+(p_16 >= ((safe_rshift_func_int8_t_s_s(g_253, 4)) & (!(((*p_17) ^ ((safe_lshift_func_uint16_t_u_u(0U, (((((safe_mod_func_int16_t_s_s(((l_324 == g_327) == (safe_div_func_uint16_t_u_u(((safe_sub_func_uint8_t_u_u((safe_add_func_int8_t_s_s((0xF8 < ((safe_mod_func_int8_t_s_s(p_16, g_3)) <= l_303)), (-1))), p_16)) || g_195), g_34))), 0x4686)) == l_303) <= l_303) < p_16) & l_338))) > (*p_17))) == 2U))))) != 0x9C22) | l_303) < p_16) != (*p_17)) != g_34), g_290)) | l_303) || g_34), p_16))), 0x19));
    }
    else
    { /* block id: 78 */
        int32_t **l_353 = &l_300;
        int32_t *l_356 = &g_357;
        int32_t ****l_370 = &g_329;
        (*l_356) &= ((l_340 != p_18) <= (safe_add_func_uint16_t_u_u((((((safe_div_func_int8_t_s_s((safe_add_func_uint8_t_u_u((safe_lshift_func_uint8_t_u_s((((safe_rshift_func_int8_t_s_u(g_253, 2)) >= (((safe_rshift_func_uint16_t_u_u(((((l_353 == (void*)0) ^ ((p_15 == p_17) > ((0xAC852239 == ((safe_lshift_func_int16_t_s_u(((((**l_299) <= g_253) && p_16) | p_16), 2)) || (**l_353))) > p_16))) <= 0x2498) || 0xE2), 9)) <= p_16) && p_16)) & p_16), g_195)), 9)), (**l_353))) < p_16) != (*l_340)) != g_228) < (-9)), g_34)));
        (*p_18) = ((((safe_mod_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_u((safe_div_func_int8_t_s_s(((safe_mod_func_uint16_t_u_u((safe_sub_func_uint8_t_u_u(((void*)0 == &l_353), (p_16 ^ (l_370 == (void*)0)))), ((safe_mul_func_int8_t_s_s((p_16 >= ((void*)0 != (*l_370))), ((void*)0 != p_18))) || (*l_356)))) && p_16), g_3)), g_357)), 0xF84E)) && (*l_300)) & l_373) >= g_3);
    }
    for (g_228 = 0; (g_228 == 30); g_228++)
    { /* block id: 84 */
        return g_195;
    }
    return p_16;
}


/* ------------------------------------------ */
/* 
 * reads : g_195
 * writes:
 */
static int32_t * func_19(uint16_t  p_20, uint32_t  p_21, uint16_t  p_22, int8_t  p_23)
{ /* block id: 58 */
    int32_t l_272 = (-1);
    int32_t l_273 = 0x55C0660A;
    int32_t l_289 = 0x652A4294;
    int32_t *l_298 = (void*)0;
    l_272 ^= g_195;
    l_273 |= l_272;
    if (p_21)
    { /* block id: 61 */
        uint32_t l_291 = 0x0B09ED61;
        int32_t **l_294 = (void*)0;
        int32_t *l_296 = &l_289;
        int32_t **l_295 = &l_296;
        for (p_20 = 0; (p_20 < 59); p_20 = safe_add_func_int32_t_s_s(p_20, 7))
        { /* block id: 64 */
            int32_t *l_276 = &l_273;
            int32_t *l_277 = &l_273;
            int32_t *l_278 = &g_3;
            int32_t *l_279 = &g_3;
            int32_t *l_280 = &g_3;
            int32_t *l_281 = &g_3;
            int32_t *l_282 = &l_273;
            int32_t *l_283 = &g_3;
            int32_t *l_284 = &l_273;
            int32_t *l_285 = &g_3;
            int32_t *l_286 = &g_3;
            int32_t *l_287 = &l_273;
            int32_t *l_288 = &g_3;
            l_291++;
            return &g_3;
        }
        (*l_295) = (void*)0;
    }
    else
    { /* block id: 69 */
        int32_t *l_297 = &l_273;
        return &g_3;
    }
    return l_298;
}


/* ------------------------------------------ */
/* 
 * reads : g_3 g_34 g_158 g_228 g_233 g_194 g_195 g_253
 * writes: g_34 g_3 g_158 g_228 g_195 g_253
 */
static int8_t  func_26(uint16_t  p_27, uint8_t  p_28, int32_t * p_29)
{ /* block id: 4 */
    int32_t l_35 = 7;
    int32_t *l_36 = (void*)0;
    int32_t *l_37 = &g_3;
    int32_t *l_38 = &g_3;
    int32_t *l_39 = &g_3;
    int32_t *l_40 = &g_3;
    int32_t *l_41 = &g_3;
    int32_t l_42 = (-10);
    int32_t l_43 = 0xBBC254E7;
    int32_t l_44 = 0x59F89F2E;
    int32_t *l_45 = &l_43;
    int32_t *l_46 = &g_3;
    int32_t *l_47 = &g_3;
    int32_t *l_48 = &g_3;
    int32_t l_49 = 0;
    int32_t *l_50 = &l_49;
    int32_t *l_51 = &g_3;
    int32_t *l_52 = &l_42;
    int32_t *l_53 = &l_43;
    int32_t *l_54 = &l_43;
    int32_t *l_55 = &l_42;
    int32_t *l_56 = (void*)0;
    int32_t *l_57 = &l_49;
    int32_t *l_58 = &l_44;
    int32_t *l_59 = &l_43;
    int32_t *l_60 = &l_44;
    int32_t *l_61 = &l_43;
    int32_t *l_62 = (void*)0;
    int32_t *l_63 = (void*)0;
    int32_t *l_64 = &l_42;
    int32_t *l_65 = &l_44;
    int32_t *l_66 = &g_3;
    int32_t *l_67 = &l_43;
    int32_t *l_68 = &l_43;
    int32_t *l_69 = (void*)0;
    int32_t *l_70 = &l_44;
    int32_t *l_71 = &l_44;
    int32_t *l_72 = &g_3;
    uint32_t l_73 = 4294967290U;
    int32_t ***l_269 = &g_233;
    int32_t ****l_268 = &l_269;
    int32_t *****l_267 = &l_268;
    for (p_28 = 0; (p_28 != 58); p_28 = safe_add_func_int16_t_s_s(p_28, 1))
    { /* block id: 7 */
        int32_t *l_33 = (void*)0;
        int32_t **l_32 = &l_33;
        (*l_32) = &g_3;
        g_34 &= (*p_29);
        if ((*p_29))
            continue;
    }
    l_73++;
    if (((func_76(func_78(func_84(func_87(&l_70, &g_3, p_29, p_28, p_28), (safe_rshift_func_int8_t_s_u((safe_mod_func_int16_t_s_s((safe_mod_func_int32_t_s_s((safe_mod_func_uint8_t_u_u(((-1) > (+((0U >= (g_34 > g_34)) < g_34))), g_34)), 1U)), (*l_52))), p_27))), g_233, g_233, &l_66, p_27)) && (*l_48)) <= 0xEA))
    { /* block id: 49 */
        int32_t ***l_252 = &g_233;
        int32_t ****l_251 = &l_252;
        (*l_251) = &g_233;
        --g_253;
    }
    else
    { /* block id: 52 */
        (*l_48) = ((((safe_unary_minus_func_int16_t_s(0xA174)) | ((void*)0 != &g_233)) == 0x7174) <= ((safe_mul_func_int16_t_s_s((safe_rshift_func_int16_t_s_s(((*l_46) | ((safe_add_func_uint8_t_u_u(g_158, (*l_53))) && (*p_29))), (safe_rshift_func_uint16_t_u_u((*l_46), g_228)))), p_28)) ^ p_28));
        return (*l_51);
    }
    l_267 = (void*)0;
    return g_158;
}


/* ------------------------------------------ */
/* 
 * reads : g_195 g_34
 * writes: g_195
 */
static uint16_t  func_76(int32_t * p_77)
{ /* block id: 41 */
    int32_t *l_248 = &g_3;
    l_248 = l_248;
    for (g_195 = 0; (g_195 <= (-11)); --g_195)
    { /* block id: 45 */
        return g_195;
    }
    return g_34;
}


/* ------------------------------------------ */
/* 
 * reads : g_228 g_194
 * writes:
 */
static int32_t * func_78(int32_t ** p_79, int32_t ** p_80, int32_t ** p_81, int32_t ** p_82, int32_t  p_83)
{ /* block id: 38 */
    int8_t l_240 = 1;
    int32_t *l_245 = (void*)0;
    uint16_t l_246 = 0xC930;
    int32_t l_247 = 0x5EFA727D;
    l_247 = (safe_mod_func_int16_t_s_s(((((safe_rshift_func_int8_t_s_s((safe_sub_func_uint8_t_u_u(((l_240 > g_228) & 0x42CAA49F), (((safe_rshift_func_int16_t_s_s(l_240, ((safe_lshift_func_int8_t_s_u((l_245 == &g_3), ((g_194 | ((*p_82) != l_245)) || l_246))) >= g_194))) == 0x128F678E) < l_240))), 0)) & l_240) != l_240) ^ (-1)), p_83));
    return (*p_82);
}


/* ------------------------------------------ */
/* 
 * reads : g_158 g_228 g_233
 * writes: g_158 g_228
 */
static int32_t ** func_84(uint8_t  p_85, int32_t  p_86)
{ /* block id: 25 */
    uint16_t l_200 = 65526U;
    int32_t *l_231 = &g_3;
    for (p_86 = 0; (p_86 == (-12)); --p_86)
    { /* block id: 28 */
        int32_t *l_203 = &g_3;
        int32_t *l_204 = &g_3;
        int32_t *l_205 = &g_3;
        int32_t *l_206 = &g_3;
        int32_t l_207 = 1;
        int32_t *l_208 = &l_207;
        int32_t *l_209 = (void*)0;
        int32_t l_210 = 0x583F0299;
        int32_t *l_211 = &l_210;
        int32_t *l_212 = &g_3;
        int32_t *l_213 = (void*)0;
        int32_t *l_214 = &l_210;
        int32_t *l_215 = &l_210;
        int32_t *l_216 = &l_207;
        int32_t *l_217 = &l_210;
        int32_t l_218 = 0x458F42BE;
        int32_t *l_219 = &l_207;
        int32_t l_220 = 1;
        int32_t *l_221 = &l_210;
        int32_t *l_222 = &l_210;
        int32_t *l_223 = &l_218;
        int32_t *l_224 = &l_218;
        int32_t *l_225 = &g_3;
        int32_t *l_226 = &l_210;
        int32_t *l_227 = &l_218;
        int32_t **l_232 = &l_216;
        for (g_158 = 12; (g_158 > 16); g_158 = safe_add_func_int8_t_s_s(g_158, 8))
        { /* block id: 31 */
            int32_t *l_180 = &g_3;
            int32_t *l_181 = &g_3;
            int32_t *l_182 = &g_3;
            int32_t *l_183 = &g_3;
            int32_t *l_184 = &g_3;
            int32_t *l_185 = &g_3;
            int32_t *l_186 = &g_3;
            int32_t *l_187 = &g_3;
            int32_t *l_188 = &g_3;
            int32_t *l_189 = &g_3;
            int32_t *l_190 = (void*)0;
            int32_t *l_191 = (void*)0;
            int32_t *l_192 = &g_3;
            int32_t *l_193 = (void*)0;
            int32_t *l_196 = (void*)0;
            int32_t *l_197 = &g_3;
            int32_t *l_198 = (void*)0;
            int32_t *l_199 = &g_3;
            --l_200;
        }
        --g_228;
        (*l_232) = l_231;
    }
    return g_233;
}


/* ------------------------------------------ */
/* 
 * reads : g_34 g_3 g_158
 * writes: g_3 g_158
 */
inline static uint8_t  func_87(int32_t ** p_88, int32_t * p_89, int32_t * p_90, int8_t  p_91, uint32_t  p_92)
{ /* block id: 13 */
    int32_t *l_105 = &g_3;
    int32_t **l_104 = &l_105;
    uint32_t l_127 = 5U;
    int32_t l_130 = (-2);
    int32_t l_144 = 0xFBA83E1A;
    int32_t l_156 = 0;
    int32_t l_157 = 0x08B304F1;
    (*p_89) = (safe_mul_func_uint8_t_u_u((safe_rshift_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_s(p_92, 3)), 11)), p_91));
    if ((+(safe_lshift_func_uint16_t_u_s((safe_lshift_func_int16_t_s_u(((void*)0 != l_104), ((*l_104) == &g_3))), (((safe_div_func_int8_t_s_s(g_34, (safe_div_func_int8_t_s_s((((((*p_88) != (*p_88)) <= (((safe_div_func_int8_t_s_s((safe_lshift_func_uint8_t_u_u(((safe_sub_func_int8_t_s_s((safe_lshift_func_int8_t_s_s((safe_rshift_func_uint16_t_u_s((*l_105), 9)), (g_34 ^ 4U))), 0)) <= 0xBA), p_91)), 0x77)) > 0xE68AC39F) >= p_92)) || 0) > p_91), p_92)))) >= 0x84) & (-4))))))
    { /* block id: 15 */
        int32_t *l_120 = &g_3;
        int32_t *l_121 = &g_3;
        int32_t *l_122 = &g_3;
        int32_t *l_123 = &g_3;
        int32_t *l_124 = &g_3;
        int32_t *l_125 = (void*)0;
        int32_t *l_126 = &g_3;
        l_127++;
        (**l_104) = (*l_105);
    }
    else
    { /* block id: 18 */
        int32_t *l_131 = &g_3;
        int32_t *l_132 = &g_3;
        int32_t *l_133 = (void*)0;
        int32_t *l_134 = &g_3;
        int32_t *l_135 = &g_3;
        int32_t *l_136 = &l_130;
        int32_t *l_137 = &l_130;
        int32_t *l_138 = &g_3;
        int32_t *l_139 = &g_3;
        int32_t *l_140 = (void*)0;
        int32_t *l_141 = (void*)0;
        int32_t *l_142 = &l_130;
        int8_t l_143 = (-3);
        int32_t *l_145 = &l_130;
        int32_t *l_146 = &g_3;
        int32_t *l_147 = &l_144;
        int32_t *l_148 = &l_130;
        int32_t *l_149 = &l_144;
        int32_t *l_150 = &l_130;
        int32_t *l_151 = &l_144;
        int32_t *l_152 = &l_144;
        int32_t *l_153 = &l_130;
        int32_t *l_154 = &l_130;
        int32_t *l_155 = &g_3;
        (**p_88) ^= (-8);
        --g_158;
        (*p_88) = &g_3;
        (*l_147) &= ((safe_lshift_func_int16_t_s_s((*l_105), (*l_153))) & (0U < (safe_mul_func_int16_t_s_s(((void*)0 == (*p_88)), 0x0CCA))));
    }
    return p_92;
}




/* ---------------------------------------- */
int main (void)
{
    int print_hash_value = 0;
    platform_main_begin();
    crc32_gentab();
    func_1();
    transparent_crc(g_3, "g_3", print_hash_value);
    transparent_crc(g_34, "g_34", print_hash_value);
    transparent_crc(g_158, "g_158", print_hash_value);
    transparent_crc(g_194, "g_194", print_hash_value);
    transparent_crc(g_195, "g_195", print_hash_value);
    transparent_crc(g_228, "g_228", print_hash_value);
    transparent_crc(g_253, "g_253", print_hash_value);
    transparent_crc(g_290, "g_290", print_hash_value);
    transparent_crc(g_357, "g_357", print_hash_value);
    transparent_crc(g_391, "g_391", print_hash_value);
    transparent_crc(g_419, "g_419", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 61
XXX total union variables: 0

XXX max expression depth: 33
breakdown:
   depth: 1, occurrence: 76
   depth: 2, occurrence: 7
   depth: 4, occurrence: 1
   depth: 6, occurrence: 3
   depth: 11, occurrence: 1
   depth: 12, occurrence: 1
   depth: 18, occurrence: 2
   depth: 21, occurrence: 1
   depth: 22, occurrence: 1
   depth: 24, occurrence: 1
   depth: 30, occurrence: 1
   depth: 33, occurrence: 1

XXX total number of pointers: 204

XXX times a variable address is taken: 176
XXX times a pointer is dereferenced on RHS: 35
breakdown:
   depth: 1, occurrence: 29
   depth: 2, occurrence: 6
XXX times a pointer is dereferenced on LHS: 20
breakdown:
   depth: 1, occurrence: 18
   depth: 2, occurrence: 2
XXX times a pointer is compared with null: 11
XXX times a pointer is compared with address of another variable: 4
XXX times a pointer is compared with another pointer: 4
XXX times a pointer is qualified to be dereferenced: 455

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 75
   level: 2, occurrence: 14
   level: 3, occurrence: 7
   level: 4, occurrence: 11
   level: 5, occurrence: 8
XXX number of pointers point to pointers: 27
XXX number of pointers point to scalars: 177
XXX number of pointers point to structs: 0
XXX percent of pointers has null in alias set: 18.6
XXX average alias set size: 1.06

XXX times a non-volatile is read: 213
XXX times a non-volatile is write: 63
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 0

XXX stmts: 61
XXX max block depth: 2
breakdown:
   depth: 0, occurrence: 33
   depth: 1, occurrence: 25
   depth: 2, occurrence: 3

XXX percentage a fresh-made variable is used: 21
XXX percentage an existing variable is used: 79
********************* end of statistics **********************/



Assembly Code with Setting 1: 
	.text
	.file	"tmpj8g4w52z.c"
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5, 0x0                          # -- Begin function main
.LCPI0_0:
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	2                               # 0x2
	.long	3                               # 0x3
	.long	4                               # 0x4
	.long	5                               # 0x5
	.long	6                               # 0x6
	.long	7                               # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0
.LCPI0_1:
	.long	3988292384                      # 0xedb88320
.LCPI0_2:
	.long	8                               # 0x8
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	vmovdqa	.LCPI0_0(%rip), %ymm0           # ymm0 = [0,1,2,3,4,5,6,7]
	xorl	%ecx, %ecx
	vpbroadcastd	.LCPI0_1(%rip), %ymm1   # ymm1 = [3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384,3988292384]
	leaq	crc32_tab(%rip), %rax
	vpbroadcastd	.LCPI0_2(%rip), %ymm2   # ymm2 = [8,8,8,8,8,8,8,8]
	.p2align	4, 0x90
.LBB0_1:                                # =>This Inner Loop Header: Depth=1
	vpsrld	$1, %ymm0, %ymm3
	vpxor	%ymm1, %ymm3, %ymm4
	vpslld	$31, %ymm0, %ymm5
	vblendvps	%ymm5, %ymm4, %ymm3, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vpsrld	$1, %ymm3, %ymm4
	vpxor	%ymm1, %ymm4, %ymm5
	vpslld	$31, %ymm3, %ymm3
	vblendvps	%ymm3, %ymm5, %ymm4, %ymm3
	vmovups	%ymm3, (%rcx,%rax)
	vpaddd	%ymm2, %ymm0, %ymm0
	addq	$32, %rcx
	cmpq	$1024, %rcx                     # imm = 0x400
	jne	.LBB0_1
# %bb.2:
	cmpb	$0, g_3(%rip)
	movl	$1410170755, %ecx               # imm = 0x540D7F83
	movl	$696776835, %edx                # imm = 0x2987F883
	cmovnel	%ecx, %edx
	andl	g_34(%rip), %edx
	movl	%edx, g_34(%rip)
	movzbl	g_253(%rip), %esi
	decb	%sil
	movb	%sil, g_253(%rip)
	movl	g_357(%rip), %ecx
	movl	crc32_context(%rip), %edi
	movzbl	%dil, %r8d
                                        # kill: def $edi killed $edi killed $rdi
	shrl	$8, %edi
	xorq	$1, %r8
	xorl	(%rax,%r8,4), %edi
	movzbl	%dil, %r8d
	shrl	$8, %edi
	xorl	(%rax,%r8,4), %edi
	movzbl	%dil, %r8d
	shrl	$8, %edi
	xorl	(%rax,%r8,4), %edi
	movzbl	%dil, %r8d
	shrl	$8, %edi
	xorl	(%rax,%r8,4), %edi
	andl	$1, %ecx
	movl	%edi, %r8d
	shrl	$8, %r8d
	xorl	%edx, %edi
	movzbl	%dil, %edi
	xorl	(%rax,%rdi,4), %r8d
	movl	%edx, %edi
	shrl	$8, %edi
	xorl	%r8d, %edi
	shrl	$8, %r8d
	movzbl	%dil, %edi
	xorl	(%rax,%rdi,4), %r8d
	movl	%edx, %edi
	shrl	$16, %edi
	xorl	%r8d, %edi
	shrl	$8, %r8d
	movzbl	%dil, %edi
	xorl	(%rax,%rdi,4), %r8d
	shrl	$24, %edx
	movzbl	%r8b, %edi
	shrl	$8, %r8d
	xorl	%edx, %edi
	xorl	(%rax,%rdi,4), %r8d
	movl	%ecx, g_357(%rip)
	movzbl	%r8b, %edx
	shrl	$8, %r8d
	xorl	$71, %edx
	xorl	(%rax,%rdx,4), %r8d
	movb	$1, g_3(%rip)
	movzbl	%r8b, %edx
	shrl	$8, %r8d
	xorl	$155, %edx
	xorl	(%rax,%rdx,4), %r8d
	movl	g_419(%rip), %edx
	movzbl	%r8b, %edi
	shrl	$8, %r8d
	xorl	$59, %edi
	xorl	(%rax,%rdi,4), %r8d
	decl	%edx
	movzbl	%r8b, %edi
	shrl	$8, %r8d
	xorl	$249, %edi
	xorl	(%rax,%rdi,4), %r8d
	movl	%edx, g_419(%rip)
	movzbl	%r8b, %edi
	movl	%r8d, %r9d
	shrl	$8, %r9d
	xorl	$199, %edi
	xorl	(%rax,%rdi,4), %r9d
	movl	g_391(%rip), %edi
	movl	%edi, %r8d
	movl	%r9d, %r10d
	notl	%r10d
	shrl	$8, %r9d
	movzbl	%r10b, %r10d
	xorl	(%rax,%r10,4), %r9d
	movl	%r9d, %r10d
	notl	%r10d
	shrl	$8, %r9d
	movzbl	%r10b, %r10d
	xorl	(%rax,%r10,4), %r9d
	movl	%r9d, %r10d
	notl	%r10d
	shrl	$8, %r9d
	movzbl	%r10b, %r10d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%sil, %esi
	movzbl	%r9b, %r10d
	shrl	$8, %r9d
	xorl	%esi, %r10d
	xorl	(%rax,%r10,4), %r9d
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	(%rax,%rsi,4), %r9d
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	(%rax,%rsi,4), %r9d
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	(%rax,%rsi,4), %r9d
	xorl	$1, %r8d
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	$1, %esi
	xorl	(%rax,%rsi,4), %r9d
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	(%rax,%rsi,4), %r9d
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	(%rax,%rsi,4), %r9d
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	(%rax,%rsi,4), %r9d
	movl	%r8d, g_391(%rip)
	movzbl	%r9b, %esi
	shrl	$8, %r9d
	xorl	%ecx, %esi
	xorl	(%rax,%rsi,4), %r9d
	movzbl	%r9b, %ecx
	shrl	$8, %r9d
	xorl	(%rax,%rcx,4), %r9d
	movzbl	%r9b, %ecx
	shrl	$8, %r9d
	xorl	(%rax,%rcx,4), %r9d
	movzbl	%r9b, %ecx
	shrl	$8, %r9d
	xorl	(%rax,%rcx,4), %r9d
	movl	%r9d, %ecx
	shrl	$8, %ecx
	xorl	%r8d, %r9d
	movzbl	%r9b, %esi
	xorl	(%rax,%rsi,4), %ecx
	movl	%edi, %esi
	shrl	$8, %esi
	xorl	%ecx, %esi
	shrl	$8, %ecx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %ecx
	movl	%edi, %esi
	shrl	$16, %esi
	xorl	%ecx, %esi
	shrl	$8, %ecx
	movzbl	%sil, %esi
	xorl	(%rax,%rsi,4), %ecx
	shrl	$24, %edi
	movzbl	%cl, %esi
	shrl	$8, %ecx
	xorl	%edi, %esi
	xorl	(%rax,%rsi,4), %ecx
	movl	%ecx, %esi
	shrl	$8, %esi
	xorl	%edx, %ecx
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%edx, %ecx
	shrl	$8, %ecx
	xorl	%esi, %ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%edx, %ecx
	shrl	$16, %ecx
	xorl	%esi, %ecx
	shrl	$8, %esi
	movzbl	%cl, %ecx
	xorl	(%rax,%rcx,4), %esi
	shrl	$24, %edx
	movzbl	%sil, %ecx
	shrl	$8, %esi
	xorl	%edx, %ecx
	xorl	(%rax,%rcx,4), %esi
	movl	%esi, crc32_context(%rip)
	notl	%esi
	leaq	.L.str.12(%rip), %rdi
	xorl	%eax, %eax
	vzeroupper
	callq	printf@PLT
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc
                                        # -- End function
	.type	g_3,@object                     # @g_3
	.local	g_3
	.comm	g_3,1,4
	.type	g_34,@object                    # @g_34
	.data
	.p2align	2, 0x0
g_34:
	.long	3988223371                      # 0xedb7758b
	.size	g_34, 4

	.type	g_253,@object                   # @g_253
g_253:
	.byte	255                             # 0xff
	.size	g_253, 1

	.type	g_357,@object                   # @g_357
	.p2align	2, 0x0
g_357:
	.long	4128225650                      # 0xf60fb972
	.size	g_357, 4

	.type	g_391,@object                   # @g_391
	.p2align	2, 0x0
g_391:
	.long	4294967289                      # 0xfffffff9
	.size	g_391, 4

	.type	g_419,@object                   # @g_419
	.p2align	2, 0x0
g_419:
	.long	3810736697                      # 0xe3233a39
	.size	g_419, 4

	.type	crc32_context,@object           # @crc32_context
	.p2align	2, 0x0
crc32_context:
	.long	4294967295                      # 0xffffffff
	.size	crc32_context, 4

	.type	crc32_tab,@object               # @crc32_tab
	.local	crc32_tab
	.comm	crc32_tab,1024,16
	.type	.L.str.12,@object               # @.str.12
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.12:
	.asciz	"checksum = %X\n"
	.size	.L.str.12, 15

	.ident	"clang version 16.0.6"
	.section	".note.GNU-stack","",@progbits
	.addrsig


Assembly Code with Setting 2: 
	.file	"tmprkl7cfcn.c"
	.text
	.p2align 4
	.type	crc32_8bytes, @function
crc32_8bytes:
.LFB84:
	.cfi_startproc
	movl	crc32_context(%rip), %eax
	leaq	crc32_tab(%rip), %rsi
	movl	%edi, %edx
	movl	%eax, %ecx
	shrl	$8, %eax
	xorl	%edi, %ecx
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movzbl	%dh, %ecx
	shrl	$24, %edx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	movl	%edi, %ecx
	shrl	$16, %ecx
	xorl	%eax, %ecx
	shrl	$8, %eax
	movzbl	%cl, %ecx
	xorl	(%rsi,%rcx,4), %eax
	xorl	%eax, %edx
	shrl	$8, %eax
	movzbl	%dl, %edx
	xorl	(%rsi,%rdx,4), %eax
	movl	%eax, crc32_context(%rip)
	ret
	.cfi_endproc
.LFE84:
	.size	crc32_8bytes, .-crc32_8bytes
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC4:
	.string	"checksum = %X\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LFB97:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movl	$8, %ecx
	leaq	crc32_tab(%rip), %rax
	vmovdqa	.LC0(%rip), %ymm5
	vmovd	%ecx, %xmm6
	leaq	1024(%rax), %rdx
	vpxor	%xmm4, %xmm4, %xmm4
	movl	$1, %ecx
	vmovd	%ecx, %xmm3
	movl	$-306674912, %ecx
	vpbroadcastd	%xmm6, %ymm6
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	vmovd	%ecx, %xmm2
	vpbroadcastd	%xmm3, %ymm3
	vpbroadcastd	%xmm2, %ymm2
	andq	$-32, %rsp
	.cfi_offset 3, -24
	.p2align 4,,10
	.p2align 3
.L4:
	vmovdqa	%ymm5, %ymm1
	addq	$32, %rax
	vpaddd	%ymm6, %ymm5, %ymm5
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm1
	vpand	%ymm3, %ymm1, %ymm0
	vpsrld	$1, %ymm1, %ymm1
	vpsubd	%ymm0, %ymm4, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpxor	%ymm1, %ymm0, %ymm0
	vpand	%ymm3, %ymm0, %ymm1
	vpsrld	$1, %ymm0, %ymm0
	vpsubd	%ymm1, %ymm4, %ymm1
	vpand	%ymm2, %ymm1, %ymm1
	vpxor	%ymm0, %ymm1, %ymm0
	vmovdqa	%ymm0, -32(%rax)
	cmpq	%rdx, %rax
	jne	.L4
	movl	g_3(%rip), %eax
	movl	g_357(%rip), %r11d
	movl	$1, %edi
	movb	$0, g_195(%rip)
	movl	g_391(%rip), %r10d
	movl	$0, g_228(%rip)
	xorl	$1410170754, %eax
	andl	$1, %r11d
	movl	$1, g_3(%rip)
	vmovd	%eax, %xmm7
	andl	g_34(%rip), %eax
	xorl	$1, %r10d
	movl	%r11d, g_357(%rip)
	vpshufd	$0, %xmm7, %xmm0
	movl	%r10d, g_391(%rip)
	vpsrldq	$8, %xmm0, %xmm1
	vpand	%xmm1, %xmm0, %xmm0
	vpsrldq	$4, %xmm0, %xmm1
	vpand	%xmm1, %xmm0, %xmm0
	vmovd	%xmm0, %r8d
	andl	%eax, %r8d
	movzbl	g_253(%rip), %eax
	movl	%r8d, g_34(%rip)
	leal	-1(%rax), %ebx
	movl	g_419(%rip), %eax
	movb	%bl, g_253(%rip)
	leal	-1(%rax), %r9d
	movl	%r9d, g_419(%rip)
	call	crc32_8bytes
	movl	%r8d, %edi
	call	crc32_8bytes
	movl	$-113534137, %edi
	call	crc32_8bytes
	movl	$-57, %edi
	call	crc32_8bytes
	xorl	%edi, %edi
	call	crc32_8bytes
	call	crc32_8bytes
	movzbl	%bl, %edi
	call	crc32_8bytes
	movl	$1, %edi
	call	crc32_8bytes
	movl	%r11d, %edi
	call	crc32_8bytes
	movl	%r10d, %edi
	call	crc32_8bytes
	movl	%r9d, %edi
	call	crc32_8bytes
	movl	crc32_context(%rip), %esi
	leaq	.LC4(%rip), %rdi
	xorl	%eax, %eax
	notl	%esi
	call	printf@PLT
	movq	-8(%rbp), %rbx
	xorl	%eax, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE97:
	.size	main, .-main
	.data
	.align 4
	.type	g_419, @object
	.size	g_419, 4
g_419:
	.long	-484230599
	.align 4
	.type	g_391, @object
	.size	g_391, 4
g_391:
	.long	-7
	.align 4
	.type	g_357, @object
	.size	g_357, 4
g_357:
	.long	-166741646
	.type	g_253, @object
	.size	g_253, 1
g_253:
	.byte	-1
	.align 4
	.type	g_228, @object
	.size	g_228, 4
g_228:
	.long	1325383518
	.local	g_195
	.comm	g_195,1,1
	.align 4
	.type	g_34, @object
	.size	g_34, 4
g_34:
	.long	-306743925
	.align 4
	.type	g_3, @object
	.size	g_3, 4
g_3:
	.long	2106230529
	.align 4
	.type	crc32_context, @object
	.size	crc32_context, 4
crc32_context:
	.long	-1
	.local	crc32_tab
	.comm	crc32_tab,1024,32
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC0:
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	6
	.long	7
	.ident	"GCC: (GNU) 13.2.1 20230801"
	.section	.note.GNU-stack,"",@progbits


